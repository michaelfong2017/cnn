/*! For license information please see 177.fba19084.bundle.js.LICENSE.txt */
(self.webpackChunkreact_app=self.webpackChunkreact_app||[]).push([[177],{7228:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,s=new Array(t);n<t;n++)s[n]=e[n];return s}},2858:e=>{e.exports=function(e){if(Array.isArray(e))return e}},3646:(e,t,n)=>{var s=n(7228);e.exports=function(e){if(Array.isArray(e))return s(e)}},8926:e=>{function t(e,t,n,s,r,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(s,r)}e.exports=function(e){return function(){var n=this,s=arguments;return new Promise((function(r,a){var i=e.apply(n,s);function o(e){t(i,r,a,o,l,"next",e)}function l(e){t(i,r,a,o,l,"throw",e)}o(void 0)}))}}},6860:e=>{e.exports=function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}},3884:e=>{e.exports=function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],s=!0,r=!1,a=void 0;try{for(var i,o=e[Symbol.iterator]();!(s=(i=o.next()).done)&&(n.push(i.value),!t||n.length!==t);s=!0);}catch(e){r=!0,a=e}finally{try{s||null==o.return||o.return()}finally{if(r)throw a}}return n}}},521:e=>{e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},8206:e=>{e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},3038:(e,t,n)=>{var s=n(2858),r=n(3884),a=n(379),i=n(521);e.exports=function(e,t){return s(e)||r(e,t)||a(e,t)||i()}},8655:e=>{e.exports=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}},319:(e,t,n)=>{var s=n(3646),r=n(6860),a=n(379),i=n(8206);e.exports=function(e){return s(e)||r(e)||a(e)||i()}},379:(e,t,n)=>{var s=n(7228);e.exports=function(e,t){if(e){if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}},7757:(e,t,n)=>{e.exports=n(5666)},1966:(e,t,n)=>{"use strict";n.d(t,{FBF:()=>cm});var s={};n.r(s),n.d(s,{assertParamsValid:()=>zr,computeFlatOffset:()=>Jr,computeOutShape:()=>Br,getNormalizedAxes:()=>Gr,isSliceContinous:()=>Yr,maskToAxes:()=>Pr,parseSliceParams:()=>Zr,sliceInfo:()=>Qr,startForAxis:()=>qr,startIndicesWithElidedDims:()=>Hr,stopForAxis:()=>Xr,stopIndicesWithElidedDims:()=>jr,stridesForAxis:()=>Kr,stridesWithElidedDims:()=>Wr});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>au,computeOutShape:()=>ru,segOpComputeOptimalWindowSize:()=>su});var a={};n.r(a),n.d(a,{ERF_A1:()=>Wl,ERF_A2:()=>Ul,ERF_A3:()=>Vl,ERF_A4:()=>Gl,ERF_A5:()=>Hl,ERF_P:()=>Bl,PARALLELIZE_THRESHOLD:()=>Nl,SELU_SCALE:()=>Pl,SELU_SCALEALPHA:()=>zl,applyActivation:()=>Ao,assertAndGetBroadcastShape:()=>ei,assertAxesAreInnerMostDims:()=>Ei,assertParamsConsistent:()=>$l,assignToTypedArray:()=>Ql,axesAreInnerMostDims:()=>Ci,calculateShapes:()=>Ml,combineLocations:()=>Ni,complexWithEvenIndex:()=>Yl,complexWithOddIndex:()=>Jl,computeConv2DInfo:()=>ka,computeConv3DInfo:()=>wa,computeDefaultPad:()=>va,computeDilation2DInfo:()=>ba,computeOptimalWindowSize:()=>Sl,computeOutAndReduceShapes:()=>Si,computeOutShape:()=>Cl,computePool2DInfo:()=>ya,computePool3DInfo:()=>xa,convertConv2DDataFormat:()=>Ea,eitherStridesOrDilationsAreOne:()=>Ta,expandShapeToKeepDim:()=>Ti,exponent:()=>tu,exponents:()=>eu,fromStringArrayToUint8:()=>ou,fromUint8ToStringArray:()=>iu,getAxesPermutation:()=>Ri,getBroadcastDims:()=>Za,getComplexWithIndex:()=>Zl,getFusedBiasGradient:()=>Ro,getFusedDyActivation:()=>Eo,getImageCenter:()=>Tl,getInnerMostAxes:()=>Fi,getPermuted:()=>Rl,getReductionAxes:()=>Qa,getReshaped:()=>El,getReshapedPermuted:()=>Al,getSliceBeginCoords:()=>Fl,getSliceSize:()=>Dl,getUndoAxesPermutation:()=>Ai,log:()=>Kl,mergeRealAndImagArrays:()=>ql,prepareAndValidate:()=>_l,prepareSplitSize:()=>nu,segment_util:()=>r,shouldFuse:()=>Fo,slice_util:()=>s,splitRealAndImagArrays:()=>Xl,tupleValuesAreOne:()=>Sa,upcastType:()=>Cs,validateInput:()=>Ll,validateUpdateShape:()=>Ol,warn:()=>jl});var i={};n.r(i),n.d(i,{addImpl:()=>by,bincountImpl:()=>ux,bincountReduceImpl:()=>cx,ceilImpl:()=>px,concatImpl:()=>xx,expImpl:()=>ak,expm1Impl:()=>ck,floorImpl:()=>Ak,gatherV2Impl:()=>Bk,greaterImpl:()=>Uk,lessImpl:()=>tw,linSpaceImpl:()=>ow,logImpl:()=>uw,maxImpl:()=>$w,maximumImpl:()=>Sw,minimumImpl:()=>Pw,multiplyImpl:()=>pk,negImpl:()=>Xw,notEqualImpl:()=>sv,prodImpl:()=>gv,rangeImpl:()=>yv,rsqrtImpl:()=>Rv,simpleAbsImpl:()=>Ny,sliceImpl:()=>ax,squaredDifferenceImpl:()=>sI,stridedSliceImpl:()=>lI,subImpl:()=>kk,tileImpl:()=>pI,topKImpl:()=>fI,transposeImpl:()=>Dy,uniqueImpl:()=>xI});class o{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class l{refCount(e){return u("refCount")}incRef(e){return u("incRef")}timerAvailable(){return!0}time(e){return u("time")}read(e){return u("read")}readSync(e){return u("readSync")}numDataIds(){return u("numDataIds")}disposeData(e,t){return u("disposeData")}write(e,t,n){return u("write")}move(e,t,n,s,r){return u("move")}memory(){return u("memory")}floatPrecision(){return u("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return u("dispose")}}function u(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function c(e){let t=e.length,n=0,s=0;for(;t>0;)s=Math.random()*t|0,t--,n=e[t],e[t]=e[s],e[s]=n}function h(e,t,n){return Math.max(e,Math.min(t,n))}function d(e){return e%2==0?e:e+1}function p(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function f(e,t,n=""){p(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function m(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function g(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||E(e)&&!n)for(let s=0;s<e.length;++s)g(e[s],t,n);else t.push(e);return t}function b(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1==0}function k(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function v(e,t=(e=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(e())return void s();a++;const o=t(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function I(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function $(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function C(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:$(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function N(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function T(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function E(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function A(e){return"string"==typeof e||e instanceof String}function F(e){return"number"==typeof e}function D(e){return Array.isArray(e)?D(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":F(e)?"float32":A(e)?"string":"boolean"==typeof e?"bool":"float32"}function _(e){return!!(e&&e.constructor&&e.call&&e.apply)}function O(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function L(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function M(e,t,n){const s=new Array;if(1===t.length){const r=t[0];for(let t=0;t<r;t++)s[t]=n[e+t]}else{const r=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t));for(let t=0;t<r;t++)s[t]=M(e+t*i,a,n)}return s}function z(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return M(0,e,t)}function P(e,t){const n=B(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function B(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function W(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return z(e,new Float32Array(n));if("int32"===t)return z(e,new Int32Array(n));if("bool"===t)return z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function U(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function V(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function G(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function H(e){return e&&e.then&&"function"==typeof e.then}class j{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(H(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function K(){return X}let q,X=null;function Y(){if(null==q){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}q=e}return q}function J(e,t){const n=function(){const e=Y();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const Z="Abs",Q="Acos",ee="Acosh",te="Add",ne="AddN",se="All",re="Any",ae="ArgMax",ie="ArgMin",oe="Asin",le="Asinh",ue="Atan",ce="Atanh",he="Atan2",de="AvgPool",pe="AvgPoolGrad",fe="AvgPool3D",me="AvgPool3DGrad",ge="BatchMatMul",be="BatchToSpaceND",ye="Bincount",xe="Cast",ke="Ceil",we="ClipByValue",ve="Complex",Ie="ComplexAbs",$e="Concat",Ce="Conv2D",Ne="Conv2DBackpropFilter",Se="Conv2DBackpropInput",Te="Conv3D",Ee="Conv3DBackpropFilterV2",Re="Conv3DBackpropInputV2",Ae="Cos",Fe="Cosh",De="Cumsum",_e="CropAndResize",Oe="DenseBincount",Le="DepthToSpace",Me="DepthwiseConv2dNative",ze="DepthwiseConv2dNativeBackpropFilter",Pe="DepthwiseConv2dNativeBackpropInput",Be="Diag",We="Dilation2D",Ue="Dilation2DBackpropInput",Ve="Dilation2DBackpropFilter",Ge="RealDiv",He="Elu",je="EluGrad",Ke="Erf",qe="Equal",Xe="Exp",Ye="ExpandDims",Je="Expm1",Ze="FFT",Qe="Fill",et="FlipLeftRight",tt="Floor",nt="FloorDiv",st="FusedBatchNorm",rt="GatherV2",at="GatherNd",it="Greater",ot="GreaterEqual",lt="Identity",ut="IFFT",ct="Imag",ht="IsFinite",dt="IsInf",pt="IsNan",ft="LeakyRelu",mt="Less",gt="LessEqual",bt="LinSpace",yt="Log",xt="Log1p",kt="LogicalAnd",wt="LogicalNot",vt="LogicalOr",It="LRN",$t="LRNGrad",Ct="Max",Nt="Maximum",St="MaxPool",Tt="MaxPoolGrad",Et="MaxPool3D",Rt="MaxPool3DGrad",At="MaxPoolWithArgmax",Ft="Mean",Dt="Min",_t="Minimum",Ot="MirrorPad",Lt="Mod",Mt="Multinomial",zt="Multiply",Pt="Neg",Bt="NotEqual",Wt="NonMaxSuppressionV3",Ut="NonMaxSuppressionV4",Vt="NonMaxSuppressionV5",Gt="OnesLike",Ht="OneHot",jt="Pack",Kt="PadV2",qt="Pow",Xt="Prelu",Yt="Prod",Jt="Range",Zt="Real",Qt="Reciprocal",en="Relu",tn="Reshape",nn="ResizeNearestNeighbor",sn="ResizeNearestNeighborGrad",rn="ResizeBilinear",an="ResizeBilinearGrad",on="Relu6",ln="Reverse",un="Round",cn="Rsqrt",hn="ScatterNd",dn="Select",pn="Selu",fn="Slice",mn="Sin",gn="Sinh",bn="Sign",yn="Sigmoid",xn="Softplus",kn="Sqrt",wn="Sum",vn="SpaceToBatchND",In="SplitV",$n="Softmax",Cn="SquaredDifference",Nn="Square",Sn="Sub",Tn="SparseToDense",En="StridedSlice",Rn="Tan",An="Tanh",Fn="Tile",Dn="TopK",_n="Transform",On="Transpose",Ln="Unique",Mn="Unpack",zn="UnsortedSegmentSum",Pn="ZerosLike",Bn="Step",Wn="RotateWithOffset",Un="_FusedMatMul",Vn="FusedConv2D",Gn="FusedDepthwiseConv2D",Hn=J("kernelRegistry",(()=>new Map)),jn=J("gradRegistry",(()=>new Map));function Kn(e,t){const n=Zn(e,t);return Hn.get(n)}function qn(e){return jn.get(e)}function Xn(e){const t=Hn.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function Yn(e){const{kernelName:t,backendName:n}=e,s=Zn(t,n);Hn.has(s)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Hn.set(s,e)}function Jn(e){const{kernelName:t}=e;jn.has(t)&&K().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),jn.set(t,e)}function Zn(e,t){return`${t}_${e}`}function Qn(e,t){return"string"===t?ns(e):es([e],t)}function es(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=g(e)),K().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ts(){return K().platform.now()}function ns(e,t="utf-8"){return t=t||"utf-8",K().platform.encode(e,t)}function ss(e,t="utf-8"){return t=t||"utf-8",K().platform.decode(e,t)}class rs{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new is)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let a;const i=ts();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();a=Promise.resolve({kernelMs:ts()-i})}if(K().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{as(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function as(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class is{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?w(`${s}ms`,9):s.error,o=w(e,25),l=t.rank,u=t.size,c=w(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;h+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function os(e,t,n,s){const r=L(t),a=function(e,t,n,s){const r=b(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?hs(e):e;if(o>1)for(let e=0;e<r/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],ls(l[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=cs(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function ls(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:A(e)?`'${e}'`:"bool"===n?us(e):parseFloat(e.toFixed(7)).toString(),w(s,t)}function us(e){return 0===e?"false":"true"}function cs(e,t,n,s,r,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[ls(hs(e)[0],0,n)]:"bool"===n?[us(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(s=hs(s),a=hs(a)),["["+s.map(((e,t)=>ls(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>ls(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?hs(e):Array.from(e)).map(((e,t)=>ls(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const s=t*h,a=s+h;d.push(...cs(e.slice(s,a),u,n,c,r,!1))}d.push("...");for(let t=o-3;t<o;t++){const s=t*h,a=s+h;d.push(...cs(e.slice(s,a),u,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const s=t*h,a=s+h;d.push(...cs(e.slice(s,a),u,n,c,r,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function hs(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ds{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=b(e),null!=n){const e=n.length;p(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||S(t,this.size),this.strides=L(e)}set(e,...t){0===t.length&&(t=[0]),p(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ps().makeTensor(this.values,this.shape,this.dtype)}}let ps=null,fs=null,ms=null;class gs{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=b(e),this.strides=L(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return fs.buffer(this.shape,this.dtype,e)}bufferSync(){return fs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return z(this.shape,e)}arraySync(){return z(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=ps().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>ss(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=ps().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ss(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ps().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ps().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return fs.print(this,e)}clone(){return this.throwIfDisposed(),fs.clone(this)}toString(e=!1){return os(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),fs.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ps().makeVariable(this,e,t,n)}}function bs(){return J("Tensor",(()=>gs))}Object.defineProperty(gs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),bs();class ys extends gs{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!y(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ps().disposeTensor(this),this.dataId=e.dataId,ps().incRef(this,null)}dispose(){ps().disposeVariable(this),this.isDisposedInternal=!0}}var xs,ks,ws,vs,Is;Object.defineProperty(ys,Symbol.hasInstance,{value:e=>e instanceof gs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(xs||(xs={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ks||(ks={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ws||(ws={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(vs||(vs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Is||(Is={}));const $s={float32:vs,int32:ks,bool:ws,complex64:Is};function Cs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return $s[e][t]}function Ns(e){return Cs(e,"int32")}function Ss(e,t){if(e.dtype===t.dtype)return[e,t];const n=Cs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ts(e,t){return t.some((t=>t.id===e.id))}function Es(e){const t=[];return Rs(e,t,new Set),t}function Rs(e,t,n){if(null==e)return;if(e instanceof gs)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=e;for(const e in r){const s=r[e];n.has(s)||(n.add(s),Rs(s,t,n))}}function As(e){return null!=e.kernelName}class Fs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ds{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Fs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new rs(this.backendInstance),!0}setupRegisteredKernels(){Xn(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Xn(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof l||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ds.nextTensorId++}nextVariableId(){return Ds.nextVariableId++}clone(e){const t=Os.runKernel(lt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Os.runKernel(xe,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==Kn(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=As(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(As(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const l=Kn(t,this.backendName);p(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:s}=e;return this.makeTensorFromDataId(t,n,s)}));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=As(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=qn(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(p(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&A(e[0])&&(r=e.map((e=>ns(e))));const a=s.write(r,t,n),i=new gs(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r=new gs(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new ys(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*R(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ys||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*R(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=qn(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=B(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Es(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(p(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));p(r instanceof gs,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=P(b(e),"float32");return Os.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!y(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Ls);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return p(_(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;p(t.every((e=>e instanceof gs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),p(n.value instanceof gs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),p(_(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];p(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),p(a.every((e=>e instanceof gs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=ts(),n=await this.backend.time(e);return n.wallMs=ts()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Fs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function _s(){const e=Y();if(null==e._tfengine){const t=new j(e);e._tfengine=new Ds(t)}var t;return t=e._tfengine.ENV,X=t,ps=()=>e._tfengine,e._tfengine}Ds.nextTensorId=0,Ds.nextVariableId=0;const Os=_s();function Ls(e,t){const n={a:e,b:t};return Os.runKernel(te,n)}function Ms(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function zs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ps=K();function Bs(e,t){let n=e;if(E(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||E(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&K().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ws(e,s,[]),s}function Ws(e,t,n){if(n=n||[],!Array.isArray(e)&&!E(e))return void p(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));p(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),p(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)Ws(e[t],s,n.concat(t))}function Us(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function Vs(e,t,n,s="numeric"){if(e instanceof gs)return Us(s,e.dtype,t,n),e;let r=D(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Us(s,r,t,n),null==e||!E(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=Bs(e,r);E(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?es(e,r):g(e,[],!0);return Os.makeTensor(i,a,r)}function Gs(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Vs(e,`${t}[${r}]`,n,s)))}function Hs(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...e)=>{Os.startScope(n);try{const t=s(...e);return H(t)&&console.error("Cannot return a Promise inside of tidy."),Os.endScope(t),t}catch(e){throw Os.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}Ps.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ps.registerFlag("IS_BROWSER",(()=>zs())),Ps.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ps.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ps.registerFlag("PROD",(()=>!1)),Ps.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ps.getBool("DEBUG"))),Ps.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ps.registerFlag("IS_TEST",(()=>!1)),Ps.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Ps.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const js=Hs({complex_:function(e,t){const n=Vs(e,"real","complex"),s=Vs(t,"imag","complex");f(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return Os.runKernel(ve,r)}});function Ks(e,t,n,s){if(null==s&&(s=D(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!E(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){U(t);const e=b(t),s=b(n);p(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==b(t.slice(e));p(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return E(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?es(e,s):g(e,[],!0),Os.makeTensor(e,t,s)}function qs(e,t,n){return Ks(e,t,Bs(e,n),n)}const Xs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ys(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Js(await Promise.all(s)),specs:n}}function Js(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const Zs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Qs(e){return Zs?Buffer.byteLength(e):new Blob([e]).size}function er(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function tr(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Qs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Qs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function nr(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class sr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==sr.instance&&(sr.instance=new sr),sr.instance}static registerSaveRouter(e){sr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){sr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return sr.getHandlers(e,"save")}static getLoadHandlers(e,t){return sr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?sr.getInstance().loadRouters:sr.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const rr="tensorflowjs",ar="models_store",ir="model_info_store";function or(){if(!K().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function lr(e){const t=e.result;t.createObjectStore(ar,{keyPath:"modelPath"}),t.createObjectStore(ir,{keyPath:"modelPath"})}class ur{constructor(e){if(this.indexedDB=or(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(rr,1);s.onupgradeneeded=()=>lr(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(ar,"readonly"),s=t.objectStore(ar).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=tr(t),a=r.transaction(ir,"readwrite");let i=a.objectStore(ir);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(ar,"readwrite");const o=l.objectStore(ar).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(ir);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}ur.URL_SCHEME="indexeddb://";const cr=e=>{return K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ur.URL_SCHEME)?(t=e.slice(ur.URL_SCHEME.length),new ur(t)):null;var t};sr.registerSaveRouter(cr),sr.registerLoadRouter(cr);class hr{constructor(){this.indexedDB=or()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(rr,1);n.onupgradeneeded=()=>lr(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(ir,"readonly"),a=r.objectStore(ir).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ur.URL_SCHEME)?t.slice(ur.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(rr,1);s.onupgradeneeded=()=>lr(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(ir,"readwrite"),i=a.objectStore(ir),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(ar,"readwrite");const s=l.objectStore(ar).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const dr="/",pr="tensorflowjs_models",fr="info",mr="model_topology",gr="weight_specs",br="weight_data",yr="model_metadata";function xr(e){return{info:[pr,e,fr].join(dr),topology:[pr,e,mr].join(dr),weightSpecs:[pr,e,gr].join(dr),weightData:[pr,e,br].join(dr),modelMetadata:[pr,e,yr].join(dr)}}function kr(e){const t=e.split(dr);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(dr)}class wr{constructor(e){if(!K().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=xr(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=tr(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Zs)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Zs){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}wr.URL_SCHEME="localstorage://";const vr=e=>{return K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(wr.URL_SCHEME)?(t=e.slice(wr.URL_SCHEME.length),new wr(t)):null;var t};sr.registerSaveRouter(vr),sr.registerLoadRouter(vr);class Ir{constructor(){p(K().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),p("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=pr+dr,n=dr+fr;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[kr(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=xr(e=(t=e).startsWith(wr.URL_SCHEME)?t.slice(wr.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}class $r{constructor(){this.managers={}}static getInstance(){return null==$r.instance&&($r.instance=new $r),$r.instance}static registerManager(e,t){p(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),p(e.length>0,(()=>"scheme must not be an empty string."));const n=$r.getInstance();p(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Cr{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(K().get("IS_BROWSER")){K().setPlatform("browser",new Cr);try{$r.registerManager(wr.URL_SCHEME,new Ir)}catch(e){}try{$r.registerManager(ur.URL_SCHEME,new hr)}catch(e){}}let Nr;function Sr(e,t="float32",n){return t=t||"float32",U(e),new ds(e,t,n)}K().get("IS_NODE")&&K().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=K().global.fetch?K().global.fetch(e,t):(null==Nr&&(Nr=n(8352)),Nr(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Tr=Hs({cast_:function(e,t){const n=Vs(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return Os.runKernel(xe,s,r)}}),Er=Hs({clone_:function(e){const t={x:Vs(e,"x","clone","string_or_numeric")};return Os.runKernel(lt,t)}});function Rr(e){return new Promise((e=>setTimeout(e))).then(e)}_s(),fs={buffer:Sr,cast:Tr,clone:Er,print:function(e,t=!1){console.log(e.toString(t))}};class Ar{constructor(e){if(!K().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ar.URL_SCHEME)&&(e=e.slice(Ar.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await Rr((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Rr((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:tr(e)}}}}function Fr(e,t,n,s){!function(e){p(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){p(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),p(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),p(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function Dr(e,t){null==t&&(t={});const n=null==t.fetchFunc?K().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Fr(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Fr(r,t.onProgress,.5,1)}Ar.URL_SCHEME="downloads://",sr.registerSaveRouter((e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ar.URL_SCHEME)?function(e="model"){return new Ar(e)}(e.slice(Ar.URL_SCHEME.length)):null));class _r{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(p("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=K().platform.fetch,p(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&p(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:tr(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest,r=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=s){const e=await this.loadWeights(s);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:r,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,er(await Dr(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Or(e){return null!=e.match(_r.URL_SCHEME_REGEX)}_r.URL_SCHEME_REGEX=/^https?:\/\//;const Lr=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Or(e))):Or(e),n)return Mr(e,t)}return null};function Mr(e,t){return new _r(e,t)}function zr(e,t,n){const s=e.shape.length;p(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),p(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)p(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Pr(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Br(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Wr(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Ur(e,t,n){return n<=e?n:n-(t-1)}function Vr(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function Gr(e,t,n,s,r,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Hr(i,l,u,s,e),h=jr(o,l,u,r,e),d=Wr(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=qr(i,s,a,e,t,l),h[t]=Xr(o,r,a,e,t,l),d[t]=Kr(a,t,l);return{begin:c,end:h,strides:d}}function Hr(e,t,n,s,r){const a=[...r],i=Vr(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=Ur(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function jr(e,t,n,s,r){const a=[...r],i=Vr(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=Ur(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=r[e];a[e]<0&&(a[e]+=t),a[e]=h(0,a[e],r[e])}return a}function Kr(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function qr(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=h(0,i,l-1),i}function Xr(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?h(0,i,l):h(-1,i,l-1),i}function Yr(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Jr(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Zr(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{p(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(p(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function Qr(e,t,n,s,r,a,i,o,l){let u=t.slice(),c=n.slice(),h=s;null==s&&(h=new Array(u.length));const d=Pr(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=Pr(o),m=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:b,strides:y}=Gr(m,d,p,u,c,h,r,a,i);u=g,c=b,h=y;const x=Pr(l);x.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const k=Br(u,c,h),w=k.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:k,newShape:m,outShape:w}}sr.registerSaveRouter(Lr),sr.registerLoadRouter(Lr);class ea{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ta{constructor(){this.classNameMap={}}static getMap(){return null==ta.instance&&(ta.instance=new ta),ta.instance}static register(e){ta.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function na(e){p(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),p("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),p(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ta.register(e)}function sa(){return Os}function ra(){return Os.memory()}function aa(e,t){return Os.tidy(e,t)}function ia(e){Es(e).forEach((e=>e.dispose()))}function oa(e){return Os.keep(e)}function la(e,t,n=1){return Os.registerBackend(e,t,n)}function ua(e){return Os.customGrad(e)}function ca(e,t){if((E(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&E(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ks(e,[],[],t)}ms=function(e){K().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class ha extends ea{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return ia(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){p(_(e),(()=>"The f passed in variableGrads(f) must be a function")),p(null==t||Array.isArray(t)&&t.every((e=>e instanceof ys)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Os.registeredVariables)t.push(Os.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;p((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=Os.gradients(e,t,null,!0);p(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),p(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=s&&s.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&ia(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ca(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ha,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const da=Hs({abs_:function(e){const t=Vs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Os.runKernel(Ie,e)}{const e={x:t};return Os.runKernel(Z,e)}}}),pa=Hs({add_:function(e,t){let n=Vs(e,"a","add"),s=Vs(t,"b","add");[n,s]=Ss(n,s);const r={a:n,b:s};return Os.runKernel(te,r)}}),fa=Hs({all_:function(e,t=null,n=!1){const s={x:Vs(e,"x","all","bool")},r={axis:t,keepDims:n};return Os.runKernel(se,s,r)}}),ma=Hs({any_:function(e,t=null,n=!1){const s={x:Vs(e,"x","any","bool")},r={axis:t,keepDims:n};return Os.runKernel(re,s,r)}}),ga=Hs({argMax_:function(e,t=0){const n={x:Vs(e,"x","argMax")},s={axis:t};return Os.runKernel(ae,n,s)}});function ba(e,t,n,s,r="NHWC",a){return ka(e,[...t,e[3]],n,a,s,null,null,Ea(r))}function ya(e,t,n,s,r,a,i="channelsLast"){const[o,l]=Ia(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return ka(e,u,n,s,r,a,!1,i)}function xa(e,t,n,s,r,a,i="NDHWC"){const[o,l,u]=$a(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return wa(e,c,n,s,r,!1,h,a)}function ka(e,t,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=Ia(n),[b,y]=Ia(s),x=Ca(d,b),k=Ca(p,y),{padInfo:w,outHeight:v,outWidth:I}=function(e,t,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=va(e,t,n));const a=e[1];return[Na((e[0]-t+2*s)/n+1,r),Na((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Na((t-a+d+p)/s+1,o),h=Na((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,k,a,o),$=i?f*h:f;let C;return"channelsFirst"===o?C=[l,$,v,I]:"channelsLast"===o&&(C=[l,v,I,$]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:v,outWidth:I,outChannels:$,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:y,inShape:e,outShape:C,filterShape:t}}function wa(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[b,y,x]=$a(n),[k,w,v]=$a(s),I=Ca(p,k),$=Ca(f,w),C=Ca(m,v),{padInfo:N,outDepth:S,outHeight:T,outWidth:E}=function(e,t,n,s,r,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=va(e,t,s));const i=e[1],o=e[2];return[Na((e[0]-t+2*r)/s+1,a),Na((i-t+2*r)/s+1,a),Na((o-t+2*r)/s+1,a),1]}([t,n,s,1],o,0,r,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/i);const e=(d-1)*r+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(e/2),b=e-g,y=Math.floor(c/2),x=c-y,k=Math.floor(m/2);h={top:y,bottom:x,left:k,right:m-k,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),p=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,b,y,x,I,$,C,o),R=a?g*d:g;let A;return"channelsFirst"===i?A=[l,R,S,T,E]:"channelsLast"===i&&(A=[l,S,T,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:S,outHeight:T,outWidth:E,outChannels:R,padInfo:N,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:$,effectiveFilterWidth:C,dilationDepth:k,dilationHeight:w,dilationWidth:v,inShape:e,outShape:A,filterShape:t}}function va(e,t,n,s=1){const r=Ca(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Ia(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function $a(e){return"number"==typeof e?[e,e,e]:e}function Ca(e,t){return t<=1?e:e+(e-1)*(t-1)}function Na(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Sa(e){const[t,n,s]=Ia(e);return 1===t&&1===n&&1===s}function Ta(e,t){return Sa(e)||Sa(t)}function Ea(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const Ra=Hs({reshape_:function(e,t){const n={x:Vs(e,"x","reshape","string_or_numeric")},s={shape:t};return Os.runKernel(tn,n,s)}}),Aa=Hs({avgPool_:function(e,t,n,s,r){const a=Vs(e,"x","avgPool","float32");p(Ta(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Ra(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=r&&p(x(s),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let c=Os.runKernel(de,l,u);return c=Tr(c,a.dtype),o?Ra(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Fa=Hs({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=Vs(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Ra(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),p("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=r&&p(x(s),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let h=Os.runKernel(fe,u,c);return h=Tr(h,o.dtype),l?Ra(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Da=Hs({batchNorm_:function(e,t,n,s,r,a){null==a&&(a=.001);const i=Vs(e,"x","batchNorm"),o=Vs(t,"mean","batchNorm"),l=Vs(n,"variance","batchNorm");let u,c;null!=r&&(u=Vs(r,"scale","batchNorm")),null!=s&&(c=Vs(s,"offset","batchNorm")),p(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Ra(e,[1,1,1,e.size]):2===e.rank?Ra(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ra(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},f=Os.runKernel(st,h,d);return Ra(f,i.shape)}}),_a=Hs({batchNorm2d_:function(e,t,n,s,r,a){const i=Vs(e,"x","batchNorm"),o=Vs(t,"mean","batchNorm"),l=Vs(n,"variance","batchNorm");let u,c;return null!=r&&(u=Vs(r,"scale","batchNorm")),null!=s&&(c=Vs(s,"offset","batchNorm")),p(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),p(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),p(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Da(i,o,l,c,u,a)}}),Oa=Hs({batchNorm3d_:function(e,t,n,s,r,a){const i=Vs(e,"x","batchNorm"),o=Vs(t,"mean","batchNorm"),l=Vs(n,"variance","batchNorm");let u,c;return null!=r&&(u=Vs(r,"scale","batchNorm")),null!=s&&(c=Vs(s,"offset","batchNorm")),p(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),p(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),p(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Da(i,o,l,c,u,a)}}),La=Hs({batchNorm4d_:function(e,t,n,s,r,a){const i=Vs(e,"x","batchNorm"),o=Vs(t,"mean","batchNorm"),l=Vs(n,"variance","batchNorm");let u,c;return null!=r&&(u=Vs(r,"scale","batchNorm")),null!=s&&(c=Vs(s,"offset","batchNorm")),p(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),p(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),p(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&p(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&p(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Da(i,o,l,c,u,a)}}),Ma=Hs({clipByValue_:function(e,t,n){const s=Vs(e,"x","clipByValue");p(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const r={x:s},a={clipValueMin:t,clipValueMax:n};return Os.runKernel(we,r,a)}}),za=Hs({concat_:function(e,t=0){p(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Gs(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Er(n[0]);const s=n,r={axis:t};return Os.runKernel($e,s,r)}}),Pa=Hs({concat1d_:function(e){return za(e,0)}}),Ba=Hs({concat2d_:function(e,t){return za(e,t)}}),Wa=Hs({concat3d_:function(e,t){return za(e,t)}}),Ua=Hs({concat4d_:function(e,t){return za(e,t)}}),Va=Hs({conv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Vs(e,"x","conv2d"),l=Vs(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Ra(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&p(x(s),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];p(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),p(Ta(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},f={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},m=Os.runKernel(Ce,d,f);return c?Ra(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Ga=Hs({conv1d_:function(e,t,n,s,r="NWC",a=1,i){const o=Vs(e,"x","conv1d"),l=Vs(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Ra(o,[1,o.shape[0],o.shape[1]])),p(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),p(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&p(x(s),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),p(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),p(Ta(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),p("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Ra(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Ra(u,[u.shape[0],1,u.shape[1],u.shape[2]]),f=Va(d,h,[1,n],s,"NHWC",[1,a],i);return Ra(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),Ha=Hs({conv2DBackpropInput_:function(e,t,n,s,r,a="NHWC",i){p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Ra(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),p(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),p(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),p(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];p(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),p(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&p(x(r),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const d={dy:l,filter:n},f={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},m=Os.runKernel(Se,d,f);return u?Ra(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),ja=Hs({conv2dTranspose_:function(e,t,n,s,r,a){const i=Vs(e,"x","conv2dTranspose"),o=Vs(t,"filter","conv2dTranspose");return Ha(n,i,o,s,r,"NHWC",a)}}),Ka=Hs({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=Vs(e,"x","conv3d"),o=Vs(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Ra(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),p(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),p(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),p(Ta(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),p("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},d=Os.runKernel(Te,c,h);return u?Ra(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),qa=Hs({depthwiseConv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Vs(e,"x","depthwiseConv2d"),l=Vs(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Ra(o,[1,o.shape[0],o.shape[1],o.shape[2]])),p(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),p(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),p(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&p(x(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=Os.runKernel(Me,h,d);return c?Ra(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Xa=Hs({floorDiv_:function(e,t){let n=Vs(e,"a","floorDiv"),s=Vs(t,"b","floorDiv");[n,s]=Ss(n,s);const r={a:n,b:s};return Os.runKernel(nt,r)}}),Ya=Hs({div_:function(e,t){let n=Vs(e,"a","div"),s=Vs(t,"b","div");if([n,s]=Ss(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Xa(n,s);const r={a:n,b:s};return Os.runKernel(Ge,r,{})}}),Ja=Hs({elu_:function(e){const t={x:Vs(e,"x","elu")};return Os.runKernel(He,t)}});function Za(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function Qa(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function ei(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}const ti=Hs({equal_:function(e,t){let n=Vs(e,"a","equal"),s=Vs(t,"b","equal");[n,s]=Ss(n,s),ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(qe,r)}}),ni=Hs({expandDims_:function(e,t=0){const n=Vs(e,"x","expandDims","string_or_numeric");p(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return Os.runKernel(Ye,s,r)}}),si=Hs({tile_:function(e,t){const n=Vs(e,"x","tile","string_or_numeric");p(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return Os.runKernel(Fn,s,r)}}),ri=Hs({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=Sr([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=Ra(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return si(ni(i,0),[n[0],1,1]);if(2===n.length)return si(ni(ni(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return si(ni(ni(ni(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ai(e,t,n){const s={shape:e,value:t,dtype:n};return Os.runKernel(Qe,{},s)}const ii=Hs({floor_:function(e){const t={x:Vs(e,"x","floor")};return Os.runKernel(tt,t)}}),oi=Hs({gather_:function(e,t,n=0,s=0){const r={x:Vs(e,"x","gather"),indices:Vs(t,"indices","gather","int32")},a={axis:n,batchDims:s};return Os.runKernel(rt,r,a)}}),li=Hs({greater_:function(e,t){let n=Vs(e,"a","greater"),s=Vs(t,"b","greater");[n,s]=Ss(n,s),ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(it,r)}}),ui=Hs({greaterEqual_:function(e,t){let n=Vs(e,"a","greaterEqual"),s=Vs(t,"b","greaterEqual");[n,s]=Ss(n,s),ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(ot,r)}}),ci=Hs({leakyRelu_:function(e,t=.2){const n={x:Vs(e,"x","leakyRelu")},s={alpha:t};return Os.runKernel(ft,n,s)}}),hi=Hs({log_:function(e){const t={x:Vs(e,"x","log")};return Os.runKernel(yt,t)}}),di=Hs({exp_:function(e){const t={x:Vs(e,"x","exp")};return Os.runKernel(Xe,t)}}),pi=Hs({max_:function(e,t=null,n=!1){const s={x:Vs(e,"x","max")},r={reductionIndices:t,keepDims:n};return Os.runKernel(Ct,s,r)}}),fi=Hs({mul_:function(e,t){let n=Vs(e,"a","mul"),s=Vs(t,"b","mul");[n,s]=Ss(n,s);const r={a:n,b:s};return Os.runKernel(zt,r)}}),mi=Hs({sub_:function(e,t){let n=Vs(e,"a","sub"),s=Vs(t,"b","sub");[n,s]=Ss(n,s);const r={a:n,b:s};return Os.runKernel(Sn,r)}}),gi=Hs({sum_:function(e,t=null,n=!1){let s=Vs(e,"x","sum");"bool"===s.dtype&&(s=Tr(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return Os.runKernel(wn,r,a)}}),bi=Hs({logSoftmax_:function(e,t=-1){const n=Vs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return ua(((e,n)=>{const s=pi(e,t,!0),r=mi(e,s),a=mi(Tr(r,"float32"),hi(gi(di(r),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[s]=n,r=di(s);return mi(e,fi(gi(e,t,!0),r))}}}))(n)}}),yi=Hs({logicalAnd_:function(e,t){const n=Vs(e,"a","logicalAnd","bool"),s=Vs(t,"b","logicalAnd","bool");ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(kt,r)}}),xi=Hs({maxPool_:function(e,t,n,s,r){const a=Vs(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Ra(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),p(Ta(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=r&&p(x(s),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},c=Os.runKernel(St,l,u);return o?Ra(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ki=Hs({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=Vs(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Ra(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),p(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),p("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=r&&p(x(s),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=Os.runKernel(Et,u,c);return l?Ra(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),wi=Hs({maximum_:function(e,t){let n=Vs(e,"a","maximum"),s=Vs(t,"b","maximum");[n,s]=Ss(n,s),"bool"===n.dtype&&(n=Tr(n,"int32"),s=Tr(s,"int32")),ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(Nt,r)}}),vi=Hs({mean_:function(e,t=null,n=!1){const s={x:Vs(e,"x","mean")},r={axis:t,keepDims:n};return Os.runKernel(Ft,s,r)}}),Ii=Hs({min_:function(e,t=null,n=!1){const s={x:Vs(e,"x","min")},r={axis:t,keepDims:n};return Os.runKernel(Dt,s,r)}}),$i=Hs({minimum_:function(e,t){let n=Vs(e,"a","minimum"),s=Vs(t,"b","minimum");[n,s]=Ss(n,s),"bool"===n.dtype&&(n=Tr(n,"int32"),s=Tr(s,"int32")),ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(_t,r)}});function Ci(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ni(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function Si(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Ti(e,t){return Ni(e,t.map((e=>1)),t)}function Ei(e,t,n){p(Ci(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Ri(e,t){if(Ci(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function Ai(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Fi(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const Di=Hs({square_:function(e){const t=Vs(e,"x","square");return Os.runKernel("Square",{x:t},{})}}),_i=Hs({moments_:function(e,t=null,n=!1){const s=$(t,(e=Vs(e,"x","moments")).shape),r=vi(e,s,n);let a=r.shape;n||(a=Ti(r.shape,s));const i=Di(mi(Tr(e,"float32"),Ra(r,a)));return{mean:r,variance:vi(i,s,n)}}}),Oi=Hs({neg_:function(e){const t={x:Vs(e,"x","neg")};return Os.runKernel(Pt,t)}}),Li=Hs({notEqual_:function(e,t){let n=Vs(e,"a","notEqual"),s=Vs(t,"b","notEqual");[n,s]=Ss(n,s),ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(Bt,r)}}),Mi=Hs({oneHot_:function(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:Vs(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:s};return Os.runKernel(Ht,r,a)}});function zi(e,t="float32"){if("complex64"===t){const t=zi(e,"float32"),n=zi(e,"float32");return js(t,n)}const n=B(b(e),t);return Os.makeTensor(n,e,t)}function Pi(e,t="float32"){if("complex64"===t){const t=Pi(e,"float32"),n=zi(e,"float32");return js(t,n)}const n=P(b(e),t);return Os.makeTensor(n,e,t)}const Bi=Hs({onesLike_:function(e){const t={x:Vs(e,"x","onesLike")};return Os.runKernel(Gt,t)}}),Wi=Hs({pad_:function(e,t,n=0){const s=Vs(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},a={x:s};return Os.runKernel(Kt,a,r)}}),Ui=Hs({prelu_:function(e,t){const n={x:Vs(e,"x","prelu"),alpha:Vs(t,"alpha","prelu")};return Os.runKernel(Xt,n)}});var Vi=n(6377);class Gi{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=Vi.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Hi{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Vi.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ji=Hs({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Gi(t,n,s,!1,r),i=Sr(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Ki=Hs({randomUniform_:function(e,t=0,n=1,s="float32",r){const a=Sr(e,s),i=new Hi(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),qi=Hs({relu_:function(e){const t={x:Vs(e,"x","relu")};return Os.runKernel(en,t)}}),Xi=Hs({reverse_:function(e,t){const n={x:Vs(e,"x","reverse")},s={dims:t};return Os.runKernel(ln,n,s)}}),Yi=Hs({selu_:function(e){const t={x:Vs(e,"x","selu")};return Os.runKernel(pn,t)}}),Ji=Hs({separableConv2d_:function(e,t,n,s,r,a=[1,1],i="NHWC"){const o=Vs(e,"x","separableConv2d"),l=Vs(t,"depthwiseFilter","separableConv2d"),u=Vs(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Ra(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");p(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),p(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),p(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),p(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],f=l.shape[3];p(u.shape[2]===d*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${u.shape[2]}.`));const m=qa(c,l,s,r,i,a),g=Va(m,u,1,"valid",i);return h?Ra(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Zi=Hs({sigmoid_:function(e){const t={x:Vs(e,"x","sigmoid")};return Os.runKernel(yn,t)}}),Qi=Hs({slice_:function(e,t,n){const s=Vs(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:t,size:n};return Os.runKernel(fn,r,a)}}),eo=Hs({slice1d_:function(e,t,n){const s=Vs(e,"x","slice1d");return p(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Qi(s,[t],[n])}}),to=Hs({slice2d_:function(e,t,n){const s=Vs(e,"x","slice2d");return p(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Qi(s,t,n)}}),no=Hs({slice3d_:function(e,t,n){const s=Vs(e,"x","slice3d");return p(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Qi(s,t,n)}}),so=Hs({slice4d_:function(e,t,n){const s=Vs(e,"x","slice4d");return p(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Qi(s,t,n)}}),ro=Hs({softmax_:function(e,t=-1){const n=Vs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return Os.runKernel($n,s,r)}}),ao=Hs({softplus_:function(e){const t={x:Vs(e,"x","softplus")};return Os.runKernel(xn,t)}}),io=Hs({split_:function(e,t,n=0){const s={x:Vs(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Os.runKernel(In,s,r)}}),oo=Hs({sqrt_:function(e){const t={x:Vs(e,"x","sqrt")};return Os.runKernel(kn,t)}}),lo=Hs({squeeze_:function(e,t){const n=Vs(e,"x","squeeze");return Ra(n,C(n.shape,t).newShape)}}),uo=Hs({stack_:function(e,t=0){const n=Gs(e,"tensors","stack","string_or_numeric");p(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&p(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return Os.runKernel(jt,s,r)}}),co=Hs({tanh_:function(e){const t={x:Vs(e,"x","tanh")};return Os.runKernel(An,t)}});function ho(e,t){m(e);const n=Bs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ks(e,null,n,t)}const po=Hs({truncatedNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Gi(t,n,s,!0,r),i=Sr(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),fo=Hs({unstack_:function(e,t=0){const n=Vs(e,"x","unstack","string_or_numeric");p(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return Os.runKernel(Mn,s,r)}}),mo=Hs({broadcastTo_:function(e,t){let n=Vs(e,"broadcastTo","x");const s=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Ra(n,e)}const r=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Er(n);const i={x:n},o={reps:a};return Os.runKernel(Fn,i,o)}}),go=Hs({where_:function(e,t,n){const s=Vs(t,"a","where"),r=Vs(n,"b","where"),a=Vs(e,"condition","where","bool"),i=ei(s.shape,r.shape),o=mo(s,i),l=mo(r,i);1===a.rank&&p(a.shape[0]===s.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&f(a.shape,l.shape,"Error in where: ");const u={condition:a,t:o,e:l};return Os.runKernel(dn,u)}}),bo=Hs({zerosLike_:function(e){const t={x:Vs(e,"x","zerosLike")};return Os.runKernel(Pn,t)}}),yo=Hs({transpose_:function(e,t){const n=Vs(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),p(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{p(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:t};return Os.runKernel(On,s,r)}}),xo=Hs({dropout_:function(e,t,n,s){const r=Vs(e,"x","dropout");if(p("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),p(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof gs?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(y(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=Ya(ii(pa(Ki(a,0,1,"float32",s),i)),i);return fi(r,o)}}),ko=Hs({imag_:function(e){const t={input:Vs(e,"input","imag")};return Os.runKernel(ct,t)}}),wo=Hs({real_:function(e){const t={input:Vs(e,"input","real")};return Os.runKernel(Zt,t)}}),vo=Hs({fft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Os.runKernel(Ze,t)}}),Io=Hs({rfft_:function(e,t){p("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=Qi(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=za([e,zi(s)],e.shape.length-1),n=t}else r=e;const a=bo(r),i=Ra(js(r,a),[s,n]),o=vo(i),l=Math.floor(n/2)+1,u=wo(o),c=ko(o),h=io(u,[l,n-l],u.shape.length-1),d=io(c,[l,n-l],c.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=l,Ra(js(h[0],d[0]),f)}}),$o=Hs({ifft_:function(e){p("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Os.runKernel(ut,t)}}),Co=Hs({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=Ra(e,[n,t]);s=$o(r)}else{const r=[n,2*(t-1)],a=Ra(wo(e),[n,t]),i=Ra(ko(e),[n,t]),o=Xi(Qi(a,[0,1],[n,t-2]),1),l=fi(Xi(Qi(i,[0,1],[n,t-2]),1),ca(-1)),u=za([a,o],1),c=za([i,l],1),h=Ra(js(u,c),[r[0],r[1]]);s=$o(h)}if(s=wo(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=Ra(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}}),No=Hs({conv2DBackpropFilter_:function(e,t,n,s,r,a="NHWC",i){let o=e;3===e.rank&&(o=Ra(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ra(t,[1,t.shape[0],t.shape[1],t.shape[2]])),p(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),p(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),p(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];p(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),p(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&p(x(r),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return Os.runKernel(Ne,h,d)}}),So=Hs({relu6_:function(e){const t={x:Vs(e,"x","relu6")};return Os.runKernel(on,t)}}),To=Hs({step_:function(e,t=0){const n={x:Vs(e,"x","step")},s={alpha:t};return Os.runKernel(Bn,n,s)}});function Eo(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return fi(e,To(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ro(e,t){let n=t;const s=Qa(e.shape,t.shape);return s.length>0&&(n=gi(n,s)),Ra(n,e.shape)}function Ao(e,t,n,s){if("linear"===t)return e;if("relu"===t)return qi(e);if("elu"===t)return Ja(e);if("relu6"===t)return So(e);if("prelu"===t)return Ui(e,n);if("leakyrelu"===t)return ci(e,s);throw new Error(`Unknown fused activation ${t}.`)}const Fo=(e,t)=>!(e>0)||"linear"===t,Do=Hs({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Fo(Os.state.gradientDepth,l)){let h=Va(e,t,n,s,r,a,i);return null!=o&&(h=pa(h,o)),Ao(h,l,u,c)}const h=Vs(e,"x","conv2d"),d=Vs(t,"filter","conv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Ra(h,[1,h.shape[0],h.shape[1],h.shape[2]])),p(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),p(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&p(x(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),p(f.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),p(Ta(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),p("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const g=ka(f.shape,d.shape,n,a,s,i);let b,y;null!=o&&(b=Vs(o,"bias","fused conv2d"),[b]=Ss(b,h),ei(g.outShape,b.shape)),null!=u&&(y=Vs(u,"prelu weights","fused conv2d"));const k=(e,t)=>{const[r,i,o,u]=t,c=Eo(e,o,l);p(Sa(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Ha(i.shape,c,r,n,s),No(i,c,r.shape,n,s)];if(null!=u){const e=Ro(u,c);h.push(e)}return h},w={x:f,filter:d,bias:b,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?ua(((e,t,n)=>{let s=Os.runKernel(Vn,w,v);return n([t,e,s]),m&&(s=Ra(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:k}}))(f,d):ua(((e,t,n,s)=>{let r=Os.runKernel(Vn,w,v);return s([t,e,r,n]),m&&(r=Ra(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:k}}))(f,d,b)}}),_o=Hs({matMul_:function(e,t,n=!1,s=!1){let r=Vs(e,"a","matMul"),a=Vs(t,"b","matMul");[r,a]=Ss(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return Os.runKernel(ge,i,o)}}),Oo=Hs({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Fo(Os.state.gradientDepth,a)){let l=_o(e,t,n,s);return null!=r&&(l=pa(l,r)),Ao(l,a,i,o)}let l=Vs(e,"a","fused matMul"),u=Vs(t,"b","fused matMul");[l,u]=Ss(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],f=s?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),g=u.shape.slice(0,-2),x=b(m),k=b(g);p(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),p(y(m,g),(()=>`Error in fused matMul: outer dimensions (${m}) and (${g}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),p(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const w=l.shape.slice(0,-2).concat([d,f]),v=Ra(l,n?[x,c,d]:[x,d,c]),I=Ra(u,s?[k,f,h]:[k,h,f]);let $,C;null!=r&&($=Vs(r,"bias","fused matMul"),[$]=Ss($,l),ei(w,$.shape)),null!=i&&(C=Vs(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,l,u]=t,c=Eo(Ra(e,l.shape),l,a);let h,d;return n||s?!n&&s?(h=_o(c,o,!1,!1),d=_o(c,i,!0,!1)):n&&!s?(h=_o(o,c,!1,!0),d=_o(i,c,!1,!1)):(h=_o(o,c,!0,!0),d=_o(c,i,!0,!0)):(h=_o(c,o,!1,!0),d=_o(i,c,!0,!1)),null!=r?[h,d,Ro(u,c)]:[h,d]},S={a:v,b:I,bias:$,preluActivationWeights:C},T={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};return null==r?ua(((e,t,n)=>{const s=Os.runKernel(Un,S,T);return n([e,t,s]),{value:Ra(s,w),gradFunc:N}}))(v,I):ua(((e,t,n,s)=>{const r=Os.runKernel(Un,S,T);return s([e,t,r,n]),{value:Ra(r,w),gradFunc:N}}))(v,I,$)}});function Lo(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return ho(r,"float32")}Hs({hammingWindow_:function(e){return Lo(e,.54,.46)}});const Mo=Hs({hannWindow_:function(e){return Lo(e,.5,.5)}});function zo(e,t,n){if(m(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Bs(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ks(e,t,s,n)}const Po=Hs({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Qi(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=za([Qi(e,a,t-s),ai([s],r)]);i.push(o),a+=n}return 0===i.length?zo([],[0,t]):Ra(za(i),[i.length,t])}});function Bo(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),p(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),p(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p(1===t.rank,(()=>"scores must be a 1D tensor")),p(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),p(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function Wo(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||Uo)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Uo(e,t){return e>t?1:e<t?-1:0}function Vo(e,t,n,s,r){return jo(e,t,n,s,r,0)}function Go(e,t,n,s,r,a){return jo(e,t,n,s,r,0,!1,a,!0)}function Ho(e,t,n,s,r,a){return jo(e,t,n,s,r,a,!0)}function jo(e,t,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Xo);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Ko(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*qo(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>r&&Wo(u,t,Xo))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Ko(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function qo(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Xo(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}Hs({stft_:function(e,t,n,s,r=Mo){var a;null==s&&(a=t,s=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Po(e,t,n),o=fi(i,r(t)),l=[];for(let e=0;e<i.shape[0];e++)l.push(Io(Qi(o,[e,0],[1,t]),s));return za(l)}}),Hs({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=Vs(e,"image","cropAndResize"),o=Vs(t,"boxes","cropAndResize","float32"),l=Vs(n,"boxInd","cropAndResize","int32"),u=o.shape[0];p(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),p(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),p(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),p(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),p(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),p("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return Os.runKernel(_e,c,h)}}),Hs({flipLeftRight_:function(e){const t=Vs(e,"image","flipLeftRight","float32");p(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Os.runKernel(et,n,{})}}),Hs({rotateWithOffset_:function(e,t,n=0,s=.5){const r=Vs(e,"image","rotateWithOffset","float32");p(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return Os.runKernel(Wn,a,i)}}),Hs({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Vs(e,"boxes","nonMaxSuppression"),i=Vs(t,"scores","nonMaxSuppression"),o=Bo(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return Os.runKernel(Wt,{boxes:a,scores:i},l)}}),Hs({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Vs(e,"boxes","nonMaxSuppression"),o=Vs(t,"scores","nonMaxSuppression"),l=Bo(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Os.runKernel(Vt,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Hs({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Vs(e,"boxes","nonMaxSuppression"),o=Vs(t,"scores","nonMaxSuppression"),l=Bo(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Os.runKernel(Ut,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Yo=Hs({resizeBilinear_:function(e,t,n=!1,s=!1){const r=Vs(e,"images","resizeBilinear");p(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),p(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),p(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Ra(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=Os.runKernel(rn,o,l);return i?Ra(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Jo=Hs({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=Vs(e,"images","resizeNearestNeighbor");p(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),p(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),p("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),p(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=Ra(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=Os.runKernel(nn,o,l);return i?Ra(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});Hs({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=Vs(e,"image","transform","float32"),o=Vs(t,"transforms","transform","float32");p(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),p(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),p(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return Os.runKernel(_n,l,u)}});const Zo=Hs({lessEqual_:function(e,t){let n=Vs(e,"a","lessEqual"),s=Vs(t,"b","lessEqual");[n,s]=Ss(n,s),ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(gt,r)}});function Qo(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return Os.runKernel(Jt,{},r)}const el=Hs({bandPart_:function(e,t,n){p(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),p(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Vs(e,"a","bandPart");p(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=Ra(Qo(0,a,1,"int32"),[-1,1]),l=Qo(0,i,1,"int32"),u=mi(o,l),c=yi(Zo(u,ca(+t,"int32")),ui(u,ca(-n,"int32"))),h=zi([a,i],s.dtype);return Ra(uo(fo(Ra(s,[-1,a,i])).map((e=>go(c,e,h)))),r)}}),tl=Hs({pow_:function(e,t){let n=Vs(e,"base","pow"),s=Vs(t,"exp","pow");[n,s]=Ss(n,s);const r={a:n,b:s};return Os.runKernel(qt,r)}});function nl(e,t,n=null){if(0===e.rank)return da(e);if(1!==e.rank&&null===n)return nl(Ra(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return gi(da(e),n);if(t===1/0)return pi(da(e),n);if(t===-1/0)return Ii(da(e),n);if("euclidean"===t||2===t)return oo(gi(tl(da(e),ca(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return pi(gi(da(e),n[0]),n[1]-1);if(t===1/0)return pi(gi(da(e),n[1]),n[0]);if(t===-1/0)return Ii(gi(da(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return oo(gi(Di(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const sl=Hs({norm_:function(e,t="euclidean",n=null,s=!1){const r=nl(e=Vs(e,"x","norm"),t,n);let a=r.shape;if(s){const t=$(n,e.shape);a=Ti(r.shape,t)}return Ra(r,a)}}),rl=Hs({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,p(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)p(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=io(e,e.shape[0],0).map((e=>lo(e,[0])));p(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(Os.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=fi(gi(fi(n[s],e)),n[s]);e=mi(e,t)}return Ya(e,sl(e,"euclidean"))})));return t?uo(n,0):n}});function al(e,t=!1){return Os.tidy((()=>{p(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=ri(n),a=Er(e);const i=zo([[1]],[1,1]);let o=Er(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,u=r;[o,a,r]=Os.tidy((()=>{const t=Qi(a,[e,e],[n-e,1]),l=sl(t),u=Qi(a,[e,e],[1,1]),c=go(li(u,0),zo([[-1]]),zo([[1]])),h=mi(u,fi(c,l)),d=Ya(t,h);o=1===d.shape[0]?Er(i):za([i,Qi(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Oi(Ya(_o(c,h),l)),f=Qi(a,[e,0],[n-e,s]),m=fi(p,o),g=yo(o);if(0===e)a=mi(f,_o(m,_o(g,f)));else{const t=mi(f,_o(m,_o(g,f)));a=za([Qi(a,[0,0],[e,s]),t],0)}const b=yo(m),y=Qi(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=mi(y,_o(_o(y,o),b));else{const t=mi(y,_o(_o(y,o),b));r=za([Qi(r,[0,0],[n,e]),t],1)}return[o,a,r]})),ia([t,l,u])}return!t&&n>s&&(r=Qi(r,[0,0],[n,s]),a=Qi(a,[0,0],[s,s])),[r,a]}))}const il=Hs({qr_:function(e,t=!1){if(p(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return al(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=fo(Ra(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=al(e,t);r.push(n),a.push(s)})),[Ra(uo(r,0),e.shape),Ra(uo(a,0),e.shape)]}}});var ol;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ol||(ol={}));const ll=Hs({computeWeightedLoss_:function(e,t,n=ol.SUM_BY_NONZERO_WEIGHTS){const s=Vs(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=Vs(t,"weights","computeWeightedLoss"));const a=null==r?s:fi(s,r);if(n===ol.NONE)return a;if(n===ol.SUM)return gi(a);if(n===ol.MEAN){if(null==r)return vi(a);{const e=s.size/r.size,t=Ya(gi(a),gi(r));return e>1?Ya(t,ca(e)):t}}if(n===ol.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Ya(gi(a),ca(s.size));{const e=fi(r,Pi(s.shape)),t=Tr(gi(Li(e,ca(0))),"float32");return Ya(gi(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Hs({absoluteDifference_:function(e,t,n,s=ol.SUM_BY_NONZERO_WEIGHTS){const r=Vs(e,"labels","absoluteDifference"),a=Vs(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Vs(n,"weights","absoluteDifference")),f(r.shape,a.shape,"Error in absoluteDifference: ");const o=da(mi(r,a));return ll(o,i,s)}}),Hs({cosineDistance_:function(e,t,n,s,r=ol.SUM_BY_NONZERO_WEIGHTS){const a=Vs(e,"labels","cosineDistance"),i=Vs(t,"predictions","cosineDistance");let o=null;null!=s&&(o=Vs(s,"weights","cosineDistance")),f(a.shape,i.shape,"Error in cosineDistance: ");const l=ca(1),u=mi(l,gi(fi(a,i),n,!0));return ll(u,o,r)}}),Hs({hingeLoss_:function(e,t,n,s=ol.SUM_BY_NONZERO_WEIGHTS){let r=Vs(e,"labels","hingeLoss");const a=Vs(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Vs(n,"weights","hingeLoss")),f(r.shape,a.shape,"Error in hingeLoss: ");const o=ca(1);r=mi(fi(ca(2),r),o);const l=qi(mi(o,fi(r,a)));return ll(l,i,s)}}),Hs({huberLoss_:function(e,t,n,s=1,r=ol.SUM_BY_NONZERO_WEIGHTS){const a=Vs(e,"labels","huberLoss"),i=Vs(t,"predictions","huberLoss");let o=null;null!=n&&(o=Vs(n,"weights","huberLoss")),f(a.shape,i.shape,"Error in huberLoss: ");const l=ca(s),u=da(mi(i,a)),c=$i(u,l),h=mi(u,c),d=pa(fi(ca(.5),Di(c)),fi(l,h));return ll(d,o,r)}}),Hs({logLoss_:function(e,t,n,s=1e-7,r=ol.SUM_BY_NONZERO_WEIGHTS){const a=Vs(e,"labels","logLoss"),i=Vs(t,"predictions","logLoss");let o=null;null!=n&&(o=Vs(n,"weights","logLoss")),f(a.shape,i.shape,"Error in logLoss: ");const l=ca(1),u=ca(s),c=Oi(fi(a,hi(pa(i,u)))),h=fi(mi(l,a),hi(pa(mi(l,i),u))),d=mi(c,h);return ll(d,o,r)}});const ul=Hs({squaredDifference_:function(e,t){let n=Vs(e,"a","squaredDifference"),s=Vs(t,"b","squaredDifference");[n,s]=Ss(n,s),ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(Cn,r,{})}});Hs({meanSquaredError_:function(e,t,n,s=ol.SUM_BY_NONZERO_WEIGHTS){const r=Vs(e,"labels","meanSquaredError"),a=Vs(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Vs(n,"weights","meanSquaredError")),f(r.shape,a.shape,"Error in meanSquaredError: ");const o=ul(r,a);return ll(o,i,s)}});const cl=Hs({log1p_:function(e){const t={x:Vs(e,"x","log1p")};return Os.runKernel(xt,t)}});Hs({sigmoidCrossEntropy_:function(e,t,n,s=0,r=ol.SUM_BY_NONZERO_WEIGHTS){let a=Vs(e,"multiClassLabels","sigmoidCrossEntropy");const i=Vs(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Vs(n,"weights","sigmoidCrossEntropy")),f(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=ca(s),t=ca(1),n=ca(.5);a=pa(fi(a,mi(t,e)),fi(n,e))}const l=function(e,t){const n=Vs(e,"labels","sigmoidCrossEntropyWithLogits"),s=Vs(t,"logits","sigmoidCrossEntropyWithLogits");f(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=qi(s),a=fi(s,n),i=cl(di(Oi(da(s))));return pa(mi(r,a),i)}(a,i);return ll(l,o,r)}});const hl=Hs({logSumExp_:function(e,t=null,n=!1){const s=Vs(e,"x","logSumExp"),r=$(t,s.shape),a=pi(s,r,!0),i=mi(s,a),o=di(i),l=gi(o,r),u=hi(l),c=pa(Ra(a,u.shape),u);if(n){const e=Ti(c.shape,r);return Ra(c,e)}return c}});Hs({softmaxCrossEntropy_:function(e,t,n,s=0,r=ol.SUM_BY_NONZERO_WEIGHTS){let a=Vs(e,"onehotLabels","softmaxCrossEntropy");const i=Vs(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Vs(n,"weights","softmaxCrossEntropy")),f(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=ca(s),t=ca(1),n=ca(a.shape[1]);a=pa(fi(a,mi(t,e)),Ya(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return ua(((e,t,s)=>{const r=hl(t,[n],!0),a=mi(Tr(t,"float32"),r);s([e,a]);const i=Oi(fi(a,e));return{value:gi(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=Ti(e.shape,[n]);return[fi(Ra(e,a),mi(Tr(s,"float32"),di(r))),fi(Ra(e,a),mi(di(r),Tr(s,"float32")))]}}}))(e,t)}(a,i);return ll(l,o,r)}});const dl={bandPart:el,gramSchmidt:rl,qr:il};class pl extends ha{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Os.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Os.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:aa((()=>bo(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:aa((()=>bo(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;aa((()=>{const e=pa(fi(a,this.rho),fi(Di(r),1-this.rho)),t=fi(Ya(oo(pa(i,this.epsilon)),oo(pa(a,this.epsilon))),r),n=pa(fi(i,this.rho),fi(Di(t),1-this.rho));a.assign(e),i.assign(n);const o=pa(fi(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ia(this.accumulatedGrads.map((e=>e.variable))),ia(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}pl.className="Adadelta",na(pl);class fl extends ha{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Os.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:aa((()=>ai(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;aa((()=>{const e=pa(a,Di(r));a.assign(e);const t=pa(fi(Ya(r,oo(pa(e,Os.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ia(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}fl.className="Adagrad",na(fl);class ml extends ha{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],aa((()=>{this.accBeta1=ca(t).variable(),this.accBeta2=ca(n).variable()})),null==s&&(this.epsilon=Os.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);aa((()=>{const n=mi(1,this.accBeta1),s=mi(1,this.accBeta2);t.forEach(((t,r)=>{const a=Os.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:aa((()=>bo(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:aa((()=>bo(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=pa(fi(o,this.beta1),fi(i,1-this.beta1)),c=pa(fi(l,this.beta2),fi(Di(i),1-this.beta2)),h=Ya(u,n),d=Ya(c,s);o.assign(u),l.assign(c);const p=pa(fi(Ya(h,pa(oo(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(fi(this.accBeta1,this.beta1)),this.accBeta2.assign(fi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ia(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ia(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),aa((()=>{this.accBeta1.assign(tl(this.beta1,this.iterations_+1)),this.accBeta2.assign(tl(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}ml.className="Adam",na(ml);class gl extends ha{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],aa((()=>{this.iteration=ca(0).variable(),this.accBeta1=ca(t).variable()})),null==s&&(this.epsilon=Os.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);aa((()=>{const n=mi(1,this.accBeta1),s=Ya(-this.learningRate,pa(fi(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=Os.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:bo(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:bo(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=pa(fi(o,this.beta1),fi(i,1-this.beta1)),c=fi(l,this.beta2),h=da(i),d=wi(c,h);o.assign(u),l.assign(d);const p=pa(fi(Ya(s,n),Ya(u,pa(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(pa(this.iteration,1)),this.accBeta1.assign(fi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ia(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ia(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}gl.className="Adamax",na(gl);class bl extends ha{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=Os.registeredVariables[t];aa((()=>{const e=pa(fi(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=oa(ca(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}bl.className="SGD",na(bl);class yl extends bl{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ca(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Os.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:aa((()=>bo(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&aa((()=>{let e;const t=pa(fi(this.m,r),a);e=this.useNesterov?pa(fi(this.c,pa(a,fi(t,this.m))),s):pa(fi(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ia(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}yl.className="Momentum",na(yl);class xl extends ha{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=Os.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Os.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:aa((()=>bo(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:aa((()=>bo(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:aa((()=>bo(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;aa((()=>{const e=pa(fi(i,this.decay),fi(Di(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=pa(fi(t,this.decay),fi(a,1-this.decay)),l=Ya(fi(a,this.learningRate),oo(mi(e,pa(Di(r),this.epsilon)))),u=pa(fi(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=mi(s,u);s.assign(c)}else{const e=pa(fi(i,this.decay),fi(Di(a),1-this.decay)),t=pa(fi(o,this.momentum),Ya(fi(a,this.learningRate),oo(pa(e,this.epsilon))));i.assign(e),o.assign(t);const n=mi(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ia(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ia(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ia(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}xl.className="RMSProp",na(xl);class kl{static sgd(e){return new bl(e)}static momentum(e,t,n=!1){return new yl(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new xl(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new ml(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new pl(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new gl(e,t,n,s,r)}static adagrad(e,t=.1){return new fl(e,t)}}const wl={sgd:kl.sgd,momentum:kl.momentum,adadelta:kl.adadelta,adagrad:kl.adagrad,rmsprop:kl.rmsprop,adamax:kl.adamax,adam:kl.adam},vl="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Il(){return new Promise((e=>vl((()=>e()))))}function $l(e,t){const n=e[0].length;e.forEach(((e,t)=>{p(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),p(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)p(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Cl(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}const Nl=30;function Sl(e){return e<=Nl?e:O(e,Math.floor(Math.sqrt(e)))}function Tl(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function El(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Rl(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Al(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Fl(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Dl(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function _l(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===b(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...L(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function Ol(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function Ll(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Ol(n,t,e)}function Ml(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:b(t.shape)/o,sliceSize:i,strides:[...L(n.slice(0,r)),1],outputSize:b(n)}}const zl=1.7580993408473768,Pl=1.0507009873554805,Bl=.3275911,Wl=.254829592,Ul=-.284496736,Vl=1.421413741,Gl=-1.453152027,Hl=1.061405429;function jl(...e){K().getBool("IS_TEST")||console.warn(...e)}function Kl(...e){K().getBool("IS_TEST")||console.log(...e)}function ql(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Xl(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Yl(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Jl(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Zl(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ql(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function eu(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function tu(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}function nu(e,t,n=0){let s=[];if("number"==typeof t)p(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{p(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const s=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-s}p(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function su(e,t){let n,s=!1;for(e<=Nl?(n=e,s=!0):n=O(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=O(e,n+1);return n}function ru(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function au(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function iu(e){try{return e.map((e=>ss(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ou(e){return e.map((e=>ns(e)))}function lu(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=Sr(e,"int32"),r=Sr([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}const uu={kernelName:Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,To(Tr(n,"float32"),-1))}}},cu={kernelName:Q,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Di(Tr(n,"float32")),s=oo(mi(ca(1),t));return Oi(Ya(e,s))}}}},hu={kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=oo(mi(Di(Tr(n,"float32")),1));return Ya(e,t)}}}},du={kernelName:te,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ei(n.shape,s.shape);return{a:()=>{let t=e;const s=Qa(n.shape,r);return s.length>0&&(t=gi(t,s)),Ra(t,n.shape)},b:()=>{let t=e;const n=Qa(s.shape,r);return n.length>0&&(t=gi(t,n)),Ra(t,s.shape)}}}},pu={kernelName:ne,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},fu={kernelName:ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>bo(n)}}},mu={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>bo(n)}}},gu={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,oo(mi(ca(1),Di(Tr(n,"float32")))))}}},bu={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=oo(pa(ca(1),Di(Tr(n,"float32"))));return Ya(e,t)}}}},yu={kernelName:he,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ei(n.shape,s.shape);return{a:()=>{const t=pa(Di(n),Di(s));let a=fi(e,Ya(s,t));const i=Qa(n.shape,r);return i.length>0&&(a=gi(a,i)),Ra(a,n.shape)},b:()=>{const t=pa(Di(n),Di(s));let a=Oi(fi(e,Ya(n,t)));const i=Qa(s.shape,r);return i.length>0&&(a=gi(a,i)),Ra(a,s.shape)}}}},xu={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,pa(Di(Tr(n,"float32")),1))}}},ku={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,mi(ca(1),Di(Tr(n,"float32"))))}}},wu=Hs({avgPool3dGrad_:function(e,t,n,s,r,a){const i=Vs(e,"dy","avgPool3dGrad"),o=Vs(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Ra(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Ra(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),p(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),p(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=a&&p(x(r),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},f=Os.runKernel(me,h,d);return c?Ra(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),vu={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>wu(e,s,r,a,i,o)}}},Iu=Hs({avgPoolGrad_:function(e,t,n,s,r){const a=Vs(e,"dy","avgPoolGrad"),i=Vs(t,"input","avgPoolGrad");p(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Ra(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Ra(a,[1,a.shape[0],a.shape[1],a.shape[2]])),p(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),p(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=Os.runKernel(pe,c,h);return u?Ra(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),$u={kernelName:de,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>Iu(e,s,r,a,i)}}},Cu={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>_o(e,r,!1,!1),b:()=>_o(e,s,!0,!1)}:a&&!i?{a:()=>_o(r,e,!1,!0),b:()=>_o(s,e,!1,!1)}:{a:()=>_o(r,e,!0,!0),b:()=>_o(e,s,!0,!0)}:{a:()=>_o(e,r,!1,!0),b:()=>_o(s,e,!0,!1)}}},Nu=Hs({spaceToBatchND_:function(e,t,n){const s=Vs(e,"x","spaceToBatchND");p(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),p(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),p(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return Os.runKernel(vn,r,a)}}),Su={kernelName:be,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Nu(e,s,r)}}},Tu={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>gi(e,o,!0)}}},Eu={kernelName:xe,gradFunc:e=>({x:()=>e.clone()})},Ru={kernelName:ke,gradFunc:e=>({x:()=>bo(e)})},Au={kernelName:we,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>go(yi(ui(s,r),Zo(s,a)),e,bo(e))}}},Fu={kernelName:Ie,inputsToSave:["x"],gradFunc:uu.gradFunc},Du={kernelName:$e,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=$(r,t[0].shape)[0],i=s.map((e=>e[a]));return io(e,i,a).map((e=>()=>e))}},_u={kernelName:Ce,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return p(Sa(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ha(s.shape,e,r,i,o,l),filter:()=>No(s,e,r.shape,i,o,l)}}},Ou={kernelName:Se,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Va(e,r,a,i,o,1,l),filter:()=>No(e,s,r.shape,a,i,o,l)}}},Lu=Hs({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=Ra(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Ra(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),p(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),p(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),p(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),p(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),p(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return Os.runKernel(Ee,o,l)}}),Mu=Hs({conv3DBackpropInput_:function(e,t,n,s,r){p(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Ra(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];p(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),p(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),p(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),p(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),p(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},d=Os.runKernel(Re,c,h);return o?Ra(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),zu={kernelName:Te,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;p(Sa(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>Mu(i.shape,e,o,r,a),filter:()=>Lu(i,e,o.shape,r,a)}}},Pu=Hs({sin_:function(e){const t={x:Vs(e,"x","sin")};return Os.runKernel(mn,t)}}),Bu={kernelName:Ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(Oi(Pu(Tr(n,"float32"))),e)}}},Wu=Hs({sinh_:function(e){const t={x:Vs(e,"x","sinh")};return Os.runKernel(gn,t)}}),Uu={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(Wu(Tr(n,"float32")),e)}}},Vu=Hs({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:Vs(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return Os.runKernel(De,r,a)}}),Gu={kernelName:De,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=Ri([r],s.rank);let n=Vu(e,r,a,!i);return null!=t&&(n=yo(n,t)),n}}}},Hu=Hs({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,a=[1,1],i){let o=e;3===e.rank&&(o=Ra(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ra(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return Os.runKernel(ze,u,c)}}),ju=Hs({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Ra(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=Os.runKernel(Pe,u,c);return l?Ra(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Ku={kernelName:Me,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;p(Sa(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return p(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),p(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),p(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),p(Ta(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=i&&p(x(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>ju(l.shape,e,u,r,a,s,i),filter:()=>Hu(l,e,u.shape,r,a,s,i)}}},qu={kernelName:We,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>Os.runKernel(Ue,a,n),filter:()=>Os.runKernel(Ve,i,n)}}},Xu={kernelName:He,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>Os.runKernel(je,s)}}},Yu={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=fi(di(Oi(Di(n))),2/Math.sqrt(Math.PI));return{x:()=>fi(e,s)}}},Ju={kernelName:Xe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,n)}}},Zu={kernelName:Ye,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Ra(e,n.shape)}}},Qu={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,di(n))}}},ec={kernelName:tt,gradFunc:e=>({x:()=>bo(e)})},tc={kernelName:nt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ei(n.shape,s.shape);return{a:()=>{const t=Ya(e,Tr(s,"float32")),a=Qa(n.shape,r);return a.length>0?Ra(gi(t,a),n.shape):t},b:()=>{let t=fi(e,Tr(n,"float32"));const a=Qa(s.shape,r);a.length>0&&(t=Ra(gi(t,a),s.shape));const i=Di(s);return Oi(Ya(t,Tr(i,"float32")))}}}},nc=Hs({rsqrt_:function(e){const t={x:Vs(e,"x","rsqrt")};return Os.runKernel(cn,t)}}),sc={kernelName:st,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?ca(1):o,u=Qa(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=mi(r,a),d=fi(e,l),p=nc(pa(i,ca(s))),f=fi(fi(fi(p,p),p),ca(-.5));return{x:()=>1===a.rank?Ra(fi(fi(e,si(Ra(p,[1,1,1,a.shape[0]]),c)),l),r.shape):Ra(fi(fi(e,p),l),r.shape),mean:()=>{let e=fi(fi(p,ca(-1)),d);return 1===a.rank&&(e=gi(e,u)),Ra(e,a.shape)},variance:()=>{let e=fi(fi(f,h),d);return 1===a.rank&&(e=gi(e,u)),Ra(e,a.shape)},scale:()=>{const t=fi(h,p);let n=fi(e,t);return 1===a.rank&&(n=gi(n,u)),Ra(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=gi(t,u)),Ra(t,a.shape)}}}},rc=Hs({unsortedSegmentSum_:function(e,t,n){const s=Vs(e,"x","unsortedSegmentSum"),r=Vs(t,"segmentIds","unsortedSegmentSum","int32");p(x(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return Os.runKernel(zn,a,i)}}),ac={kernelName:rt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=$(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=ic(0,l),d=ic(l+1,l+1+c),p=oc([o,[n],u]),f=Ra(e,p),m=Ra(r,[n]),g=oc([[l],h,d]),b=yo(f,g);let y=rc(b,m,s.shape[i]);const x=Ai(g);return y=yo(y,x),y},indices:()=>r}}};function ic(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function oc(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const lc={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>bo(n),b:()=>bo(s)}}},uc={kernelName:lt,gradFunc:e=>({x:()=>Tr(e,"float32")})},cc={kernelName:ht,gradFunc:e=>({x:()=>bo(e)})},hc={kernelName:dt,gradFunc:e=>({x:()=>bo(e)})},dc={kernelName:pt,gradFunc:e=>({x:()=>bo(e)})},pc={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=li(s,0);return{x:()=>go(a,e,fi(e,r))}}},fc={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,pa(n,1))}}},mc={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,Tr(n,"float32"))}}},gc={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=di(s);return mi(e,fi(gi(e,r,!0),t))}}}},bc=Hs({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return Os.runKernel($t,o,l)}}),yc={kernelName:It,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>bc(s,r,e,a,i,o,l)}}};function xc(e,t,n,s){return t.rank<n.rank&&(t=Ra(t,Ti(t.shape,s))),e.rank<n.rank&&(e=Ra(e,Ti(e.shape,s))),{x:()=>fi(e,Tr(ti(n,t),e.dtype))}}const kc={kernelName:Ct,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=xc(e,t[1],a,$(r,a.shape));return{x:()=>i.x()}}},wc=Hs({less_:function(e,t){let n=Vs(e,"a","less"),s=Vs(t,"b","less");[n,s]=Ss(n,s),ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(mt,r)}}),vc={kernelName:Nt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>fi(e,Tr(ui(n,s),"float32")),b:()=>fi(e,Tr(wc(n,s),"float32"))}}},Ic=Hs({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=Vs(e,"dy","maxPool3dGrad"),l=Vs(t,"input","maxPool3dGrad"),u=Vs(n,"output","maxPool3dGrad");let c=o,h=l,d=u,f=!1;4===l.rank&&(f=!0,c=Ra(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Ra(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Ra(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),p(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),p(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),p(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=i&&p(x(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const m={dy:c,input:h,output:d},g={filterSize:s,strides:r,pad:a,dimRoundingMode:i},b=Os.runKernel(Rt,m,g);return f?Ra(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),$c={kernelName:Et,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Ic(e,s,r,a,i,o,l)}}},Cc=Hs({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=Vs(e,"dy","maxPoolGrad"),l=Vs(t,"input","maxPoolGrad"),u=Vs(n,"output","maxPoolGrad");p(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),p(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),p(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&p(x(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return Os.runKernel(Tt,c,h)}}),Nc={kernelName:St,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Cc(e,s,r,a,i,o)}}},Sc={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=$(r,s.shape),i=b(Si(s.shape,a)[1]);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=Ra(e,t);return Ya(fi(n,Pi(s.shape,"float32")),i)}}}},Tc={kernelName:Dt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=xc(e,i,a,$(r,a.shape));return{x:()=>o.x()}}},Ec={kernelName:_t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>fi(e,Tr(Zo(n,s),"float32")),b:()=>fi(e,Tr(li(n,s),"float32"))}}},Rc={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Qi(e,a,s.shape)}}},Ac={kernelName:Lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ei(n.shape,s.shape);return{a:()=>{const t=Qa(n.shape,r);return t.length>0?Ra(gi(e,t),n.shape):e},b:()=>{const t=fi(e,Oi(ii(Ya(n,s)))),a=Qa(s.shape,r);return a.length>0?Ra(gi(t,a),s.shape):t}}}},Fc={kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ei(n.shape,s.shape);return{a:()=>{const t=fi(e,Tr(s,"float32")),a=Qa(n.shape,r);return a.length>0?Ra(gi(t,a),n.shape):t},b:()=>{const t=fi(e,Tr(n,"float32")),a=Qa(s.shape,r);return a.length>0?Ra(gi(t,a),s.shape):t}}}},Dc={kernelName:Pt,gradFunc:e=>({x:()=>Oi(e)})},_c={kernelName:Ht,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>zi(n.shape,"float32")}}},Oc={kernelName:Gt,gradFunc:e=>({x:()=>bo(e)})},Lc={kernelName:jt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return fo(e,s).map((e=>()=>e))}},Mc={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>Qi(e,a,s.shape)}}},zc={kernelName:qt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=ei(a.shape,i.shape);return{a:()=>{const t=Tr(i,"float32");let n=fi(e,fi(t,tl(a,mi(t,ca(1)))));const s=Qa(a.shape,o);return s.length>0&&(n=gi(n,s)),Ra(n,a.shape)},b:()=>{const t=li(a,0),n=go(t,hi(a),bo(a));let s=fi(e,fi(r,n));const l=Qa(i.shape,o);return l.length>0&&(s=gi(s,l)),Ra(s,i.shape)}}}},Pc={kernelName:Xt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=li(n,0);return{x:()=>go(r,e,fi(e,s)),alpha:()=>{let t=go(r,bo(e),fi(e,n));const a=Qa(s.shape,e.shape);return a.length>0&&(t=gi(t,a)),Ra(t,s.shape)}}}},Bc={kernelName:Ge,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ei(n.shape,s.shape);return{a:()=>{const t=Ya(e,Tr(s,"float32")),a=Qa(n.shape,r);return a.length>0?Ra(gi(t,a),n.shape):t},b:()=>{let t=fi(e,Tr(n,"float32"));const a=Qa(s.shape,r);a.length>0&&(t=Ra(gi(t,a),s.shape));const i=Di(s);return Oi(Ya(t,Tr(i,"float32")))}}}},Wc={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,Oi(Di(n)))}}},Uc={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=fi(Zo(n,6),To(n));return{x:()=>fi(e,Tr(s,"float32"))}}},Vc={kernelName:en,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,Tr(To(n),"float32"))}}},Gc={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,n.shape)}}},Hc={kernelName:rn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Os.runKernel(an,r,n)}}},jc={kernelName:nn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Os.runKernel(sn,r,n)}}},Kc={kernelName:ln,gradFunc:(e,t,n)=>{const{dims:s}=n,r=$(s,e.shape);return{x:()=>Xi(e,r)}}},qc={kernelName:un,gradFunc:e=>({x:()=>bo(e)})},Xc={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Oi(Ya(e,fi(tl(n,1.5),2)))}}},Yc=Hs({logicalNot_:function(e){const t={x:Vs(e,"x","logicalNot","bool")};return Os.runKernel(wt,t)}}),Jc={kernelName:dn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Tr(bo(n),"float32"),t:()=>fi(e,Tr(n,e.dtype)),e:()=>fi(e,Tr(Yc(n),e.dtype))}}},Zc={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=li(n,ca(0)),s=ca(zl),r=ca(Pl),a=fi(e,r),i=fi(fi(e,s),di(Tr(n,"float32")));return go(t,a,i)}}}},Qc={kernelName:yn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,fi(n,mi(ca(1),n)))}}},eh={kernelName:bn,gradFunc:e=>({x:()=>bo(e)})},th=Hs({cos_:function(e){const t={x:Vs(e,"x","cos")};return Os.runKernel(Ae,t)}}),nh={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(th(Tr(n,"float32")),e)}}},sh=Hs({cosh_:function(e){const t={x:Vs(e,"x","cosh")};return Os.runKernel(Fe,t)}}),rh={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(sh(Tr(n,"float32")),e)}}},ah={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=Zr(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Wi(e,u)}}},ih={kernelName:$n,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=fi(e,s);return{logits:()=>mi(a,fi(gi(a,[r],!0),s))}}},oh={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,Zi(n))}}},lh=Hs({batchToSpaceND_:function(e,t,n){const s=Vs(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));p(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),p(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),p(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return Os.runKernel(be,a,i)}}),uh={kernelName:vn,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>lh(e,s,r)}}},ch={kernelName:In,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>za(e,s)}}},hh=[uu,cu,hu,du,pu,fu,mu,gu,bu,yu,xu,ku,vu,$u,Cu,Su,Tu,Eu,Ru,Au,Fu,Du,Ou,_u,zu,Bu,Uu,Gu,Ku,qu,Bc,Xu,Yu,Ju,Zu,Qu,tc,ec,sc,ac,lc,uc,cc,hc,dc,pc,fc,mc,gc,yc,kc,kc,vc,$c,Nc,Sc,Tc,Ec,Rc,Ac,Fc,Dc,_c,Oc,Lc,Mc,Mc,zc,Pc,Wc,Uc,Vc,Gc,Hc,jc,Kc,qc,Xc,Jc,Zc,Qc,eh,nh,rh,ah,ih,oh,uh,uh,ch,ch,{kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,fi(oo(Tr(n,"float32")),2))}}},{kernelName:Cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ca(2);return{a:()=>fi(e,fi(r,mi(n,s))),b:()=>fi(e,fi(r,mi(s,n)))}}},{kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(e,fi(Tr(n,"float32"),2))}}},{kernelName:Bn,gradFunc:e=>({x:()=>bo(e)})},{kernelName:Sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ei(n.shape,s.shape);return{a:()=>{let t=e;const s=Qa(n.shape,r);return s.length>0&&(t=gi(t,s)),Ra(t,n.shape)},b:()=>{let t=e;const n=Qa(s.shape,r);return n.length>0&&(t=gi(t,n)),Ra(Oi(t),s.shape)}}}},{kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;$(a,s.shape).forEach((e=>{r[e]=1}));const i=Ra(e,r),o=fi(i,Pi(s.shape,"float32"));return{x:()=>o}}},{kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ya(e,Di(th(n)))}}},{kernelName:An,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fi(mi(ca(1),Di(n)),e)}}},{kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=bo(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=pa(t,Qi(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=pa(t,Qi(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=pa(t,Qi(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=pa(t,Qi(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:On,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Ai(r);return{x:()=>yo(e,a)}}},{kernelName:Mn,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>uo(e,r)}}},{kernelName:zn,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=wi(t,bo(t)),s=oi(e,n);let r=ui(t,ca(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=ni(r,e+1);r=yi(r,Pi(s.shape,"bool"));const i=bo(s);return go(r,s,i)}(e,n)}}},{kernelName:Pn,gradFunc:e=>({x:()=>bo(e)})}];for(const e of hh)Jn(e);bs().prototype.abs=function(){return this.throwIfDisposed(),da(this)};const dh=Hs({acos_:function(e){const t={x:Vs(e,"x","acos")};return Os.runKernel(Q,t)}});bs().prototype.acos=function(){return this.throwIfDisposed(),dh(this)};const ph=Hs({acosh_:function(e){const t={x:Vs(e,"x","acosh")};return Os.runKernel(ee,t)}});bs().prototype.acosh=function(){return this.throwIfDisposed(),ph(this)},bs().prototype.add=function(e){return this.throwIfDisposed(),pa(this,e)},bs().prototype.all=function(e,t){return this.throwIfDisposed(),fa(this,e,t)},bs().prototype.any=function(e,t){return this.throwIfDisposed(),ma(this,e,t)},bs().prototype.argMax=function(e){return this.throwIfDisposed(),ga(this,e)};const fh=Hs({argMin_:function(e,t=0){const n={x:Vs(e,"x","argMin")},s={axis:t};return Os.runKernel(ie,n,s)}});bs().prototype.argMin=function(e){return this.throwIfDisposed(),fh(this,e)},bs().prototype.asScalar=function(){return this.throwIfDisposed(),p(1===this.size,(()=>"The array must have only 1 element.")),Ra(this,[])},bs().prototype.asType=function(e){return this.throwIfDisposed(),Tr(this,e)},bs().prototype.as1D=function(){return this.throwIfDisposed(),Ra(this,[this.size])},bs().prototype.as2D=function(e,t){return this.throwIfDisposed(),Ra(this,[e,t])},bs().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ra(this,[e,t,n])},bs().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),Ra(this,[e,t,n,s])},bs().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),Ra(this,[e,t,n,s,r])};const mh=Hs({asin_:function(e){const t={x:Vs(e,"x","asin")};return Os.runKernel(oe,t)}});bs().prototype.asin=function(){return this.throwIfDisposed(),mh(this)};const gh=Hs({asinh_:function(e){const t={x:Vs(e,"x","asinh")};return Os.runKernel(le,t)}});bs().prototype.asinh=function(){return this.throwIfDisposed(),gh(this)};const bh=Hs({atan_:function(e){const t={x:Vs(e,"x","atan")};return Os.runKernel(ue,t)}});bs().prototype.atan=function(){return this.throwIfDisposed(),bh(this)};const yh=Hs({atan2_:function(e,t){let n=Vs(e,"a","atan2"),s=Vs(t,"b","atan2");[n,s]=Ss(n,s);const r={a:n,b:s};return Os.runKernel(he,r)}});bs().prototype.atan2=function(e){return this.throwIfDisposed(),yh(this,e)};const xh=Hs({atanh_:function(e){const t={x:Vs(e,"x","atanh")};return Os.runKernel(ce,t)}});bs().prototype.atanh=function(){return this.throwIfDisposed(),xh(this)},bs().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),Aa(this,e,t,n,s)},bs().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),lh(this,e,t)},bs().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),Da(this,e,t,n,s,r)},bs().prototype.broadcastTo=function(e){return this.throwIfDisposed(),mo(this,e)},bs().prototype.cast=function(e){return this.throwIfDisposed(),Tr(this,e)};const kh=Hs({ceil_:function(e){const t={x:Vs(e,"x","ceil")};return Os.runKernel(ke,t)}});bs().prototype.ceil=function(){return this.throwIfDisposed(),kh(this)},bs().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ma(this,e,t)},bs().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof gs&&(e=[e]),za([this,...e],t)},bs().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Ga(this,e,t,n,s,r,a)},bs().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),ja(this,e,t,n,s,r)},bs().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Va(this,e,t,n,s,r,a)},bs().prototype.cos=function(){return this.throwIfDisposed(),th(this)},bs().prototype.cosh=function(){return this.throwIfDisposed(),sh(this)},bs().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Vu(this,e,t,n)};const wh=Hs({depthToSpace_:function(e,t,n="NHWC"){const s=Vs(e,"x","depthToSpace"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];p(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),p(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),p(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return Os.runKernel(Le,o,l)}});bs().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),wh(this,e,t)},bs().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),qa(this,e,t,n,s,r,a)};const vh=Hs({dilation2d_:function(e,t,n,s,r=[1,1],a="NHWC"){const i=Vs(e,"x","dilation2d"),o=Vs(t,"filter","dilation2d");p(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),p(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),p("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Ra(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=Os.runKernel(We,c,h);return u?Ra(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});bs().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),vh(this,e,t,n,s,r)};const Ih=Hs({divNoNan_:function(e,t){let n=Vs(e,"a","div"),s=Vs(t,"b","div");[n,s]=Ss(n,s);const r=Ya(n,s),a=bo(r),i=ti(s,a);return go(i,a,r)}});bs().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ih(this,e)},bs().prototype.div=function(e){return this.throwIfDisposed(),Ya(this,e)};const $h=Hs({dot_:function(e,t){const n=Vs(e,"t1","dot"),s=Vs(t,"t2","dot");p(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(p(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=Ra(n,[1,-1]),t=Ra(s,[-1,1]),r=_o(e,t);return Ra(r,[])}if(1===n.rank&&2===s.rank){const e=Ra(n,[1,-1]),t=Ra(s,[s.shape[0],s.shape[1]]),r=_o(e,t);return Ra(r,[r.size])}if(2===n.rank&&1===s.rank){const e=Ra(s,[-1,1]),t=_o(n,e);return Ra(t,[t.size])}{const e=Ra(s,[s.shape[0],s.shape[1]]);return _o(n,e)}}});bs().prototype.dot=function(e){return this.throwIfDisposed(),$h(this,e)},bs().prototype.elu=function(){return this.throwIfDisposed(),Ja(this)},bs().prototype.equal=function(e){return this.throwIfDisposed(),ti(this,e)};const Ch=Hs({erf_:function(e){let t=Vs(e,"x","erf");p("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Tr(t,"float32"));const n={x:t};return Os.runKernel(Ke,n)}});bs().prototype.erf=function(){return this.throwIfDisposed(),Ch(this)},bs().prototype.exp=function(){return this.throwIfDisposed(),di(this)},bs().prototype.expandDims=function(e){return this.throwIfDisposed(),ni(this,e)};const Nh=Hs({expm1_:function(e){const t={x:Vs(e,"x","expm1")};return Os.runKernel(Je,t)}});bs().prototype.expm1=function(){return this.throwIfDisposed(),Nh(this)},bs().prototype.fft=function(){return this.throwIfDisposed(),vo(this)},bs().prototype.flatten=function(){return this.throwIfDisposed(),Ra(this,[this.size])},bs().prototype.floor=function(){return this.throwIfDisposed(),ii(this)},bs().prototype.floorDiv=function(e){return this.throwIfDisposed(),Xa(this,e)},bs().prototype.gather=function(e,t){return this.throwIfDisposed(),oi(this,e,t)},bs().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ui(this,e)},bs().prototype.greater=function(e){return this.throwIfDisposed(),li(this,e)},bs().prototype.ifft=function(){return this.throwIfDisposed(),$o(this)},bs().prototype.irfft=function(){return this.throwIfDisposed(),Co(this)};const Sh=Hs({isFinite_:function(e){const t={x:Vs(e,"x","isFinite")};return Os.runKernel(ht,t)}});bs().prototype.isFinite=function(){return this.throwIfDisposed(),Sh(this)};const Th=Hs({isInf_:function(e){const t={x:Vs(e,"x","isInf")};return Os.runKernel(dt,t)}});bs().prototype.isInf=function(){return this.throwIfDisposed(),Th(this)};const Eh=Hs({isNaN_:function(e){const t={x:Vs(e,"x","isNaN")};return Os.runKernel(pt,t)}});bs().prototype.isNaN=function(){return this.throwIfDisposed(),Eh(this)},bs().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ci(this,e)},bs().prototype.lessEqual=function(e){return this.throwIfDisposed(),Zo(this,e)},bs().prototype.less=function(e){return this.throwIfDisposed(),wc(this,e)};const Rh=Hs({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const a=Vs(e,"x","localResponseNormalization");p(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),p(x(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Ra(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:r},c=Os.runKernel(It,l,u);return o?Ra(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});bs().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Rh(this,e,t,n,s)};const Ah=Hs({logSigmoid_:function(e){const t=Vs(e,"x","logSigmoid");return ua((e=>({value:Oi(ao(Oi(e))),gradFunc:t=>fi(t,Zi(Oi(e)))})))(t)}});bs().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ah(this)},bs().prototype.logSoftmax=function(e){return this.throwIfDisposed(),bi(this,e)},bs().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),hl(this,e,t)},bs().prototype.log=function(){return this.throwIfDisposed(),hi(this)},bs().prototype.log1p=function(){return this.throwIfDisposed(),cl(this)},bs().prototype.logicalAnd=function(e){return this.throwIfDisposed(),yi(this,e)},bs().prototype.logicalNot=function(){return this.throwIfDisposed(),Yc(this)};const Fh=Hs({logicalOr_:function(e,t){const n=Vs(e,"a","logicalOr","bool"),s=Vs(t,"b","logicalOr","bool");ei(n.shape,s.shape);const r={a:n,b:s};return Os.runKernel(vt,r)}});bs().prototype.logicalOr=function(e){return this.throwIfDisposed(),Fh(this,e)};const Dh=Hs({logicalXor_:function(e,t){const n=Vs(e,"a","logicalXor","bool"),s=Vs(t,"b","logicalXor","bool");return ei(n.shape,s.shape),yi(Fh(e,t),Yc(yi(e,t)))}});bs().prototype.logicalXor=function(e){return this.throwIfDisposed(),Dh(this,e)},bs().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),_o(this,e,t,n)},bs().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),xi(this,e,t,n,s)},bs().prototype.max=function(e,t){return this.throwIfDisposed(),pi(this,e,t)},bs().prototype.maximum=function(e){return this.throwIfDisposed(),wi(this,e)},bs().prototype.mean=function(e,t){return this.throwIfDisposed(),vi(this,e,t)},bs().prototype.min=function(e,t){return this.throwIfDisposed(),Ii(this,e,t)},bs().prototype.minimum=function(e){return this.throwIfDisposed(),$i(this,e)};const _h=Hs({mirrorPad_:function(e,t,n){p("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Vs(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");p(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)p(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),p(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return Os.runKernel(Ot,i,a)}});bs().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),_h(this,e,t)};const Oh=Hs({mod_:function(e,t){let n=Vs(e,"a","mod"),s=Vs(t,"b","mod");[n,s]=Ss(n,s);const r={a:n,b:s};return Os.runKernel(Lt,r)}});bs().prototype.mod=function(e){return this.throwIfDisposed(),Oh(this,e)},bs().prototype.mul=function(e){return this.throwIfDisposed(),fi(this,e)},bs().prototype.neg=function(){return this.throwIfDisposed(),Oi(this)},bs().prototype.norm=function(e,t,n){return this.throwIfDisposed(),sl(this,e,t,n)},bs().prototype.notEqual=function(e){return this.throwIfDisposed(),Li(this,e)},bs().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Mi(this,e,t,n)},bs().prototype.onesLike=function(){return this.throwIfDisposed(),Bi(this)},bs().prototype.pad=function(e,t){return this.throwIfDisposed(),Wi(this,e,t)};const Lh=Hs({pool_:function(e,t,n,s,r,a){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const i=Vs(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=Ra(i,[1,i.shape[0],i.shape[1],i.shape[2]])),p(Ta(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const u=ya(o.shape,t,a,r,s),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[f,m]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],c,h),g=d?s:"valid",b=d?o:Nu(o,c,f),y=("avg"===n?()=>Aa(b,t,a,g):()=>xi(b,t,a,g))(),x=d?y:lh(y,c,m);return l?Ra(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});bs().prototype.pool=function(e,t,n,s,r){return this.throwIfDisposed(),Lh(this,e,t,n,s,r)},bs().prototype.pow=function(e){return this.throwIfDisposed(),tl(this,e)},bs().prototype.prelu=function(e){return this.throwIfDisposed(),Ui(this,e)};const Mh=Hs({prod_:function(e,t=null,n=!1){let s=Vs(e,"x","prod");"bool"===s.dtype&&(s=Tr(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return Os.runKernel(Yt,r,a)}});bs().prototype.prod=function(e,t){return this.throwIfDisposed(),Mh(this,e,t)};const zh=Hs({reciprocal_:function(e){const t={x:Vs(e,"x","reciprocal")};return Os.runKernel(Qt,t)}});bs().prototype.reciprocal=function(){return this.throwIfDisposed(),zh(this)},bs().prototype.relu=function(){return this.throwIfDisposed(),qi(this)},bs().prototype.relu6=function(){return this.throwIfDisposed(),So(this)},bs().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ra(this,e.shape)},bs().prototype.reshape=function(e){return this.throwIfDisposed(),Ra(this,e)},bs().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Yo(this,e,t,n)},bs().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Jo(this,e,t,n)},bs().prototype.reverse=function(e){return this.throwIfDisposed(),Xi(this,e)},bs().prototype.rfft=function(){return this.throwIfDisposed(),Io(this)};const Ph=Hs({round_:function(e){const t={x:Vs(e,"x","round")};return Os.runKernel(un,t)}});bs().prototype.round=function(){return this.throwIfDisposed(),Ph(this)},bs().prototype.rsqrt=function(){return this.throwIfDisposed(),nc(this)},bs().prototype.selu=function(){return this.throwIfDisposed(),Yi(this)},bs().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Ji(this,e,t,n,s,r,a)},bs().prototype.sigmoid=function(){return this.throwIfDisposed(),Zi(this)};const Bh=Hs({sign_:function(e){const t={x:Vs(e,"x","sign")};return Os.runKernel(bn,t)}});bs().prototype.sign=function(){return this.throwIfDisposed(),Bh(this)},bs().prototype.sin=function(){return this.throwIfDisposed(),Pu(this)},bs().prototype.sinh=function(){return this.throwIfDisposed(),Wu(this)},bs().prototype.slice=function(e,t){return this.throwIfDisposed(),Qi(this,e,t)},bs().prototype.softmax=function(e){return this.throwIfDisposed(),ro(this,e)},bs().prototype.softplus=function(){return this.throwIfDisposed(),ao(this)},bs().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Nu(this,e,t)},bs().prototype.split=function(e,t){return this.throwIfDisposed(),io(this,e,t)},bs().prototype.sqrt=function(){return this.throwIfDisposed(),oo(this)},bs().prototype.square=function(){return this.throwIfDisposed(),Di(this)},bs().prototype.squaredDifference=function(e){return this.throwIfDisposed(),ul(this,e)},bs().prototype.squeeze=function(e){return this.throwIfDisposed(),lo(this,e)},bs().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof gs?[this,e]:[this,...e];return uo(n,t)},bs().prototype.step=function(e){return this.throwIfDisposed(),To(this,e)};const Wh=Hs({stridedSlice_:function(e,t,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:Vs(e,"x","stridedSlice")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Os.runKernel(En,u,c)}});bs().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),Wh(this,e,t,n,s,r,a,i,o)},bs().prototype.sub=function(e){return this.throwIfDisposed(),mi(this,e)},bs().prototype.sum=function(e,t){return this.throwIfDisposed(),gi(this,e,t)};const Uh=Hs({tan_:function(e){const t={x:Vs(e,"x","tan")};return Os.runKernel(Rn,t)}});bs().prototype.tan=function(){return this.throwIfDisposed(),Uh(this)},bs().prototype.tanh=function(){return this.throwIfDisposed(),co(this)},bs().prototype.tile=function(e){return this.throwIfDisposed(),si(this,e)},bs().prototype.toBool=function(){return this.throwIfDisposed(),Tr(this,"bool")},bs().prototype.toFloat=function(){return this.throwIfDisposed(),Tr(this,"float32")},bs().prototype.toInt=function(){return this.throwIfDisposed(),Tr(this,"int32")};const Vh=Hs({topk_:function(e,t=1,n=!0){const s=Vs(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=Os.runKernel(Dn,a,i);return{values:o,indices:l}}});bs().prototype.topk=function(e,t){return this.throwIfDisposed(),Vh(this,e,t)},bs().prototype.transpose=function(e){return this.throwIfDisposed(),yo(this,e)};const Gh=Hs({unique_:function(e,t=0){const n=Vs(e,"x","unique","string_or_numeric");p(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=Os.runKernel(Ln,s,r);return{values:a,indices:i}}});let Hh;function jh(){return null==Hh&&(Hh=Os.backend.epsilon()),Hh}bs().prototype.unique=function(e){return this.throwIfDisposed(),Gh(this,e)},bs().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),rc(this,e,t)},bs().prototype.unstack=function(e){return this.throwIfDisposed(),fo(this,e)},bs().prototype.where=function(e,t){return this.throwIfDisposed(),go(e,this,t)},bs().prototype.zerosLike=function(){return this.throwIfDisposed(),bo(this)};class Kh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kh.prototype)}}class qh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qh.prototype)}}class Xh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xh.prototype)}}class Yh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yh.prototype)}}class Jh extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jh.prototype)}}function Zh(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Qh(e,t){if(!e)throw new Jh(t)}function ed(e,t){let n=0;for(const s of e)s===t&&n++;return n}function td(e){return 1===e.length?e[0]:e}function nd(e){return Array.isArray(e)?e:[e]}function sd(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function rd(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let ad={};function id(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function od(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>od(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?od(t):e[n]=t.value)}}}function ld(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in ad)a=ad[r];else if(a=t[r],null==a)throw new Xh(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Xh(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in ad?[o,l]=ad.className:i in t&&([o,l]=t[i]),null==o)throw new Xh(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(ad))e[t]=ad[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},ad);for(const e of Object.keys(n))ad[e]=n[e];od(a.config);const s=l(o,a.config,n,r);return ad=Object.assign({},t),s}{const e=Object.assign({},ad);for(const e of Object.keys(n))ad[e]=n[e];const t=new o(a.config);return ad=Object.assign({},e),t}}}function ud(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function cd(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function hd(e){if(null==e)throw new Xh(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function dd(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Xh(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function pd(e,t,n=0,s=1/0){return Qh(n>=0),Qh(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function fd(e,t){Array.isArray(e)?(p(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>fd(e,`element ${n+1} of ${t}`)))):p(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${md(e)}.`))}function md(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>md(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function gd(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function bd(e,t){return aa((()=>oo(gi(fi(e,e),t,!0))))}class yd extends ea{getConfig(){return{}}}class xd extends yd{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return aa((()=>{const t=bd(e,this.axis),n=Ma(t,0,this.maxValue);return fi(e,Ya(n,pa(jh(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}xd.className="MaxNorm",na(xd);class kd extends yd{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return aa((()=>Ya(e,pa(jh(),bd(e,this.axis)))))}getConfig(){return{axis:this.axis}}}kd.className="UnitNorm",na(kd);class wd extends yd{apply(e){return qi(e)}}wd.className="NonNeg",na(wd);class vd extends yd{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return aa((()=>{const t=bd(e,this.axis),n=pa(fi(this.rate,Ma(t,this.minValue,this.maxValue)),fi(1-this.rate,t));return fi(e,Ya(n,pa(jh(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}vd.className="MinMaxNorm",na(vd);const Id={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function $d(e){return id(e)}function Cd(e,t={}){return ld(e,ta.getMap().classNameMap,t,"constraint")}function Nd(e){return null==e?null:"string"==typeof e?Cd({className:e in Id?Id[e]:e,config:{}}):e instanceof yd?e:Cd(e)}const Sd=["channelsFirst","channelsLast"],Td=["nearest","bilinear"],Ed=["valid","same","causal"],Rd=["max","avg"],Ad=["sum","mul","concat","ave"],Fd=new Map;function Dd(e){dd(Sd,"DataFormat",e)}function _d(e){dd(Ed,"PaddingMode",e)}function Od(e){dd(Rd,"PoolMode",e)}const Ld=[];function Md(e,t){Ld.push(e);try{const e=t();return Ld.pop(),e}catch(e){throw Ld.pop(),e}}function zd(e){if(!Wd(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ld.length?"":Ld.join("/")+"/")+e}function Pd(e){if(!Wd(e))throw new Error("Not a valid tensor name: '"+e+"'");Fd.has(e)||Fd.set(e,0);const t=Fd.get(e);if(Fd.set(e,Fd.get(e)+1),t>0){const n=`${e}_${t}`;return Fd.set(n,1),n}return e}const Bd=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Wd(e){return!!e.match(Bd)}function Ud(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Vd(e){return ho(e=Array.isArray(e)?new Float32Array(e):e)}function Gd(e){return Ii(Vd(e)).dataSync()[0]}function Hd(e){return pi(Vd(e)).dataSync()[0]}function jd(e,t){if(t<e)throw new Xh(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Kd(e,t){return e.asType(t)}function qd(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Xd(e,t,n){return aa((()=>{switch(e.rank){case 1:return eo(e,t,n);case 2:return to(e,[t,0],[n,e.shape[1]]);case 3:return no(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return so(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Qi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Qi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Xh(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Yd(e,t,n){return aa((()=>{switch(e.rank){case 1:return eo(e,t,n);case 2:return to(e,[0,t],[e.shape[0],n]);case 3:return no(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return so(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Xh(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Jd(e,t,n,s){return aa((()=>{switch(e.rank){case 1:return eo(e,t,n);case 2:switch(s){case 1:return Xd(e,t,n);case 2:return Yd(e,t,n);default:throw new Xh(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Xd(e,t,n);case 2:return no(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Yd(e,t,n);default:throw new Xh(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Xd(e,t,n);case 2:return so(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return so(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Yd(e,t,n);default:throw new Xh(`The axis is not within the rank of the tensor ${s}`)}default:throw new Xh(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Zd(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),za(e,t)}function Qd(e,t){switch(e.rank){case 1:return Pa([e,t]);case 2:return Ba([e,t],0);case 3:return Wa([e,t],0);case 4:return Ua([e,t],0);default:throw new Xh(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ep(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Xh(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return si(e,t)}function tp(e,t=0,n=1,s,r){return ji(e,t,n,s,r)}function np(e,t,n,s){if(e.rank<2||t.rank<2)throw new Yh(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Yh(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Oo({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?ap(e.rank,s,"channelsLast"):null,activation:n});{const r=e.shape.slice(),a=r.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...r,...u];return Oo({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?ap(e.rank,s,"channelsLast"):null,activation:n}).reshape(h)}}function sp(e,t,n){return aa((()=>(t=Array.isArray(t)?ho(t,"int32"):t.toInt(),oi(e,t,n))))}function rp(e){return fi(e,e)}function ap(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new Xh(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1,1,1]):t.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,1,1,s[0]]):t.reshape([1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1,1]):t.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,1,s[0]]):t.reshape([1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1]):t.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,s[0]]):t.reshape([1].concat(s))}else if(e<3)return t;throw new Xh(`Unsupported input rank by biasAdd: ${t.rank}`)}function ip(e,t,n){return aa((()=>(null==n&&(n="channelsLast"),Dd(n),e.add(ap(e.rank,t,n)))))}function op(e,t,n,s){return aa((()=>xo(e,t,n,s)))}function lp(e,t,n=!1){return n?e():t()}const up=["fanIn","fanOut","fanAvg"],cp=["normal","uniform","truncatedNormal"];class hp extends ea{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class dp extends hp{apply(e,t){return zi(e,t)}}dp.className="Zeros",na(dp);class pp extends hp{apply(e,t){return Pi(e,t)}}pp.className="Ones",na(pp);class fp extends hp{constructor(e){if(super(),"object"!=typeof e)throw new Xh(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Xh(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return aa((()=>fi(ca(this.value),Pi(e,t))))}getConfig(){return{value:this.value}}}fp.className="Constant",na(fp);class mp extends hp{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ki(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}mp.className="RandomUniform",na(mp);class gp extends hp{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Yh(`randomNormal does not support dType ${t}.`);return tp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}gp.className="RandomNormal",na(gp);class bp extends hp{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Yh(`truncatedNormal does not support dType ${t}.`);return po(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}bp.className="TruncatedNormal",na(bp);class yp extends hp{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return aa((()=>{if(2!==e.length||e[0]!==e[1])throw new Xh("Identity matrix initializer can only be used for 2D square matrices.");return fi(this.gain,ri(e[0]))}))}getConfig(){return{gain:this.gain}}}yp.className="Identity",na(yp);class xp extends hp{constructor(e){if(super(),e.scale<0)throw new Xh(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,dd(up,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){dd(cp,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(Dd(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Ud(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=Ud(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=Ud(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Yh(`${this.getClassName()} does not support dType ${t}.`);return po(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Ki(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}xp.className="VarianceScaling",na(xp);class kp extends xp{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xp.className}}kp.className="GlorotUniform",na(kp);class wp extends xp{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xp.className}}wp.className="GlorotNormal",na(wp);class vp extends xp{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xp.className}}vp.className="HeNormal",na(vp);class Ip extends xp{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xp.className}}Ip.className="HeUniform",na(Ip);class $p extends xp{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xp.className}}$p.className="LeCunNormal",na($p);class Cp extends xp{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xp.className}}Cp.className="LeCunNormal",na(Cp);class Np extends hp{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Yh("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return aa((()=>{if(e.length<2)throw new Yh("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=tp(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=dl.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),fi(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Np.className="Orthogonal",na(Np);const Sp={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Tp(e,t={}){return ld(e,ta.getMap().classNameMap,t,"initializer")}function Ep(e){return id(e)}function Rp(e){if("string"==typeof e){const t=e in Sp?Sp[e]:e;if("GlorotNormal"===t)return new wp;if("GlorotUniform"===t)return new kp;if("HeNormal"===t)return new vp;if("HeUniform"===t)return new Ip;if("LeCunNormal"===t)return new $p;if("LeCunUniform"===t)return new Cp;{const e={};return e.className=t,e.config={},Tp(e)}}return e instanceof hp?e:Tp(e)}let Ap=0;function Fp(){return Ap++}const Dp={};function _p(e=""){return e in Dp||(Dp[e]=0),Dp[e]+=1,e+Dp[e].toString()}function Op(e){return Array.isArray(e)&&Array.isArray(e[0])}function Lp(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Mp(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Xh(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function zp(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Xh(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Pp(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Bp{constructor(e,t="float32",n="Variable",s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Fp(),n=null==n?"Variable":n,this.originalName=zd(n),this.name=Pd(this.originalName),this.trainable_=s,this.constraint=r,this.val=function(e,t=!0,n,s){return Os.makeVariable(e,t,n,s)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Wp(e){return e.map((e=>e.read()))}function Up(e){e.forEach((e=>{e[0].write(e[1])}))}class Vp{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Gp{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Fp(),null!=a&&(this.originalName=zd(a),this.name=Pd(this.originalName)),this.rank=t.length}}let Hp=0;class jp{constructor(e,t){this.callArgs=t,this.id=Hp++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Kp=0;class qp extends ea{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Kp++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=sd(e)+"_"+_p(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new qh(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Xh(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return td(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return td(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Kh(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Kh(`Layer ${this.name} is not connected, no input to return.`);return td(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Kh(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Kh(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return td(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=nd(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=nd(this.inputSpec);if(e.length!==t.length)throw new Xh(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new Xh(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new Xh(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new Xh(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Xh(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new Xh(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new Xh(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=nd(e);let s=!0;for(const e of n)if(!(e instanceof Gp)){s=!1;break}let r=!0;for(const e of n)if(e instanceof Gp){r=!1;break}if(s===r)throw new Xh("Arguments to apply() must be all SymbolicTensors or all Tensors");return Md(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of nd(e))t.push(n.shape);this.build(td(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=nd(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=td(a),null!=this.activityRegularizer)throw new Yh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=nd(e);const t=[];for(const n of e)t.push(n.shape);return td(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new Gp(a,n,this,nd(e),t,this.name,s))):new Gp(a,s,this,nd(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new Yh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Kh(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Kh(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new qh(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Pp(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Wp(e?this.trainableWeights:this.weights)}setWeights(e){aa((()=>{const t=this.weights;if(t.length!==e.length)throw new Xh(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=Wp(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!y(a.shape,o.shape))throw new Xh(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Up(n)}))}addWeight(e,t,n,s,r,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Xh(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=Rp("zeros"));const o=s.apply(t,n),l=new Bp(o,n,e,a,i);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=nd(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=nd(e);t=nd(t),n=nd(n),s=nd(s),r=Lp(r),a=Lp(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new jp({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Xp(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Xp(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class Yp extends qp{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:_p("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Xh("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Xh("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Xh("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new Gp(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new jp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Xh(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Jp(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];ia(s)}}function Zp(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Qp;Yp.className="InputLayer",na(Yp),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Qp||(Qp={}));class ef{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class tf{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class nf extends ef{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=aa((()=>pa(this.totals[e],fi(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:aa((()=>{const n=fi(Ya(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),oa(t[e])})))}}class sf extends ef{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class rf extends ef{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");F(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,s=ts();return(...r)=>{const a=ts();return a-s<t||(s=a,n=e(...r)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await Jp(n),s.push(this.yield(e,t,n))),s.push(Il()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Jp(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Jp(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Il()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Jp(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Jp(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Il()):F(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Jp(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Jp(e),await this.trainEnd(e))}}function af(e,t){return null==e&&(e={}),e instanceof ef?[e]:Array.isArray(e)&&e[0]instanceof ef?e:nd(e).map((e=>new rf(e,t)))}class of{constructor(){}static registerCallbackConstructor(e,t){p(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),of.checkForDuplicate(t),null==of.constructors[e]&&(of.constructors[e]=[]),of.constructors[e].push(t)}static checkForDuplicate(e){for(const t in of.constructors)of.constructors[+t].forEach((t=>{if(t===e)throw new Xh("Duplicate callback constructor.")}))}static clear(){of.constructors={}}static createCallbacks(e){const t=[];for(const n in of.constructors){const s=+n;e>=s&&t.push(...of.constructors[s])}return t.map((e=>new e))}}function lf(e,t,n,s,r,a,i,o,l){const u=new sf,c=[new nf,...of.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new tf(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function uf(e,t={},n=!1){return ld(e,ta.getMap().classNameMap,t,"layer",n)}function cf(e,t){return aa((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=gi(rp(e),t,!0),s=ai(n.shape,jh()),r=oo(wi(n,s));return Ya(e,r)}))}function hf(e,t){return aa((()=>vi(rp(mi(t,e)),-1)))}function df(e,t){return aa((()=>vi(da(mi(t,e)),-1)))}function pf(e,t){return aa((()=>{const n=mi(e,t),s=Ma(da(e),jh(),Number.MAX_VALUE),r=da(Ya(n,s));return fi(100,vi(r,-1))}))}function ff(e,t,n=!1){return aa((()=>{if(n)t=ro(t);else{const e=gi(t,t.shape.length-1,!0);t=Ya(t,e)}return t=Ma(t,jh(),1-jh()),Oi(gi(fi(e.toFloat(),hi(t)),t.shape.length-1))}))}function mf(e,t,n=!1){return aa((()=>{const s=ii(function(e){const t=[Ud(e.shape)];return e.reshape(t)}(e)).toInt(),r=(t=Ma(t,jh(),1-jh())).shape;return ff(Mi(s,r[r.length-1]).reshape(r),t,n)}))}function gf(e,t){return aa((()=>{let n;return n=Ma(t,jh(),1-jh()),n=hi(Ya(n,mi(1,n))),vi(function(e,t){if(!y(e.shape,t.shape))throw new Xh(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return aa((()=>{const n=t.relu(),s=t.abs().neg();return n.sub(t.mul(e)).add(s.exp().log1p())}))}(e,n),-1)}))}function bf(e,t){return aa((()=>{const n=cf(e,-1),s=cf(t,-1),r=fi(n,s);return Oi(gi(r,-1))}))}of.constructors={};const yf={meanSquaredError:hf,meanAbsoluteError:df,meanAbsolutePercentageError:pf,meanSquaredLogarithmicError:function(e,t){return aa((()=>{const n=Ma(t,jh(),Number.MAX_VALUE),s=hi(pa(1,n)),r=Ma(e,jh(),Number.MAX_VALUE),a=hi(pa(1,r));return vi(rp(mi(s,a)),-1)}))},squaredHinge:function(e,t){return aa((()=>{const n=wi(0,mi(1,fi(e,t)));return vi(rp(n),-1)}))},hinge:function(e,t){return aa((()=>{const n=wi(0,mi(1,fi(e,t)));return vi(n,-1)}))},categoricalHinge:function(e,t){return aa((()=>{const n=gi(fi(e,t),-1),s=pi(fi(mi(1,e),t),-1);return wi(0,pa(1,mi(s,n)))}))},logcosh:function(e,t){return aa((()=>{const n=Math.log(2),s=mi(t,e),r=mi(pa(s,ao(fi(-2,s))),n);return vi(r,-1)}))},categoricalCrossentropy:ff,sparseCategoricalCrossentropy:mf,binaryCrossentropy:gf,kullbackLeiblerDivergence:function(e,t){return aa((()=>{const n=Ma(e,jh(),1),s=Ma(t,jh(),1);return gi(fi(e,hi(Ya(n,s))),-1)}))},poisson:function(e,t){return aa((()=>{const n=hi(pa(jh(),t));return vi(mi(t,fi(e,n)),-1)}))},cosineProximity:bf};function xf(e){if("string"==typeof e){if(e in yf)return yf[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Xh(t)}return e}function kf(e,t){return aa((()=>{const n=fi(.5,Bi(t)),s=Kd(li(t,n),e.dtype);return vi(ti(e,s),-1)}))}function wf(e,t){return aa((()=>Kd(ti(ga(e,-1),ga(t,-1)),"float32")))}function vf(e,t){return gf(e,t)}function If(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),ti(e,t).asType("float32")}const $f=ff,Cf=mf,Nf={binaryAccuracy:kf,categoricalAccuracy:wf,precision:function(e,t){return aa((()=>{const n=function(e,t){return aa((()=>yi(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),s=function(e,t){return aa((()=>yi(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),r=n.add(s);return go(li(r,0),n.div(r),0).cast("float32")}))},categoricalCrossentropy:$f,sparseCategoricalCrossentropy:Cf,mse:hf,MSE:hf,mae:df,MAE:df,mape:pf,MAPE:pf,cosine:bf};function Sf(e){if("string"==typeof e&&e in Nf)return Nf[e];if("string"!=typeof e&&null!=e)return e;throw new Xh(`Unknown metric ${e}`)}function Tf(e){if(Qh(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(yf))if(yf[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Nf))if(Nf[n]===e){t=n;break}return void 0!==t?t:e.name}}function Ef(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Rf(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Rf(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Rf(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Rf(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Af(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function Ff(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}Af([`${e.name} (${e.getClassName()})`,s,e.countParams().toString()],t,n)}function Df(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];a.push(`${n}[${s}][${r}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];Af([`${i} (${o})`,r,e.countParams().toString(),l],t,s);for(let e=1;e<a.length;++e)Af(["","","",a[e]],t,s)}function _f(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Of(e,t){if(null===e)return null;if("string"==typeof e)return rd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];_f(t,r,s)?n.push(s):n.push(Of(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=rd(n);t[e]=Of(s,e)}}return t}}function Lf(e,t){if(null==e)return null;if("string"==typeof e)return sd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];_f(t,r,s)?n.push(s):n.push(Lf(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[sd(n)]="name"!==n&&"className"!==n||"string"!=typeof s?Lf(s,n):s}return t}}class Mf{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Mf)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Xh(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Tr(t,e.dtype)}catch(n){throw new Xh(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Gp){if(null==this.id2Value[e.id])throw new Xh(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Xh(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Gp){if(null==this.id2Value[e.id])throw new Xh(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Xh(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ia(this.id2Mask)}}const zf={},Pf={};function Bf(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==zf[c]){const e=function(e,t){p(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=Uf(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Uf(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:Wf(s)}}(i,t);h=e.sorted,d=e.recipientCounts,zf[c]=h,Pf[c]=d}h=zf[c],d={},r||Object.assign(d,Pf[c]);const f=new Mf(t);for(let e=0;e<h.length;++e){if(null!=s){const e=ra().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof Yp)continue;const u=[],c=[],p=[];let m=!1;for(const e of a.inputs){const n=f.getValue(e),s=f.getMask(e);u.push(n),c.push(s),null!=s&&(m=!0),r||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||p.push(n))}m&&((n=n||{}).mask=c[0]);const g=nd(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const y=Vf(a),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],g[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}r||ia(p)}return f.disposeMasks(),a?l:l[0]}function Wf(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Uf(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function Vf(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Gf extends qp{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=_p(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],cd(this.inputs).length!==this.inputs.length)throw new Xh(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);cd(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;Qh(0===n,"input layer has >1 nodes"),Qh(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Yp))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new qh(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Gf.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const d={};for(const e in s){const t=s[e];t in d||(d[t]=[]),d[t].push(r[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(ud);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof Gf&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(ud);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new qh(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new qh(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new jp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Xh("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Xh(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new Xh(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Xh(`${e.length} of ${s} weights are not set: ${e}`)}Up(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.3.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Lf(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return aa((()=>{e=nd(e);const n=new Mf;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Bf(this.outputs,n,t)}))}computeMask(e,t){return aa((()=>{let n;return e=nd(e),n=null==t?Zh(null,e.length):nd(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Lp(e);if(t.length!==this.inputLayers.length)throw new Xh(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ud);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=Lp(t.computeOutputShape(td(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];Qh(t in n),r.push(n[t])}return td(r)}runInternalGraph(e,t){null==t&&(t=Zh(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ud);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=nd(t.call(e,u)),l=nd(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=nd(t.call(s,u)),l=nd(t.computeMask(s,i));if(t.activityRegularizer)throw new Yh("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){Qh(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Gf?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=Gf.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Xh(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Xh("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Xh(`No such layer: ${e}`)}calculateLosses(){return aa((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Gf.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=Gf.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[Gf.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=Gf.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=Gf.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(td(n),s)}function l(e){const n=e.name,a=uf(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Xh(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!hd(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],s=e[2];Qh(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];Qh(t in r);const a=r[t].inboundNodes[n].outputTensors;d.push(a[s])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Xh("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){aa((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Hf(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function jf(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=aa((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());ia(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),ho(r,"float32")}return null}function Kf(e,t){return fi(e,t)}function qf(e,t){let n,s;const r=t;n=r.xs,s=r.ys,p(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Xf("input",e.inputNames,n),i=Xf("output",e.outputNames,s),o=a[0].shape[0];p(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),p(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)p(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)p(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Xf(e,t,n){if(n instanceof gs)return[n];if(Array.isArray(n))return p(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new Xh(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function Yf(e){return"function"==typeof e.iterator}function Jf(e){p(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Zf(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Xd(e,t,n-t))):Xd(e,t,n-t)}function Qf(e,t){return aa((()=>null==e?null:Array.isArray(e)?e.map((e=>Qf(e,t))):sp(e,"int32"===t.dtype?t:t.toInt())))}function em(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function tm(e){const t=[];e instanceof gs&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(qd(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function nm(e,t){if(null==e)return;const n=[];if(t instanceof gs)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof gs)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function sm(e){return Array.isArray(e)}function rm(e){return!function(e){return e instanceof gs}(e)&&!sm(e)}function am(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(sm(e)&&e.length>0)t=!0;else if(rm(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Xh(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(rm(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new Xh(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(sm(e)){if((e=e).length!==t.length)throw new Xh(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new Xh(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=tm(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Xh(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l>=0&&o!==l)throw new Xh(`Error when checking ${r}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function im(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Xh(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Xh(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Xh(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Xh(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class om extends Gf{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Xh("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),Af(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?Ff(o[e],n,s):Df(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Pp(e.collectedTrainableWeights):Pp(e.trainableWeights),t}(e),u=Pp(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>wl.adagrad(.01),Adadelta:()=>wl.adadelta(1,.95,jh()),Adam:()=>wl.adam(.001,.9,.999,jh()),Adamax:()=>wl.adamax(.002,.9,.999,jh(),0),RMSProp:()=>wl.rmsprop(.001,.9,0,jh()),SGD:()=>wl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Xh(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ha))throw new Xh("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Xh(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>xf(e)))}else{const n=xf(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Xh(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(xf(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Md("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Md("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===gf?-1!==["accuracy","acc"].indexOf(i)?s=kf:-1!==["crossentropy","ce"].indexOf(i)&&(s=vf):this.lossFunctions[e]===mf?-1!==["accuracy","acc"].indexOf(i)?s=If:-1!==["crossentropy","ce"].indexOf(i)&&(s=Cf):-1!==["accuracy","acc"].indexOf(i)?s=wf:-1!==["crossentropy","ce"].indexOf(i)&&(s=$f),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=Sf(i);a=e,n=""+Tf(i)}let t;Md(n,(()=>{t=a})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;Jf(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return td(this.testLoop(i,a,s,n.verbose,n.steps))}finally{nm(r[0],e),nm(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new Yh("Verbose mode is not implemented yet.");p(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(a=aa((()=>{if(t.value){const{xs:n,ys:s}=qf(e,t.value),i=n.concat(s),u=aa((()=>r(i)));if(ia(i),0===l)for(let e=0;e<u.length;++e)a.push(ca(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=aa((()=>pa(a[e],fi(c,t)))),l>0&&ia(n)}ia(u),o+=c,++l}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Ya(a[e],o),ia(t)}return td(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Xh(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Xh(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Xh("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Mf;if(e instanceof gs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Xh(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Xh(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=Bf(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Zh(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new Xh(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return aa((()=>{const s=this.checkNumSamples(e);if(n)throw new Yh("Verbose predictLoop() is not implemented yet.");const r=em(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)aa((()=>{const n=r[t][0],s=r[t][1],a=Zf(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Mf(i);return Bf(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return td(a.map((e=>za(e,0))))}))}predict(e,t={}){const n=tm(e);im(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return Jf(s),this.predictLoop(n,s)}finally{nm(n,e)}}predictOnBatch(e){im(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new qh("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===mf?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=cd(e.map((e=>e.shape[0])));s.sort();const r=cd(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new Xh(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Xh(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!y(s,r))throw new Xh(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=am(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=am(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[hf,gf,ff];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===ff&&1===a.shape[a.shape.length-1])throw new Xh(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new Xh(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new Xh(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=Hf(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await jf(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,r){return aa((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new Yh("Verbose mode is not implemented yet.");if(null!=r)throw new Yh("steps mode in testLoop() is not implemented yet");{const s=em(a,n),r=ho(jd(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=Xd(r,a,o-a),u=Qf(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(ca(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=pa(i[e],fi(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ya(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;ed(e,s)>1&&(r+=`_${ed(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Mf(e),o=Bf(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=Kf(n,r[e]));const a=vi(n);t.push(a),l=0===e?n:pa(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=vi(t(s[r],o[r]))}oa(n),a.push(n)}return l=vi(l),this.calculateLosses().forEach((e=>{l=pa(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>aa((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new Mf(a),o=Bf(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=vi(s(r[e],o[e]));n=0===e?a:pa(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=vi(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,o,l,u,h;e.isTraining=!0;try{const d=null==s.batchSize?32:s.batchSize;Jf(d);const p=!1,f=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,p,d);r=f[0],a=f[1],h=f[2];let m,g=!1;if(null!=s.validationData&&s.validationData.length>0){if(g=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Yh("validationData including sample weights is not supported yet."):new Xh(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);i=s.validationData[0],o=s.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,d);l=n[0],u=n[1],m=l.concat(u)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-s.validationSplit)),t=r[0].shape[0];l=Zf(r,e,t),r=Zf(r,0,e),u=Zf(a,e,t),a=Zf(a,0,e),m=l.concat(u)}else null!=s.validationSteps&&(g=!0);const b=r.concat(a).concat(h);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let k,w;g?(e.makeTestFunction(),k=e.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(k=null,m=[],w=x.slice());const v=af(s.callbacks,s.yieldEvery);return await async function(e,t,n,s,r,a,i,o,l,u,h,d,p,f,m){null==r&&(r=32),null==a&&(a=1),null==h&&(h=!0),null==p&&(p=0);let g=!1;null!=l&&null!=u&&(g=!0);const b=e.checkNumSamples(n,r,f,"steps_per_epoch");let y;null!=b&&(y=jd(0,b)),null==i&&(i=1);const{callbackList:x,history:k}=lf(o,i,a,p,b,f,r,g,d);x.setModel(e),e.history=k,await x.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<a;++i){await x.onEpochBegin(i);const a={};{if("batch"===h)throw new Yh("batch shuffling is not implemneted yet");h&&c(y);const i=ho(y),o=em(b,r);for(let c=0;c<o.length;++c){const h={};if(await x.onBatchBegin(c,h),aa((()=>{const d=o[c][0],p=o[c][1],f=Xd(i,d,p-d);h.batch=c,h.size=p-d;const m=Qf(n,f),b=t(m);for(let e=0;e<s.length;++e){const t=s[e],n=b[e];h[t]=n,oa(n)}if(c===o.length-1&&g){const t=e.testLoop(l,u,r);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];oa(r),a["val_"+n]=r}}})),await x.onBatchEnd(c,h),Zp(h),e.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(i,a),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,y,b,x,d,s.epochs,s.verbose,v,k,m,s.shuffle,w,s.initialEpoch,null)}finally{e.isTraining=!1,nm(r,t),nm(a,n),nm(l,i),nm(u,o),null!=h&&ia(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(p(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),p(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),p(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),p(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),p(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Yf(n.validationData))p(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Yh("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=af(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=lf(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,u);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const u={};await d.onEpochBegin(m);let c=0,h=0;for(s||(g=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=qf(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Hf(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await jf(r[e],null,t[e]))}const u=s.concat(r).concat(i),p=o(u);ia(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,oa(n)}await d.onBatchEnd(h,a),Zp(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Yf(n.validationData)?nd(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):nd(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,u),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return ia(a),td(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ra().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ra().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=sd(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>sd(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=sd(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[sd(Tf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>sd(Tf(e))));{const e={};for(const t in this.metrics)e[t]=sd(Tf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=uf(Of(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=rd(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>rd(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=rd(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>rd(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=rd(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,sr.getSaveHandlers(n));if(0===t.length)throw new Xh(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Xh(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Xh("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Ys(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.3.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Ys(await this.optimizer.getWeights(),e);s.specs.push(...n),s.data=er([s.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ef(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=s.data,r.weightSpecs=s.specs,e.save(r)}setUserDefinedMetadata(e){Ef(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}om.className="Model",na(om);class lm extends om{}lm.className="Functional",na(lm);class um extends om{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:_p("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Xh(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof um||e instanceof om;let n;if(t){if(n=e,1!==n.outputs.length)throw new Xh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Xh("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Xh("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Xh("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Yp({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Xh(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Xh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Xp(this.outputs[0])}this.inboundNodes=[],new jp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Zh(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(zp(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new om({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new qh("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new qh("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new qh("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new qh("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Xh("Legacy serialization format not supported yet.");r=t}else p(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof um))throw new Yh(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=uf(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Xh("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Xh("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function cm(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const r=(n=e,s=t,sr.getLoadHandlers(n,s));if(0===r.length)r.push(function(e,t){return Mr(e,t)}(e,t));else if(r.length>1)throw new Xh(`Found more than one (${r.length}) load handlers for URL '${e}'`);e=r[0]}var n,s;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Xh("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=uf(Of(r),void 0,i),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new Xh("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=b(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Xs[n.dtype],c=e.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=nr()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===i){const t=b(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const s=Xs[i],a=e.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],s[t]=u[2*t+1];const r=qs(e,o,"float32"),i=qs(s,o,"float32");n[t]=js(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[t]=qs(u,o,i))}return n}(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),ia(e),ia(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}um.className="Sequential",na(um);class hm extends ea{getConfig(){return{}}}class dm extends hm{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Yh(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ja(e)}(e,t)}}dm.className="elu",na(dm);class pm extends hm{apply(e){return Yi(e)}}pm.className="selu",na(pm);class fm extends hm{apply(e){return qi(e)}}fm.className="relu",na(fm);class mm extends hm{apply(e){return aa((()=>$i(6,qi(e))))}}mm.className="relu6",na(mm);class gm extends hm{apply(e){return e}}gm.className="linear",na(gm);class bm extends hm{apply(e){return Zi(e)}}bm.className="sigmoid",na(bm);class ym extends hm{apply(e){return function(e){return aa((()=>{const t=pa(.5,fi(.2,e));return Ma(t,0,1)}))}(e)}}ym.className="hardSigmoid",na(ym);class xm extends hm{apply(e){return ao(e)}}xm.className="softplus",na(xm);class km extends hm{apply(e){return function(e){return aa((()=>Ya(e,da(e).add(1))))}(e)}}km.className="softsign",na(km);class wm extends hm{apply(e){return co(e)}}wm.className="tanh",na(wm);class vm extends hm{apply(e,t=-1){return ro(e,t)}}vm.className="softmax",na(vm);class Im extends hm{apply(e,t=-1){return bi(e,t)}}Im.className="logSoftmax",na(Im);class $m extends hm{apply(e,t=1){return aa((()=>Zi(e.mul(t)).mul(e)))}}function Cm(e){return e.getClassName()}function Nm(e,t={}){return ld(e,ta.getMap().classNameMap,t,"activation")}function Sm(e){if(null==e){return Nm({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Nm(t)}return e instanceof hm?e:Nm(e)}$m.className="swish",na($m);class Tm extends ea{}class Em extends Tm{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return aa((()=>{let t=zi([1]);return this.hasL1&&(t=pa(t,gi(fi(this.l1,da(e))))),this.hasL2&&(t=pa(t,gi(fi(this.l2,rp(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Em.className="L1L2",na(Em);const Rm={l1l2:"L1L2"};function Am(e){return id(e)}function Fm(e,t={}){return ld(e,ta.getMap().classNameMap,t,"regularizer")}function Dm(e){return null==e?null:"string"==typeof e?Fm({className:e in Rm?Rm[e]:e,config:{}}):e instanceof Tm?e:Fm(e)}class _m extends qp{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Mp(e);let n=qi(e);return null!=this.maxValue&&(n=Ma(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}_m.className="ReLU",na(_m);class Om extends qp{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Mp(e);return ci(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Om.className="LeakyReLU",na(Om);class Lm extends qp{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Rp(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Dm(e.alphaRegularizer),this.alphaConstraint=Nd(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Xh(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=zp(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Vp({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Mp(e),Ui(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ep(this.alphaInitializer),alphaRegularizer:Am(this.alphaRegularizer),alphaConstraint:$d(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Lm.className="PReLU",na(Lm);class Mm extends qp{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Yh(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Mp(e);return Ja(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Mm.className="ELU",na(Mm);class zm extends qp{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Mp(e);return n.mul(Kd(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}zm.className="ThresholdedReLU",na(zm);class Pm extends qp{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new vm).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Mp(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Bm(e,t,n){if("number"==typeof e)return Zh(e,t);if(e.length!==t)throw new Xh(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new Xh(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function Wm(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function Um(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+Hd([n-t,0]);else{if("same"!==s)throw new Xh(`Unsupport padding mode: ${s}.`);e*=t}return e}function Vm(e,t){return aa((()=>(Dd(t),"channelsFirst"===t?yo(e,[0,2,3,1]):e)))}function Gm(e,t){return aa((()=>(Dd(t),"channelsFirst"===t?yo(e,[0,2,3,4,1]):e)))}function Hm(e,t,n,s=[1,1],r="valid",a,i,o=null){return aa((()=>{if(null==a&&(a="channelsLast"),Dd(a),3!==e.rank&&4!==e.rank)throw new Xh(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Xh(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Vm(e,a);if("causal"===r)throw new Yh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Do({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=yo(l,[0,3,1,2])),l}))}Pm.className="Softmax",na(Pm);class jm extends qp{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",jm.verifyArgs(t),this.rank=e,fd(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Yh(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Bm(t.kernelSize,e,"kernelSize"),this.strides=Bm(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,_d(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Dd(this.dataFormat),this.activation=Sm(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Rp(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Nd(t.biasConstraint),this.biasRegularizer=Dm(t.biasRegularizer),this.activityRegularizer=Dm(t.activityRegularizer),this.dilationRate=Bm(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Xh(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Xh(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Xh(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Qh("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!pd(e.kernelSize,"number",1,3))throw new Xh(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Cm(this.activation),useBias:this.useBias,biasInitializer:Ep(this.biasInitializer),biasRegularizer:Am(this.biasRegularizer),activityRegularizer:Am(this.activityRegularizer),biasConstraint:$d(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Km extends jm{constructor(e,t){super(e,t),this.kernel=null,Km.verifyArgs(t),this.filters=t.filters,fd(this.filters,"filters"),this.kernelInitializer=Rp(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Nd(t.kernelConstraint),this.kernelRegularizer=Dm(t.kernelRegularizer)}build(e){e=zp(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Xh(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return aa((()=>{let t;e=Mp(e);const n=null==this.bias?null:this.bias.read(),s=gd(this.activation.getClassName());if(null!=s&&2===this.rank)t=Hm(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return aa((()=>{if(null==a&&(a="channelsLast"),Dd(a),3!==e.shape.length)throw new Xh(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Xh(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Xh(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=yo(e,[0,2,1])),"causal"===r)throw new Yh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ga(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=ip(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Hm(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Yh("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return aa((()=>{if(null==a&&(a="channelsLast"),Dd(a),4!==e.rank&&5!==e.rank)throw new Xh(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Xh(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Gm(e,a);if("causal"===r)throw new Yh("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ka(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=ip(o,n)),"channelsFirst"===a&&(o=yo(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=zp(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=Wm(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Ep(this.kernelInitializer),kernelRegularizer:Am(this.kernelRegularizer),kernelConstraint:$d(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Xh(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class qm extends Km{constructor(e){super(2,e),qm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!pd(e.kernelSize,"number",1,2))throw new Xh(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}qm.className="Conv2D",na(qm);class Xm extends Km{constructor(e){super(3,e),Xm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Xh(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Xm.className="Conv3D",na(Xm);class Ym extends qm{constructor(e){if(super(e),this.inputSpec=[new Vp({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Xh(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=zp(e)).length)throw new Xh("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Xh("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Vp({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return aa((()=>{let t=Mp(e);if(4!==t.shape.length)throw new Xh(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[s,Um(i,c,l,this.padding),Um(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=yo(t,[0,2,3,1]));let p=ja(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=yo(p,[0,3,1,2])),null!=this.bias&&(p=ip(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=zp(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Um(t[s],o,a,this.padding),t[r]=Um(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ym.className="Conv2DTranspose",na(Ym);class Jm extends Km{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Xh("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Xh("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Xh(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Rp(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Dm(t.depthwiseRegularizer),this.depthwiseConstraint=Nd(t.depthwiseConstraint),this.pointwiseInitializer=Rp(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Dm(t.pointwiseRegularizer),this.pointwiseConstraint=Nd(t.pointwiseConstraint)}build(e){if((e=zp(e)).length<this.rank+2)throw new Xh(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Xh(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Vp({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return aa((()=>{let t;if(e=Mp(e),1===this.rank)throw new Yh("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=yo(e,[0,2,3,1])),t=Ji(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ip(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=yo(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ep(this.depthwiseInitializer),e.pointwiseInitializer=Ep(this.pointwiseInitializer),e.depthwiseRegularizer=Am(this.depthwiseRegularizer),e.pointwiseRegularizer=Am(this.pointwiseRegularizer),e.depthwiseConstraint=$d(this.depthwiseConstraint),e.pointwiseConstraint=$d(this.pointwiseConstraint),e}}Jm.className="SeparableConv";class Zm extends Jm{constructor(e){super(2,e)}}Zm.className="SeparableConv2D",na(Zm);class Qm extends Km{constructor(e){super(1,e),Qm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!pd(e.kernelSize,"number",1,1))throw new Xh(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Qm.className="Conv1D",na(Qm);class eg extends qp{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return aa((()=>{if(e=Mp(e),"channelsLast"===this.dataFormat){const t=Jd(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Jd(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Jd(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Jd(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}eg.className="Cropping2D",na(eg);class tg extends qp{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dd(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,dd(Td,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return aa((()=>{let t=Mp(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=yo(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?t.resizeNearestNeighbor([e,s]):t.resizeBilinear([e,s]);return yo(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,s]):t.resizeBilinear([e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}tg.className="UpSampling2D",na(tg);class ng extends jm{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Rp(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Nd(e.depthwiseConstraint),this.depthwiseRegularizer=Dm(e.depthwiseRegularizer)}build(e){if((e=zp(e)).length<4)throw new Xh(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Xh(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return aa((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return aa((()=>{null==r&&(r="channelsLast"),Dd(r);let i=Vm(e,r);if(4!==e.rank)throw new Xh(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Xh(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=qa(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=yo(i,[0,3,1,2])),i}))}(e=Mp(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ip(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=zp(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Wm(t,this.kernelSize[0],this.padding,this.strides[0]),a=Wm(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ep(this.depthwiseInitializer),e.depthwiseRegularizer=Am(this.depthwiseRegularizer),e.depthwiseConstraint=$d(this.depthwiseRegularizer),e}}function sg(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new Xh("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function rg(e,t,n,s=!1,r,a,i=!1,o=!1){return aa((()=>{const l=t.shape.length;if(l<3)throw new Xh(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(jd(2,l));if(t=yo(t,u),null!=a)throw new Yh("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=r.asType("bool").asType("float32")).rank===l-1&&(r=ni(r,-1)),r=yo(r,u)),s&&(t=Xi(t,0),null!=r&&(r=Xi(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=fo(t);let m,g;null!=r&&(m=fo(r));for(let t=0;t<p;++t){const n=f[t],s=aa((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=aa((()=>{const e=m[t],n=Bi(e).sub(e);return{output:s[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,r)=>s[1][r].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=uo(c,1)),[h,g,d]}))}ng.className="DepthwiseConv2D",na(ng);class ag extends qp{constructor(e){let t;if(super(e),null==e.cell)throw new Xh("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new pg({cells:e.cell}):e.cell,null==t.stateSize)throw new Xh("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Vp({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?jd(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Op(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return aa((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Yh("Constants support is not implemented in RNN yet.");Op(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Vp({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!y(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Xh(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new Vp({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){aa((()=>{if(!this.stateful)throw new Kh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Xh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>zi([n,e]))):this.states_=[zi([n,this.cell.stateSize])];else if(null==e)ia(this.states_),null!=this.keptStates&&(ia(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>zi([n,e]))):this.states_[0]=zi([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Xh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ia(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!y(s.shape,a))throw new Xh(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>oa(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=sg(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Vp({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Gp){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return aa((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=Mp(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new Xh(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=rg(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return aa((()=>{let t=zi(e.shape);return t=gi(t,[1,2]),t=qd(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?ep(t,[1,e]):t)):this.cell.stateSize>1?[ep(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===ag.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=uf(t.cell,n);return new e(Object.assign(t,{cell:s}))}}ag.className="RNN",na(ag);class ig extends qp{}class og extends ig{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,fd(this.units,"units"),this.activation=Sm(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Rp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Dm(e.kernelRegularizer),this.recurrentRegularizer=Dm(e.recurrentRegularizer),this.biasRegularizer=Dm(e.biasRegularizer),this.kernelConstraint=Nd(e.kernelConstraint),this.recurrentConstraint=Nd(e.recurrentConstraint),this.biasConstraint=Nd(e.biasConstraint),this.dropout=Gd([1,Hd([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gd([1,Hd([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=zp(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return aa((()=>{if(2!==(e=e).length)throw new Xh(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fg({ones:()=>Bi(e),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fg({ones:()=>Bi(n),rate:this.recurrentDropout,training:s}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=np(null!=a?fi(e,a):e,this.kernel.read()),null!=this.bias&&(r=ip(r,this.bias.read())),null!=i&&(n=fi(n,i));let o=pa(r,np(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Cm(this.activation),useBias:this.useBias,kernelInitializer:Ep(this.kernelInitializer),recurrentInitializer:Ep(this.recurrentInitializer),biasInitializer:Ep(this.biasInitializer),kernelRegularizer:Am(this.kernelRegularizer),recurrentRegularizer:Am(this.recurrentRegularizer),biasRegularizer:Am(this.biasRegularizer),activityRegularizer:Am(this.activityRegularizer),kernelConstraint:$d(this.kernelConstraint),recurrentConstraint:$d(this.recurrentConstraint),biasConstraint:$d(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}og.className="SimpleRNNCell",na(og);class lg extends ag{constructor(e){e.cell=new og(e),super(e)}call(e,t){return aa((()=>{null!=this.cell.dropoutMask&&(ia(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ia(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}lg.className="SimpleRNN",na(lg);class ug extends ig{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Xh("GRUCell does not support reset_after parameter set to true.");this.units=e.units,fd(this.units,"units"),this.activation=Sm(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sm(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Rp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Dm(e.kernelRegularizer),this.recurrentRegularizer=Dm(e.recurrentRegularizer),this.biasRegularizer=Dm(e.biasRegularizer),this.kernelConstraint=Nd(e.kernelConstraint),this.recurrentConstraint=Nd(e.recurrentConstraint),this.biasConstraint=Nd(e.biasConstraint),this.dropout=Gd([1,Hd([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gd([1,Hd([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=zp(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return aa((()=>{if(2!==(e=e).length)throw new Xh(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fg({ones:()=>Bi(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fg({ones:()=>Bi(s),rate:this.recurrentDropout,training:n,count:3}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=fi(e,r[0]));let u=np(e,this.kernel.read());this.useBias&&(u=ip(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=fi(s,a[0]));const c=this.recurrentKernel.read(),[h,d]=io(c,[2*this.units,this.units],c.rank-1),p=np(s,h),[f,m,g]=io(u,3,u.rank-1),[b,y]=io(p,2,p.rank-1);i=this.recurrentActivation.apply(pa(f,b)),o=this.recurrentActivation.apply(pa(m,y));const x=np(fi(o,s),d);l=this.activation.apply(pa(g,x));const k=pa(fi(i,s),fi(pa(1,Oi(i)),l));return[k,k]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Cm(this.activation),recurrentActivation:Cm(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ep(this.kernelInitializer),recurrentInitializer:Ep(this.recurrentInitializer),biasInitializer:Ep(this.biasInitializer),kernelRegularizer:Am(this.kernelRegularizer),recurrentRegularizer:Am(this.recurrentRegularizer),biasRegularizer:Am(this.biasRegularizer),activityRegularizer:Am(this.activityRegularizer),kernelConstraint:$d(this.kernelConstraint),recurrentConstraint:$d(this.recurrentConstraint),biasConstraint:$d(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}ug.className="GRUCell",na(ug);class cg extends ag{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ug(e),super(e)}call(e,t){return aa((()=>{null!=this.cell.dropoutMask&&(ia(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ia(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}cg.className="GRU",na(cg);class hg extends ig{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,fd(this.units,"units"),this.activation=Sm(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sm(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Rp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Dm(e.kernelRegularizer),this.recurrentRegularizer=Dm(e.recurrentRegularizer),this.biasRegularizer=Dm(e.biasRegularizer),this.kernelConstraint=Nd(e.kernelConstraint),this.recurrentConstraint=Nd(e.recurrentConstraint),this.biasConstraint=Nd(e.biasConstraint),this.dropout=Gd([1,Hd([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Gd([1,Hd([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=zp(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends hp{apply(t,s){const r=e.apply([n]),a=(new pp).apply([n]),i=e.apply([2*n]);return Qd(Qd(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return aa((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Xh(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fg({ones:()=>Bi(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fg({ones:()=>Bi(s),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=fi(e,a[0]));let h=np(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=fi(s,i[0])),h=pa(h,np(s,this.recurrentKernel.read())),this.useBias&&(h=ip(h,this.bias.read()));const[d,p,f,m]=io(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=pa(fi(l,r),fi(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=fi(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Cm(this.activation),recurrentActivation:Cm(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ep(this.kernelInitializer),recurrentInitializer:Ep(this.recurrentInitializer),biasInitializer:Ep(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Am(this.kernelRegularizer),recurrentRegularizer:Am(this.recurrentRegularizer),biasRegularizer:Am(this.biasRegularizer),activityRegularizer:Am(this.activityRegularizer),kernelConstraint:$d(this.kernelConstraint),recurrentConstraint:$d(this.recurrentConstraint),biasConstraint:$d(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}hg.className="LSTMCell",na(hg);class dg extends ag{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new hg(e),super(e)}call(e,t){return aa((()=>{null!=this.cell.dropoutMask&&(ia(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ia(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}dg.className="LSTM",na(dg);class pg extends ig{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return aa((()=>{let n=(e=e).slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Op(e)&&(e=e[0]),e=e,this.cells.forEach(((n,s)=>{Md(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(uf(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Wp(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Up(t)}}function fg(e){const{ones:t,rate:n,training:s=!1,count:r=1}=e,a=()=>op(t(),n),i=()=>lp(a,t,s);return!r||r<=1?oa(i().clone()):Array(r).fill(void 0).map(i).map((e=>oa(e.clone())))}pg.className="StackedRNNCells",na(pg);var mg,gg,bg,yg;class xg extends ag{constructor(e){if(e.unroll)throw new Yh("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Yh("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Vp({ndim:5})]}call(e,t){return aa((()=>{if(null!=this.cell.dropoutMask&&(ia(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ia(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Xh("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return aa((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=zi([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){aa((()=>{if(!this.stateful)throw new Kh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new Xh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>zi(r))):this.states_=[zi(r)];else if(null==e)ia(this.states_),null!=this.keptStates&&(ia(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>zi(r))):this.states_[0]=zi(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Xh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ia(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!y(n.shape,s))throw new Xh(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>oa(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Wm(l,s[0],r,a[0],i[0]),h=Wm(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}xg.className="ConvRNN2D";class kg extends hg{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,fd(this.filters,"filters"),this.kernelSize=Bm(n,2,"kernelSize"),this.kernelSize.forEach((e=>fd(e,"kernelSize"))),this.strides=Bm(s||1,2,"strides"),this.strides.forEach((e=>fd(e,"strides"))),this.padding=r||"valid",_d(this.padding),this.dataFormat=a||"channelsLast",Dd(this.dataFormat),this.dilationRate=Bm(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>fd(e,"dilationRate")))}build(e){var t;e=zp(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Xh(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends hp{apply(e,t){return Zd([n.apply([s]),Pi([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return aa((()=>{if(3!==e.length)throw new Xh(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fg({ones:()=>Bi(s),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?fi(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fg({ones:()=>Bi(r),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3);const[b,y,x,k]=io(this.kernel.read(),4,3),[w,v,I,$]=this.useBias?io(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,y,v,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,k,$,this.padding);const[C,N,S,T]=io(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,N),m=this.recurrentConv(m,S),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(pa(l,p)),R=this.recurrentActivation.apply(pa(u,f)),A=pa(fi(R,a),fi(E,this.activation.apply(pa(c,m)))),F=fi(this.recurrentActivation.apply(pa(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){const r=Va(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ip(r,n,this.dataFormat):r}recurrentConv(e,t){return Va(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}kg.className="ConvLSTM2DCell",na(kg);class wg extends xg{constructor(e){const t=new kg(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}wg.className="ConvLSTM2D",na(wg);class vg extends qp{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return aa((()=>{this.invokeCallHook(e,t);const n=Mp(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return lp((()=>op(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}vg.className="Dropout",na(vg);class Ig extends vg{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Ig.className="SpatialDropout1D",na(Ig);class $g extends qp{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,fd(this.units,"units"),this.activation=Sm(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Rp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Rp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Nd(e.kernelConstraint),this.biasConstraint=Nd(e.biasConstraint),this.kernelRegularizer=Dm(e.kernelRegularizer),this.biasRegularizer=Dm(e.biasRegularizer),this.activityRegularizer=Dm(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=zp(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=zp(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return aa((()=>{this.invokeCallHook(e,t);const n=Mp(e),s=gd(this.activation.getClassName());let r;return null!=s?r=np(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=np(n,this.kernel.read()),null!=this.bias&&(r=ip(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Cm(this.activation),useBias:this.useBias,kernelInitializer:Ep(this.kernelInitializer),biasInitializer:Ep(this.biasInitializer),kernelRegularizer:Am(this.kernelRegularizer),biasRegularizer:Am(this.biasRegularizer),activityRegularizer:Am(this.activityRegularizer),kernelConstraint:$d(this.kernelConstraint),biasConstraint:$d(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}$g.className="Dense",na($g);class Cg extends qp{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=zp(e);for(const t of e.slice(1))if(null==t)throw new Xh(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ud(e,1)]}call(e,t){return aa((()=>{this.invokeCallHook(e,t);let n=Mp(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Xh(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Ud(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Cg.className="Flatten",na(Cg);class Ng extends qp{constructor(e){super(e),this.supportsMasking=!0,this.activation=Sm(e.activation)}call(e,t){return aa((()=>{this.invokeCallHook(e,t);const n=Mp(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Cm(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Ng.className="Activation",na(Ng);class Sg extends qp{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return aa((()=>{return e=Mp(e),t=e,n=this.n,aa((()=>{if(2!==t.shape.length)throw new Xh(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return ep(qd(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Sg.className="RepeatVector",na(Sg);class Tg extends qp{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new Xh("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=Ud(e);if(null!==a){if(0===r||i%r!=0)throw new Xh(n);s[a]=i/r}else if(i!==r)throw new Xh(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return aa((()=>{this.invokeCallHook(e,t);const n=Mp(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Tg.className="Reshape",na(Tg);class Eg extends qp{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=jd(1,e.dims.length+1);if(!y(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Vp({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=zp(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return yo(Mp(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Eg.className="Permute",na(Eg);class Rg extends qp{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Mp(e);return ma(Li(n,this.maskValue),-1)}call(e,t){return aa((()=>{this.invokeCallHook(e,t);const n=Mp(e),s=ma(Li(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}Rg.className="Masking",na(Rg);class Ag extends qp{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(nd(e.inputLength))}this.inputDim=e.inputDim,fd(this.inputDim,"inputDim"),this.outputDim=e.outputDim,fd(this.outputDim,"outputDim"),this.embeddingsInitializer=Rp(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Dm(e.embeddingsRegularizer),this.activityRegularizer=Dm(e.activityRegularizer),this.embeddingsConstraint=Nd(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return aa((()=>this.maskZero?(e=Mp(e),Li(e,bo(e))):null))}computeOutputShape(e){if(e=zp(e),null==this.inputLength)return[...e,this.outputDim];const t=nd(this.inputLength);if(t.length!==e.length-1)throw new Xh(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new Xh(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return aa((()=>{this.invokeCallHook(e,t);let n=Mp(e);return"int32"!==n.dtype&&(n=Kd(n,"int32")),sp(this.embeddings.read(),n.as1D()).reshape(zp(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ep(this.embeddingsInitializer),embeddingsRegularizer:Am(this.embeddingsRegularizer),activityRegularizer:Am(this.activityRegularizer),embeddingsConstraint:$d(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Ag.className="Embedding",na(Ag);class Fg extends qp{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Yh}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new Xh("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[zp(e)]),(e=e).length<2)throw new Xh(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=cd(t),t.length>1)throw new Xh(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===cd(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return aa((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=Hd(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=qd(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=s.reshape([r].concat(Ud(e.slice(1))));i=yo(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const r=jd(1,e).concat([0]);t.push(yo(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=yo(s.reshape([-1,t]),[1,0]).reshape(n)}else if(r>1){const e=[r-1].concat(jd(0,r-1));s=yo(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=cd(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return aa((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Xh("`mask` should be an Array");if(!Array.isArray(e))throw new Xh("`inputs` should be an Array");if(t.length!==e.length)throw new Xh(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:ni(e,0))))[0];for(let e=1;e<t.length-1;++e)n=yi(n,t[e]);return n}))}}class Dg extends Fg{constructor(e){super(e)}mergeFunction(e){return aa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=pa(t,e[n]);return t}))}}Dg.className="Add",na(Dg);class _g extends Fg{constructor(e){super(e)}mergeFunction(e){return aa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=fi(t,e[n]);return t}))}}_g.className="Multiply",na(_g);class Og extends Fg{constructor(e){super(e)}mergeFunction(e){return aa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=pa(t,e[n]);return fi(1/e.length,t)}))}}Og.className="Average",na(Og);class Lg extends Fg{constructor(e){super(e)}mergeFunction(e){return aa((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=wi(t,e[n]);return t}))}}Lg.className="Maximum",na(Lg);class Mg extends Fg{constructor(e){super(e)}mergeFunction(e){return aa((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=$i(t,e[n]);return t}))}}Mg.className="Minimum",na(Mg);class zg extends Fg{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Xh("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(y(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new Xh("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return aa((()=>Zd(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Xh("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Xh("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Xh("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Xh(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return aa((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(Bi(e[n]).asType("bool")):t[n].rank<e[n].rank?s.push(ni(t[n],-1)):s.push(t[n]);const r=za(s,this.axis);return fa(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Pg(e,t){for(;e<0;)e+=t;return e}zg.className="Concatenate",na(zg);class Bg extends Fg{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Yh("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new Xh(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Xh(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Pg(t,e[n].shape.length))):[Pg(this.axes,n.shape.length),Pg(this.axes,s.shape.length)],this.normalize&&(n=cf(n,t[0]),s=cf(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Yh("batchDot is not implemented for tensors of 4D or higher rank yet");if(p(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),p(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Yh("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return aa((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=e.matMul(t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Pg(this.axes,e.length),Pg(this.axes,t.length)],n}computeOutputShape(e){p(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Yh("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Bg.className="Dot",na(Bg);class Wg extends qp{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return aa((()=>{this.invokeCallHook(e,t);const n=Mp(e);return lp((()=>tp(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}Wg.className="GaussianNoise",na(Wg);class Ug extends qp{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return aa((()=>{this.invokeCallHook(e,t);const n=Mp(e);return this.rate>0&&this.rate<1?lp((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(tp(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Ug.className="GaussianDropout",na(Ug);class Vg extends qp{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Mp(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return aa((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return lp((()=>{const t=Mp(e),s=-1.7580993408473766;let r=ui(Ki(n),this.rate);r=Kd(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate;return t.mul(r).add(r.add(-1).mul(s)).mul(a).add(i)}),(()=>Mp(e)),t.training||!1)}return e}))}}function Gg(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=_a(e,t,n,s,r,a);else if(3===e.rank)i=Oa(e,t,n,s,r,a);else{if(4!==e.rank)throw new Yh(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=La(e,t,n,s,r,a)}return i}Vg.className="AlphaDropout",na(Vg);class Hg extends qp{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Rp(e.betaInitializer||"zeros"),this.gammaInitializer=Rp(e.gammaInitializer||"ones"),this.movingMeanInitializer=Rp(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Rp(e.movingVarianceInitializer||"ones"),this.betaConstraint=Nd(e.betaConstraint),this.gammaConstraint=Nd(e.gammaConstraint),this.betaRegularizer=Dm(e.betaRegularizer),this.gammaRegularizer=Dm(e.gammaRegularizer)}build(e){e=zp(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Xh(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Vp({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return aa((()=>{const n=null!=t.training&&t.training,s=Mp(e),r=s.shape,a=r.length,i=jd(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Zh(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!y(u,jd(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,r=this.scale?this.gamma.read().reshape(l):null;return Gg(s,e,t,n,r,this.epsilon)}return Gg(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,s,r=.001){return y(s.slice().sort(),jd(0,e.rank-1))?function(e,t,n,s,r=.001){return aa((()=>{const a=_i(e,s),i=a.mean,o=a.variance;return[Gg(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return aa((()=>{const a=_i(e,s),i=a.mean,o=a.variance,l=[];for(const t of jd(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[Gg(e,u,c,d,h,r),i,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{aa((()=>{const s=1-n,r=e.read(),a=r.sub(t).mul(s);e.write(r.sub(a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ep(this.betaInitializer),gammaInitializer:Ep(this.gammaInitializer),movingMeanInitializer:Ep(this.movingMeanInitializer),movingVarianceInitializer:Ep(this.movingVarianceInitializer),betaRegularizer:Am(this.betaRegularizer),gammaRegularizer:Am(this.gammaRegularizer),betaConstraint:$d(this.betaConstraint),gammaConstraint:$d(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Hg.className="BatchNormalization",na(Hg);class jg extends qp{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Rp(e.betaInitializer||"zeros"),this.gammaInitializer=Rp(e.gammaInitializer||"ones"),this.betaRegularizer=Dm(e.betaRegularizer),this.gammaRegularizer=Dm(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=zp(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==cd(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Mp(e),s=n.shape,r=s.length;return aa((()=>{let{mean:e,variance:t}=_i(n,this.axis,!0);const a=Zh(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r&&this.axis!==[r-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),Gg(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ep(this.betaInitializer),gammaInitializer:Ep(this.gammaInitializer),betaRegularizer:Am(this.betaRegularizer),gammaRegularizer:Am(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}jg.className="LayerNormalization",na(jg);class Kg extends qp{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Xh(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Xh(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Xh(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Vp({ndim:4})]}computeOutputShape(e){let t,n;return e=zp(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return aa((()=>{return t=Mp(e),n=this.padding,s=this.dataFormat,aa((()=>{if(4!==t.rank)throw new Xh(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Xh("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Xh(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Wi(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function qg(e,t,n,s,r,a){return aa((()=>{let i;Dd(r),Od(a),_d(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Vm(e,r);const o="same"===s?"same":"valid";return i="max"===a?xi(e,t,n,o):Aa(e,t,n,o),"channelsFirst"===r&&(i=yo(i,[0,3,1,2])),i}))}function Xg(e,t,n,s,r,a){return aa((()=>{let i;Dd(r),Od(a),_d(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Gm(e,r);const o="same"===s?"same":"valid";return i="max"===a?ki(e,t,n,o):Fa(e,t,n,o),"channelsFirst"===r&&(i=yo(i,[0,4,1,2,3])),i}))}Kg.className="ZeroPadding2D",na(Kg);class Yg extends qp{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Xh(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(fd(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Xh(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}fd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,_d(this.padding),this.inputSpec=[new Vp({ndim:3})]}computeOutputShape(e){const t=Wm((e=zp(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return aa((()=>{this.invokeCallHook(e,t),e=qd(Mp(e),2);const n=this.poolingFunction(Mp(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return lo(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Jg extends Yg{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Dd(r),_d(s),qg(e,t,n,s,r,"max")}}Jg.className="MaxPooling1D",na(Jg);class Zg extends Yg{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Dd(r),_d(s),qg(e,t,n,s,r,"avg")}}Zg.className="AveragePooling1D",na(Zg);class Qg extends qp{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Xh(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];fd(this.poolSize,"poolSize"),fd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dd(this.dataFormat),_d(this.padding),this.inputSpec=[new Vp({ndim:4})]}computeOutputShape(e){e=zp(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Wm(t,this.poolSize[0],this.padding,this.strides[0]),n=Wm(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return aa((()=>(this.invokeCallHook(e,t),this.poolingFunction(Mp(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class eb extends Qg{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Dd(r),_d(s),qg(e,t,n,s,r,"max")}}eb.className="MaxPooling2D",na(eb);class tb extends Qg{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Dd(r),_d(s),qg(e,t,n,s,r,"avg")}}tb.className="AveragePooling2D",na(tb);class nb extends qp{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Xh(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];fd(this.poolSize,"poolSize"),fd(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dd(this.dataFormat),_d(this.padding),this.inputSpec=[new Vp({ndim:5})]}computeOutputShape(e){e=zp(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Wm(t,this.poolSize[0],this.padding,this.strides[0]),n=Wm(n,this.poolSize[1],this.padding,this.strides[1]),s=Wm(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return aa((()=>(this.invokeCallHook(e,t),this.poolingFunction(Mp(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class sb extends nb{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Dd(r),_d(s),Xg(e,t,n,s,r,"max")}}sb.className="MaxPooling3D",na(sb);class rb extends nb{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Dd(r),_d(s),Xg(e,t,n,s,r,"avg")}}rb.className="AveragePooling3D",na(rb);class ab extends qp{constructor(e){super(e),this.inputSpec=[new Vp({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Yh}}class ib extends ab{constructor(e){super(e||{})}call(e,t){return aa((()=>{const t=Mp(e);return vi(t,1)}))}}ib.className="GlobalAveragePooling1D",na(ib);class ob extends ab{constructor(e){super(e||{})}call(e,t){return aa((()=>{const t=Mp(e);return pi(t,1)}))}}ob.className="GlobalMaxPooling1D",na(ob);class lb extends qp{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dd(this.dataFormat),this.inputSpec=[new Vp({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Yh}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ub extends lb{call(e,t){return aa((()=>{const t=Mp(e);return"channelsLast"===this.dataFormat?vi(t,[1,2]):vi(t,[2,3])}))}}ub.className="GlobalAveragePooling2D",na(ub);class cb extends lb{call(e,t){return aa((()=>{const t=Mp(e);return"channelsLast"===this.dataFormat?pi(t,[1,2]):pi(t,[2,3])}))}}cb.className="GlobalMaxPooling2D",na(cb);class hb extends qp{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=uf(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class db extends hb{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=zp(e)).length<3)throw new Xh(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=zp(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return aa((()=>rg(((e,n)=>[Mp(this.layer.call(e,t)),[]]),e=Mp(e),[],!1,null,null,!1,!0)[1]))}}db.className="TimeDistributed",na(db);class pb extends hb{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=uf(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=uf(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,dd(Ad,"BidirectionalMergeMode",r),e.weights)throw new Yh("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(s=r.slice(1),t=r[0]):t=r[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):td(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=sg(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Xh("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new Vp({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new Yh("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Gp;for(const e of a)if(e instanceof Gp!==o)throw new Xh("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return aa((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Xi(r,1)),"concat"===this.mergeMode?i=Zd([s,r]):"sum"===this.mergeMode?i=pa(s,r):"ave"===this.mergeMode?i=fi(.5,pa(s,r)):"mul"===this.mergeMode?i=fi(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Md(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Md(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=uf(t.layer);if(delete t.layer,null!=t.numConstants)throw new Yh("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}function fb(e,t,n=new Map,s=new Set){if(null==e)return null;if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(yb(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=fb(e[a],t,n,s);r[a]=i}return s.delete(e),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function mb(e,t=bb){return gb(e,t)}function gb(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(yb(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=gb(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function bb(e){return null===e?null:yb(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function yb(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof gs))}function xb(e){return fb(e,kb)}function kb(e){return e instanceof gs?{value:e.clone(),recurse:!1}:yb(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}pb.className="Bidirectional",na(pb),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(mg||(mg={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(gg||(gg={}));class wb{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class vb extends wb{constructor(){super(vb.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}vb.INITIAL_CAPACITY=32;class Ib{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Fb(this,e)}filter(e){return new Rb(this,e)}map(e){return new Ab(this,e)}mapAsync(e){return new Db(this,e)}serialMapAsync(e){return new Db(this,e).serial()}flatmap(e){return new Ob(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Eb(this,e,t)}columnMajorBatch(e,t=!0,n=bb){return this.rowMajorBatch(e,t).map((e=>mb(e,n)))}concatenate(e,t){return new Lb(new $b([this,e]),t)}take(e){return e<0||null==e?this:new Tb(this,e)}skip(e){return e<0||null==e?this:new Sb(this,e)}prefetch(e){return new Mb(this,e)}shuffle(e,t){return new zb(this,e,t)}serial(){return new Nb(this)}}class $b extends Ib{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:xb(e),done:!1}}}class Cb extends Ib{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Nb extends Ib{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Sb extends Ib{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;ia(e.value)}return this.upstream.next()}}class Tb extends Ib{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Eb extends Ib{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Rb extends Ib{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;ia(e.value)}}}class Ab extends Ib{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Es(e.value),n=this.transform(e.value),s=Es(n);for(const e of t)Ts(e,s)||e.dispose();return{value:n,done:!1}}}class Fb extends Ib{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Db extends Ib{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Es(e.value),n=await this.transform(e.value),s=Es(n);for(const e of t)Ts(e,s)||e.dispose();return{value:n,done:!1}}}class _b extends Ib{constructor(){super(),this.outputQueue=new vb,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Ob extends _b{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Es(e.value),n=this.transform(e.value),s=Es(n);this.outputQueue.pushAll(n);for(const e of t)Ts(e,s)||e.dispose();return!0}}class Lb extends Ib{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(yg=bg||(bg={}))[yg.FAIL=0]="FAIL",yg[yg.SHORTEST=1]="SHORTEST",yg[yg.LONGEST=2]="LONGEST";class Mb extends Ib{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new wb(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class zb extends Mb{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Vi.alea(n||ts().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Pb{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return p(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Bb((async()=>(await n.iterator()).columnMajorBatch(e,t,Wb)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Bb((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Bb((async()=>(await t.iterator()).filter((t=>aa((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Bb((async()=>(await t.iterator()).map((t=>aa((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Bb((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Bb((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Bb((async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new Cb(r)).take(e),new Lb(n,s);var n,s,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Bb((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=Vi.alea(t||ts().toString());return Bb((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Bb((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Bb(e,t=null){return new class extends Pb{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Wb(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof gs||E(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof gs?uo(e):qs(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function Ub(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Pb.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Vb=lu;class Gb extends l{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new o(this,sa())}nextDataId(){return Gb.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,K().get("IS_NODE")&&jl("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&A(n[0])){const r=n.map((e=>ns(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?ql(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ss(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Sr(e.shape,e.dtype,n)}makeOutput(e,t,n){const s=this.write(e,t,n);return sa().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ts();return e(),{kernelMs:ts()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ub([e],"where");const t=this.readSync(e.dataId);return Vb(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Hb(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(Ub(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=b(i.shape),c=n||i.dtype,h=S(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],r);return o.makeTensorInfo(i.shape,c,h)}}function jb(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(Ub(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}Gb.nextDataId=0,la("cpu",(()=>new Gb),1);const Kb=Hb(He,(e=>e>=0?e:Math.exp(e)-1)),qb={kernelName:He,backendName:"cpu",kernelFunc:Kb};function Xb(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Yb={kernelName:lt,backendName:"cpu",kernelFunc:Xb};function Jb(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;Ub([r],"leakyRelu");const i=b(r.shape),o=n.data.get(r.dataId).values,l=N("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const Zb={kernelName:ft,backendName:"cpu",kernelFunc:Jb};function Qb(e){return(t,n,s,r,a)=>{const i=ei(t,n),o=i.length,l=L(i),u=N(a,b(i)),c=t.length,h=n.length,d=L(t),p=L(n),f=Za(t,i),m=Za(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=G(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=V(a,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const b=V(g,h,p);u[t]=e(s[i],r[b])}return[u,i]}}const ey=Qb(((e,t)=>e<0?t*e:e));function ty(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Ub([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=ey(s.shape,r.shape,a,i,s.dtype);return n.makeTensorInfo(l,s.dtype,o)}const ny={kernelName:Xt,backendName:"cpu",kernelFunc:ty},sy=Hb(en,(e=>Math.max(0,e))),ry={kernelName:en,backendName:"cpu",kernelFunc:sy},ay=Hb(on,(e=>Math.min(Math.max(0,e),6))),iy={kernelName:on,backendName:"cpu",kernelFunc:ay};function oy(e,t,n,s,r){if("linear"===n)return Xb({inputs:{x:t},backend:e});if("relu"===n)return sy({inputs:{x:t},backend:e});if("elu"===n)return Kb({inputs:{x:t},backend:e});if("relu6"===n)return ay({inputs:{x:t},backend:e});if("prelu"===n)return ty({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return Jb({inputs:{x:t},backend:e,attrs:{alpha:r}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ly(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const uy={kernelName:ve,backendName:"cpu",kernelFunc:ly};function cy(e,t,n="float32"){if("complex64"===n)return ly({inputs:{real:cy(e,t,"float32"),imag:cy(e,t,"float32")},backend:e});const s=B(b(t),n);return e.makeTensorInfo(t,n,s)}function hy(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const dy={kernelName:Zt,backendName:"cpu",kernelFunc:hy};function py(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return Xb({inputs:{x:r},backend:n});const e=cy(n,r.shape,r.dtype),t=py({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=ly({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=hy({inputs:{input:r},backend:n}),t=py({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!T(r.dtype,a)){const e=Xb({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(r.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(r.shape,"int32",t)}if("bool"===a){const e=n.data.get(r.dataId).values,t=es([0],r.dtype),[s,a]=Qb(((e,t)=>e!==t?1:0))(r.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const fy={kernelName:xe,backendName:"cpu",kernelFunc:py};function my(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;Ub([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=s||a.dtype,[h,d]=t(a.shape,i.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=py({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=py({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,y]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(y,"float32",g),k=o.makeTensorInfo(y,"float32",b),w=ly({inputs:{real:x,imag:k},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(k),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function gy(e){return(t,n,s,r,a,i)=>{const o=ei(t,n),l=b(o),u=o.length,c=L(o),h=N("float32",l),d=N("float32",l),p=Za(t,o),f=Za(n,o),m=ql(s,r),g=ql(a,i),y=t.length,x=L(t),k=n.length,w=L(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,s=t%g.length,r=e(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[t]=r.real,d[t]=r.imag}else for(let t=0;t<h.length;t++){const n=G(t,u,c),s=n.slice(-y);p.forEach((e=>s[e]=0));const r=V(s,y,x),a=n.slice(-k);f.forEach((e=>a[e]=0));const i=V(a,k,w),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const by=Qb(((e,t)=>e+t)),yy=gy(((e,t,n,s)=>({real:e+n,imag:t+s}))),xy=my(te,by,yy),ky={kernelName:te,backendName:"cpu",kernelFunc:xy};function wy(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=b(r.shape),o=I(a,i),l=b(o);p(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const vy={kernelName:tn,backendName:"cpu",kernelFunc:wy};function Iy(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;Ub([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],f=o?a.shape[u-2]:a.shape[u-1],m=r.shape.slice(0,-2),g=a.shape.slice(0,-2),y=b(m),x=b(g);p(l>=2&&u>=2&&(y===x||1===y||1===x),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const k=(y>x?r.shape.slice(0,-2):a.shape.slice(0,-2)).concat([d,f]);p(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[x,f,h]:[x,h,f],v=wy({inputs:{x:r},backend:n,attrs:{shape:i?[y,c,d]:[y,d,c]}}),I=wy({inputs:{x:a},backend:n,attrs:{shape:w}}),$=i?v.shape[1]:v.shape[2],C=i?v.shape[2]:v.shape[1],N=o?I.shape[1]:I.shape[2],S=Math.max(y,x),T=n.data.get(v.dataId).values,E=n.data.get(I.dataId).values,R=L(v.shape),A=L(I.shape),[F,D,_]=i?[R[0],1,R[1]]:[R[0],R[1],1],[O,M,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],P=C*N,B=Sr([S,C,N],v.dtype),W=B.values,U=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<C;t+=U)for(let n=0;n<N;n+=U)for(let s=0;s<$;s+=U){const r=Math.min(t+U,C),a=Math.min(n+U,N),i=Math.min(s+U,$);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,y-1)*F,a=Math.min(e,x-1)*z;n+=T[s+o*D+r*_]*E[r*O+t*M+a]}W[e*P+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(k,B.dtype,B.values)}const $y={kernelName:ge,backendName:"cpu",kernelFunc:Iy},Cy={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=Iy({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=xy({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=oy(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function Ny(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Sy={kernelName:Z,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Ub(t,"abs");let s=new Float32Array(b(t.shape));return s=Ny(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,"float32")}},Ty=Hb(Q,(e=>Math.acos(e))),Ey={kernelName:Q,backendName:"cpu",kernelFunc:Ty},Ry=Hb(ee,(e=>Math.acosh(e))),Ay={kernelName:ee,backendName:"cpu",kernelFunc:Ry},Fy={kernelName:ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;Ub(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=Sr(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Dy(e,t,n,s,r){const a=t.length,i=b(t),o=L(t),l=L(r),u=N(n,b(r));for(let t=0;t<i;++t){const n=G(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[V(r,a,l)]=e[t]}return u}function _y(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;Ub(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const l=Dy(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const Oy={kernelName:On,backendName:"cpu",kernelFunc:_y},Ly={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Ub(r,"all");const o=$(a,r.shape);let l=o;const u=Ri(l,r.shape.length);let c=r;null!=u&&(c=_y({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Fi(l.length,r.shape.length)),Ei("all",l,c.shape.length);const[h,d]=Si(c.shape,l),p=b(d),f=B(b(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];n=n&&s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=wy({inputs:{x:g},backend:n,attrs:{shape:Ti(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},My={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Ub(r,"any");const o=$(a,r.shape);let l=o;const u=Ri(l,r.shape.length);let c=r;null!=u&&(c=_y({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Fi(l.length,r.shape.length)),Ei("any",l,c.shape.length);const[h,d]=Si(c.shape,l),p=b(d),f=B(b(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];n=n||s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=wy({inputs:{x:g},backend:n,attrs:{shape:Ti(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},zy={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ub(r,"argMax");let i=$(a,r.shape);const o=Ri(i,r.shape.length);let l=r;const u=[];null!=o&&(l=_y({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Fi(i.length,l.shape.length)),i=[i[0]],Ei("argMax",i,l.shape.length);const[c,h]=Si(l.shape,i),d=B(b(c),"int32"),p=b(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r>n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Py={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;Ub(r,"argMin");let i=$(a,r.shape);const o=Ri(i,r.shape.length);let l=r;const u=[];null!=o&&(l=_y({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Fi(i.length,l.shape.length)),i=[i[0]],Ei("argMin",i,l.shape.length);const[c,h]=Si(l.shape,i),d=B(b(c),"int32"),p=b(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],s=0;for(let e=0;e<p;++e){const r=f[t+e];r<n&&(n=r,s=e)}d[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},By=Hb(oe,(e=>Math.asin(e))),Wy={kernelName:oe,backendName:"cpu",kernelFunc:By},Uy=Hb(le,(e=>Math.asinh(e))),Vy={kernelName:le,backendName:"cpu",kernelFunc:Uy},Gy=Hb(ue,(e=>Math.atan(e))),Hy={kernelName:ue,backendName:"cpu",kernelFunc:Gy},jy=Qb(((e,t)=>Math.atan2(e,t))),Ky=my(he,jy),qy={kernelName:he,backendName:"cpu",kernelFunc:Ky},Xy=Hb(ce,(e=>Math.atanh(e))),Yy={kernelName:ce,backendName:"cpu",kernelFunc:Xy};function Jy(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Sr(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*b,m=t*s[0];for(let t=0;t<r.inChannels;++t)for(let b=0;b<r.outHeight;++b){const k=b*i-d,w=Math.max(0,k),v=Math.min(r.inHeight,c+k),I=n+b*y;for(let n=0;n<r.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(r.inWidth,h+i);let b=f,y=0,k=0;for(let n=w;n<v;n+=l){const r=m+n*s[1];for(let n=c;n<d;n+=u){const i=e[r+n*s[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(y+=i,k++)}if(isNaN(b))break}g[I+n*x+t]="avg"===a?y/k:b}}}return m}function Zy(e,t,n,s,r=!1,a=!1){const i=Sr(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Sr(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const y=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(s.inWidth,d+h);let k=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<y;n+=u){const i=n-g;for(let o=p;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>k&&(k=u,w=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function Qy(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,y="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Sr(r.outShape,n),k=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],v=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],$=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*w,x=t*s[0];for(let t=0;t<r.inChannels;++t)for(let w=0;w<r.outDepth;++w){const C=w*i-m;let N=C;for(;N<0;)N+=u;const S=Math.min(r.inDepth,d+C),T=n+w*v;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(r.inHeight,p+i),w=T+n*I;for(let n=0;n<r.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(r.inWidth,f+i),g=w+n*$;let v=y,I=0,C=0;for(let n=N;n<S;n+=u){const r=x+n*s[1];for(let n=d;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<p;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>v?v=r:"avg"===a&&(I+=r,C++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}k[g+t]="avg"===a?I/C:v}}}}return x}const ex={kernelName:de,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ub(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;p(Ta(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ya(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))c=Xb({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=L(r.shape),s=Jy(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},tx={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;Ub(r,"avgPool3d");const c=xa(r.shape,a,i,1,o,l,u),h=Qy(n.data.get(r.dataId).values,r.shape,r.dtype,L(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},nx={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;Ub([r,a],"avgPool3DGrad");const c=xa(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,k=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,I=k-1-c.padInfo.front,$=v-1-c.padInfo.left,C=w-1-c.padInfo.top,N=Sr(a.shape,"float32"),S=1/(f*m*g),T=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-I,i=s-C,o=r-$;let l=0;for(let n=0;n<k;n+=b){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<w;n+=y){const r=(i+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<v;n+=x){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=T.get(e,s,r,a,t))}}}N.set(l*S,e,n,s,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},sx={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;Ub([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=ya(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,k=b-1-c.padInfo.top,w=Sr(i.shape,"float32"),v=1/(p*f),I=n.data.get(r.dataId).values,$=Sr(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-k,a=s-x;let i=0;for(let n=0;n<b;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<y;n+=g){const r=(a+n)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=$.get(e,s,r,t))}}w.set(i*v,e,n,s,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},rx={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:l}=t;p(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Ub([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),b=m.length,y=f.length,x=d.length,k=h.length;let w=0,v=0,I=0,$=0;for(let e=0;e<c.length;++e)g[e]=m[w++]+(c[e]-h[v++])*f[I++]/Math.sqrt(d[$++]+u),w>=b&&(w=0),v>=k&&(v=0),I>=y&&(I=0),$>=x&&($=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};function ax(e,t,n,s,r){const a=Yr(s,t,n),i=b(n),o=L(s);if(a){const n=Jr(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=Sr(s,r,"string"===r?iu(e):e),u=Sr(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?ou(u.values):u.values}function ix(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;Ub(r,"slice");const[o,l]=Zr(r,a,i);zr(r,o,l);const u=ax(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const ox={kernelName:fn,backendName:"cpu",kernelFunc:ix},lx={kernelName:be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;Ub([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=El(r.shape,a,o),u=Rl(l.length,a.length),c=Al(r.shape,a,o),h=Fl(i,a.length),d=Dl(c,i,a.length),p=wy({inputs:{x:r},backend:n,attrs:{shape:l}}),f=_y({inputs:{x:p},backend:n,attrs:{perm:u}}),m=wy({inputs:{x:f},backend:n,attrs:{shape:c}}),g=ix({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ux(e,t,n,s,r){const a=b(s),i=B(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function cx(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=Sr([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const hx={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=ux(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function dx(e){return(t,n,s)=>{const r=N(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}const px=dx((e=>Math.ceil(e))),fx=jb(ke,px),mx={kernelName:ke,backendName:"cpu",kernelFunc:fx},gx=Hb(we,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),bx={kernelName:we,backendName:"cpu",kernelFunc:gx},yx={kernelName:Ie,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(b(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function xx(e,t,n,s){const r=S(n,b(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=b(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?iu(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function kx(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const wx={kernelName:ct,backendName:"cpu",kernelFunc:kx};function vx(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=$(r,t[0].shape)[0];let i=Cl(t.map((e=>e.shape)),a);if(0===b(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>b(e.shape)>0));if(1===o.length)return Xb({inputs:{x:o[0]},backend:n});if($l(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>hy({inputs:{input:e},backend:n}))),t=o.map((e=>kx({inputs:{input:e},backend:n}))),s=vx({inputs:e,backend:n,attrs:{axis:a}}),r=vx({inputs:t,backend:n,attrs:{axis:a}}),i=ly({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=b(e.shape.slice(a));return wy({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Cl(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=xx(u,i,t[0].dtype,c),d=Cl(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const Ix={kernelName:$e,backendName:"cpu",kernelFunc:vx};function $x(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Ub([r,a],"conv2d");const h=Ea(l),d=ka(r.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,k=new ds(d.outShape,r.dtype),w=L(r.shape),v=L(a.shape),I=w[0],$=x?w[1]:w[2],C=x?w[2]:1,N=x?1:w[1],S=k.strides[0],T=x?k.strides[1]:k.strides[2],E=x?k.strides[2]:1,R=x?1:k.strides[1],A=n.data.get(r.dataId).values,F=n.data.get(a.dataId).values,D=k.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*S;for(let e=0;e<d.outHeight;++e){const s=n+e*T,r=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=r+e*m;if(n<0||n>=d.inHeight)continue;const a=e*v[0],i=t+n*$;for(let e=0;e<d.outWidth;++e){const t=s+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=d.inWidth)continue;const r=i+s*C;let o=a+e*v[1];for(let e=0;e<d.inChannels;++e){const n=A[r+e*N];for(let e=0;e<d.outChannels;++e)D[t+e*R]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,D)}const Cx={kernelName:Ce,backendName:"cpu",kernelFunc:$x},Nx={kernelName:Ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Ub([r,a],"conv2dBackpropFilter");const h=Ea(l),d=ka(r.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,y=new ds(d.filterShape,"float32"),x=d.padInfo.left,k=d.padInfo.top,w=n.data.get(r.dataId).values,v=n.data.get(a.dataId).values,I=new ds(r.shape,r.dtype,w),$=new ds(a.shape,a.dtype,v);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((k-e)/p)),n=Math.min(d.outHeight,(d.inHeight+k-e)/p);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),a=Math.min(d.outWidth,(d.inWidth+x-s)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-k;for(let e=r;e<a;++e){const n=s+e*f-x;l+=b?I.get(u,t,n,i)*$.get(u,c,e,o):I.get(u,i,t,n)*$.get(u,o,c,e)}}y.set(l,e,s,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Sx={kernelName:Se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;Ub([r,a],"conv2dBackpropInput");const h=L(a.shape),d=L(r.shape);let p=Ea(u);const f=ka(i,a.shape,o,1,l,c,!1,p),m=new ds(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,y=n.data.get(a.dataId).values,[x,k,w]=h,{batchSize:v,filterHeight:I,filterWidth:$,inChannels:C,inHeight:N,inWidth:S,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,_=$-1-f.padInfo.left,O="channelsLast"===p,M=m.strides[0],z=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,B=O?1:m.strides[1],W=d[0],U=O?d[1]:d[2],V=O?d[2]:1,G=O?1:d[1];for(let e=0;e<v;++e)for(let t=0;t<C;++t)for(let n=0;n<N;++n){const s=n-D,r=Math.max(0,Math.ceil(s/A)),a=Math.min(E,(I+s)/A);for(let i=0;i<S;++i){const o=i-_,l=Math.max(0,Math.ceil(o/F)),u=Math.min(R,($+o)/F);let c=0;for(let n=r;n<a;++n){const r=n*A-s;for(let s=l;s<u;++s){const a=W*e+U*n+V*s,i=x*(I-1-r)+k*($-1-(s*F-o))+w*t;for(let e=0;e<T;++e)c+=b[a+G*e]*y[i+e]}}g[M*e+z*n+P*i+B*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Tx={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;Ub([r,a],"conv3d");const u=wa(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,y=g.left,x=g.top,k=new ds(u.outShape,r.dtype),w=n.data.get(r.dataId).values,v=n.data.get(a.dataId).values,I=k.values,$=L(r.shape),C=L(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*$[0],n=e*k.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*k.strides[1],r=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=r+e*p;if(n<0||n>=u.inDepth)continue;const a=e*C[0],i=t+n*$[1];for(let e=0;e<u.outHeight;++e){const t=s+e*k.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*C[1],o=i+s*$[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-y;for(let e=0;e<d;++e){const t=s+e*m;if(t<0||t>=u.inWidth)continue;const a=r+e*C[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*v[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},Ex={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;Ub([r,a],"conv3dBackpropFilterV2");const u=L(r.shape),c=L(a.shape),h=wa(r.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,y=new ds(h.filterShape,"float32"),x=y.values,[k,w,v,I]=y.strides,$=n.data.get(a.dataId).values,[C,N,S,T]=c,E=n.data.get(r.dataId).values,[R,A,F,D]=u,_=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/d)),n=Math.min(h.outDepth,(h.inDepth+_-e)/d),s=e*k;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/p)),i=Math.min(h.outHeight,(h.inHeight+M-r)/p),o=r*w+s;for(let s=0;s<b;++s){const l=Math.max(0,Math.ceil((O-s)/f)),u=Math.min(h.outWidth,(h.inWidth+O-s)/f),c=s*v+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*R,b=m*C;for(let m=t;m<n;++m){const t=(e+m*d-_)*A+h,n=m*N+b;for(let e=a;e<i;++e){const a=(r+e*p-M)*F+t,i=e*S+n;for(let e=l;e<u;++e){const t=e*T+i;g+=E[(s+e*f-O)*D+a+o]*$[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Rx={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;Ub([r],"conv3dBackpropInputV2");const u=L(r.shape),c=L(a.shape),h=wa(l,a.shape,o,1,i),d=new ds(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,y=n.data.get(r.dataId).values,[x,k,w,v]=u,I=n.data.get(a.dataId).values,[$,C,N,S]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:D,inHeight:_,inWidth:O,outChannels:M,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=E-1-h.padInfo.front,H=R-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const s=n-G,r=Math.max(0,Math.ceil(s/W)),a=Math.min(z,(E+s)/W);for(let i=0;i<_;++i){const o=i-H,l=Math.max(0,Math.ceil(o/U)),u=Math.min(P,(R+o)/U);for(let c=0;c<O;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),T=Math.min(B,(A+h)/V);let F=0;for(let n=r;n<a;++n){const r=n*W-s;for(let s=l;s<u;++s){const a=s*U-o;for(let i=d;i<T;++i){const o=x*e+k*n+w*s+v*i,l=$*(E-1-r)+C*(R-1-a)+N*(A-1-(i*V-h))+S*t;for(let e=0;e<M;++e)F+=y[o+e]*I[l+e]}}}p[f*e+m*n+g*i+b*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Ax=Hb(Ae,(e=>Math.cos(e))),Fx={kernelName:Ae,backendName:"cpu",kernelFunc:Ax},Dx=Hb(Fe,(e=>Math.cosh(e))),_x={kernelName:Fe,backendName:"cpu",kernelFunc:Dx},Ox={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=a.shape[0],[m,g]=o,b=Sr([f,m,g,p],"float32"),y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,k=n.data.get(r.dataId).values,w=L(r.shape),v=L(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],s=y[t+1],r=y[t+2],a=y[t+3],i=x[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<p;s++){const r=s+n*v[2]+t*v[1]+e*v[0];b.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(d-1)+l*f:.5*(s+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const s=n+l*v[2]+t*v[1]+e*v[0];b.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let s=0;s<p;s++){let a=s+h*w[2]+n*w[1]+i*w[0];const u=k[a];a=s+m*w[2]+n*w[1]+i*w[0];const c=k[a];a=s+h*w[2]+r*w[1]+i*w[0];const d=k[a];a=s+m*w[2]+r*w[1]+i*w[0];const p=u+(c-u)*y,f=d+(k[a]-d)*y;a=s+l*v[2]+t*v[1]+e*v[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(d-1)+n*f:.5*(s+a)*(d-1);if(r<0||r>d-1){for(let s=0;s<p;s++){const r=s+n*v[2]+t*v[1]+e*v[0];b.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<p;s++){const r=s+o*w[2]+l*w[1]+i*w[0],a=s+n*v[2]+t*v[1]+e*v[0];b.values[a]=k[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Lx={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;Ub(r,"cumsum");const l=Ri([a],r.shape.length);let u=r;null!=l&&(u=_y({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Fi(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Cs(u.dtype,"int32"),d=B(b(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const s=m(e,t-1);d[n]=i?p[s]+d[s]:p[n]+d[s]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=_y({inputs:{x:g},backend:n,attrs:{perm:Ai(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},Mx={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=ux(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=cx(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},zx={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;p("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),p(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,d=u*a,f=c/(a*a),m=n.data.get(r.dataId).values,g=new Float32Array(o*h*d*f);let b=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<d;++t){const r=Math.floor(t/a),i=(s*a+t%a)*f;for(let t=0;t<f;++t){const s=t+i+c*(r+u*(n+l*e));g[b++]=m[s]}}}return n.makeTensorInfo([o,h,d,f],r.dtype,g)}};function Px(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;Ub([r,a],"depthwiseConv2DNative");const c=L(r.shape),h=L(a.shape);let d=l;null==d&&(d=[1,1]),p(Ta(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=ka(r.shape,a.shape,i,d,o,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:y,padInfo:x}=f,k=x.left,w=x.top,v=f.outChannels/f.inChannels,I=new ds(f.outShape,r.dtype),$=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,N=I.values;for(let e=0;e<f.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const s=n+e*I.strides[1],r=e*f.strideHeight-k;for(let e=0;e<m;++e){const n=r+e*b;if(n<0||n>=f.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<f.outWidth;++e){const t=s+e*I.strides[2],n=e*f.strideWidth-w;for(let e=0;e<g;++e){const s=n+e*y;if(s<0||s>=f.inWidth)continue;const r=a+e*h[1],o=i+s*f.inChannels;let l=t,u=r;for(let e=0;e<f.inChannels;++e){const t=$[o+e];for(let e=0;e<v;++e)N[l+e]+=t*C[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Bx={kernelName:Me,backendName:"cpu",kernelFunc:Px},Wx={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;Ub([r,a],"depthwiseConv2dNativeBackpropFilter");const h=ka(r.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new ds(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,k=n.data.get(r.dataId).values,w=new ds(r.shape,r.dtype,k),v=n.data.get(a.dataId).values,I=new ds(a.shape,a.dtype,v);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((b-s)/p)),a=Math.min(h.outWidth,(h.inWidth+b-s)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=r;e<a;++e){const n=s+e*p-b;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Ux={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;Ub([r,a],"depthwiseConv2DNativeBackpropInput");const h=L(r.shape),d=L(a.shape),p=ka(c,a.shape,i,o,l,u,!0),f=new ds(p.inShape,"float32"),m=f.values,[g,b,y]=f.strides,x=n.data.get(r.dataId).values,[k,w,v]=h,I=n.data.get(a.dataId).values,[$,C,N]=d,{batchSize:S,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:D,outHeight:_,outWidth:O,strideHeight:M,strideWidth:z}=p,P=T-1-p.padInfo.top,B=E-1-p.padInfo.left,W=D/R;for(let e=0;e<S;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const s=n-P,r=Math.max(0,Math.ceil(s/M)),a=Math.min(_,(T+s)/M);for(let i=0;i<F;++i){const o=i-B,l=Math.max(0,Math.ceil(o/z)),u=Math.min(O,(E+o)/z);let c=0;for(let n=r;n<a;++n){const r=n*M-s;for(let s=l;s<u;++s){const a=k*e+w*n+v*s,i=$*(T-1-r)+C*(E-1-(s*z-o))+N*t;for(let e=0;e<W;++e)c+=x[a+(t*W+e)]*I[i+e]}}m[g*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Vx={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=b(s.shape),a=n.data.get(s.dataId).values,i=Sr([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},Gx={kernelName:We,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:k,strideHeight:w,strideWidth:v,filterHeight:I,filterWidth:$,dilationHeight:C,dilationWidth:N,outShape:T}=ba(s.shape,r.shape,a,i,"NHWC",o),E=b(T),R=T.length,A=S(s.dtype,E);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-k.top;for(let a=0;a<x;++a){const i=a*v-k.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const a=n+t*C;if(a>=0&&a<f)for(let n=0;n<$;++n){const p=i+n*N;if(p>=0&&p<m){const i=V([e,a,p,o],c,L(s.shape)),f=V([t,n,o],d,L(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}A[V([e,t,a,o],R,L(T))]=l}}}return{dataId:l.write(es(A,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},Hx={kernelName:Ve,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=z(s.shape,u.data.get(s.dataId).values),h=z(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:k,strideWidth:w,filterHeight:v,filterWidth:I,dilationHeight:$,dilationWidth:C,outShape:N}=ba(s.shape,r.shape,i,o,"NHWC",l);p(a.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const S=z(N,u.data.get(a.dataId).values),T=W(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*k-x.top;for(let s=0;s<y;++s){const r=s*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){const s=n+t*$;if(s>=0&&s<f)for(let n=0;n<I;++n){const u=r+n*C;if(u>=0&&u<m){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=t,l=n)}}}T[o][l][a]+=S[e][t][s][a]}}}return{dataId:u.write(es(T,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},jx={kernelName:Ue,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=z(s.shape,u.data.get(s.dataId).values),h=z(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:k,strideWidth:w,filterHeight:v,filterWidth:I,dilationHeight:$,dilationWidth:C,outShape:N}=ba(s.shape,r.shape,i,o,"NHWC",l);p(a.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const S=z(N,u.data.get(a.dataId).values),T=W(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*k-x.top;for(let s=0;s<y;++s){const r=s*w-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<v;++t){const s=n+t*$;if(s>=0&&s<f)for(let n=0;n<I;++n){const u=r+n*C;if(u>=0&&u<m){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=s,l=u)}}}T[e][o][l][a]+=S[e][t][s][a]}}}return{dataId:u.write(es(T,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Kx={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;Ub([s,r],"eluGrad");const a=new Float32Array(b(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},qx=Qb(((e,t)=>e===t?1:0)),Xx=my(qe,qx,null,"bool"),Yx={kernelName:qe,backendName:"cpu",kernelFunc:Xx},Jx=Bl,Zx=Wl,Qx=Ul,ek=Vl,tk=Gl,nk=Hl,sk=Hb(Ke,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+Jx*n);return t*(1-((((nk*s+tk)*s+ek)*s+Qx)*s+Zx)*s*Math.exp(-n*n))})),rk={kernelName:Ke,backendName:"cpu",kernelFunc:sk},ak=dx((e=>Math.exp(e))),ik=jb(Xe,ak),ok={kernelName:Xe,backendName:"cpu",kernelFunc:ik};function lk(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(p(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),wy({inputs:{x:r},backend:n,attrs:{shape:o}})}const uk={kernelName:Ye,backendName:"cpu",kernelFunc:lk},ck=dx((e=>Math.expm1(e))),hk=jb(Je,ck),dk={kernelName:Je,backendName:"cpu",kernelFunc:hk},pk=Qb(((e,t)=>e*t)),fk=gy(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),mk=my(zt,pk,fk),gk={kernelName:zt,backendName:"cpu",kernelFunc:mk},bk=Qb(((e,t)=>e/t)),yk=my(Ge,bk),xk={kernelName:Ge,backendName:"cpu",kernelFunc:yk},kk=Qb(((e,t)=>e-t)),wk=gy(((e,t,n,s)=>({real:e-n,imag:t-s}))),vk=my(Sn,kk,wk),Ik={kernelName:Sn,backendName:"cpu",kernelFunc:vk};function $k(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=b(u),h=N("float32",c),d=N("float32",c);for(let e=0;e<r;e++){const s=ix({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=ix({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=ly({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=Ck(i,t,n),p=ql(u,c);for(let t=0;t<a;t++){const n=Zl(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=ly({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Ck(e,t,n){const s=b(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=Nk(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",Qn(s,"float32")),i=Xb({inputs:{x:a},backend:n}),l=xk.kernelFunc({inputs:{a:e,b:a},backend:n}),u=xk.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}return Xl(function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=tu(r*s,t,n),l=Zl(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Ql(s,a,i,r)}return s}(ql(a,i),s,t));var o}function Nk(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=ql(e,t),i=n/2,o=Yl(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=ly({inputs:{real:h,imag:d},backend:r}),f=Jl(a),m=f.real,g=f.imag,b=[m.length],y=r.makeTensorInfo(b,"float32",m),x=r.makeTensorInfo(b,"float32",g),k=ly({inputs:{real:y,imag:x},backend:r}),w=Nk(l,u,i,s,r),v=w.real,I=w.imag,$=[v.length],C=r.makeTensorInfo($,"float32",v),N=r.makeTensorInfo($,"float32",I),S=ly({inputs:{real:C,imag:N},backend:r}),T=Nk(m,g,i,s,r),E=T.real,R=T.imag,A=[E.length],F=r.makeTensorInfo(A,"float32",E),D=r.makeTensorInfo(A,"float32",R),_=ly({inputs:{real:F,imag:D},backend:r}),O=eu(n,s),L=[O.real.length],M=r.makeTensorInfo(L,"float32",O.real),z=r.makeTensorInfo(L,"float32",O.imag),P=ly({inputs:{real:M,imag:z},backend:r}),B=mk({inputs:{a:P,b:_},backend:r}),W=xy({inputs:{a:S,b:B},backend:r}),U=vk({inputs:{a:S,b:B},backend:r}),V=hy({inputs:{input:W},backend:r}),G=hy({inputs:{input:U},backend:r}),H=kx({inputs:{input:W},backend:r}),j=kx({inputs:{input:U},backend:r}),K=vx({inputs:[V,G],backend:r,attrs:{axis:0}}),q=vx({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(K.dataId).values,Y=r.data.get(q.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}const Sk={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=b(s.shape),a=s.shape[s.shape.length-1],i=wy({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=$k(i,!1,n),l=wy({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function Tk(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||D(r),o=S(i,b(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const Ek={kernelName:Qe,backendName:"cpu",kernelFunc:Tk},Rk={kernelName:et,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=N(s.dtype,b(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let s=0;s<l;s++){const r=s*u;for(let o=0;o<u;o++){const h=[i,e,s,o][2],d=Math.round(l-h),p=t+n+r+o;let f=c[p];d>=0&&d<l&&(f=c[t+n+d*u+o]),a[p]=f}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ak=dx((e=>Math.floor(e))),Fk=jb(tt,Ak),Dk={kernelName:tt,backendName:"cpu",kernelFunc:Fk},_k=Qb(((e,t)=>Math.floor(e/t))),Ok=my(nt,_k,null,"int32"),Lk={kernelName:nt,backendName:"cpu",kernelFunc:Ok},Mk={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=$x({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=xy({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=oy(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},zk={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=Px({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=xy({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=oy(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Pk={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=b(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=_l(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const d=Sr([u,c],s.dtype),p=n.data.get(r.dataId).values,f=n.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=[];let n=0;for(let s=0;s<o;s++){const r=p[e*o+s];n+=r*h[s],t.push(r)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${t} does not index into ${s.shape}`);for(let t=0;t<c;t++)d.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(l,d.dtype,d.values)}};function Bk(e,t,n){const s=Sr(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);s.values[n]=e.values[l]}return s}const Wk={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;Ub([r,a],"gatherV2");let l=o;null==o&&(l=0);const u=b(a.shape),c=au(r,a,$(i,r.shape)[0],l),h=wy({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=wy({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(d),m=Bk(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},Uk=Qb(((e,t)=>e>t?1:0)),Vk=my(it,Uk,null,"bool"),Gk={kernelName:it,backendName:"cpu",kernelFunc:Vk},Hk=Qb(((e,t)=>e>=t?1:0)),jk=my(ot,Hk,null,"bool"),Kk={kernelName:ot,backendName:"cpu",kernelFunc:jk},qk={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=b(s.shape),a=s.shape[s.shape.length-1],i=wy({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=$k(i,!0,n),l=wy({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},Xk=Hb(ht,(e=>Number.isFinite(e)?1:0),"bool"),Yk={kernelName:ht,backendName:"cpu",kernelFunc:Xk},Jk=Hb(dt,(e=>Math.abs(e)===1/0?1:0),"bool"),Zk={kernelName:dt,backendName:"cpu",kernelFunc:Jk},Qk=Hb(pt,(e=>Number.isNaN(e)?1:0),"bool"),ew={kernelName:pt,backendName:"cpu",kernelFunc:Qk},tw=Qb(((e,t)=>e<t?1:0)),nw=my(mt,tw,null,"bool"),sw={kernelName:mt,backendName:"cpu",kernelFunc:nw},rw=Qb(((e,t)=>e<=t?1:0)),aw=my(gt,rw,null,"bool"),iw={kernelName:gt,backendName:"cpu",kernelFunc:aw};function ow(e,t,n){const s=(t-e)/(n-1),r=B(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const lw={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=ow(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},uw=dx((e=>Math.log(e))),cw=jb(yt,uw),hw={kernelName:yt,backendName:"cpu",kernelFunc:cw},dw=Hb(xt,(e=>Math.log1p(e))),pw={kernelName:xt,backendName:"cpu",kernelFunc:dw},fw=Qb(((e,t)=>e&&t)),mw=my(kt,fw,null,"bool"),gw={kernelName:kt,backendName:"cpu",kernelFunc:mw},bw=Hb(wt,(e=>e?0:1),"bool"),yw={kernelName:wt,backendName:"cpu",kernelFunc:bw},xw=Qb(((e,t)=>e||t)),kw=my(vt,xw,null,"bool"),ww={kernelName:vt,backendName:"cpu",kernelFunc:kw},vw={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;Ub(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=b(r.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(r.shape,r.dtype,p)}},Iw={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;Ub(i,"LRNGrad");const h=b(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),s=e-t+Math.min(d,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function $w(e,t,n,s){const r=N(s,b(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];t>a&&(a=t)}r[n]=a}return r}function Cw(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=$(a,l);let h=c;const d=Ri(h,u);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=Dy(p,l,r.dtype,d,e),h=Fi(h.length,u),l=e}Ub(r,"max"),Ei("max",h,u);const[f,m]=Si(l,h),g=$w(p,b(m),f,r.dtype),y=o.write(g,f,r.dtype);let x=f;return i&&(x=Ti(f,c)),{dataId:y,shape:x,dtype:r.dtype}}const Nw={kernelName:Ct,backendName:"cpu",kernelFunc:Cw},Sw=Qb(((e,t)=>Math.max(e,t))),Tw=my(Nt,Sw),Ew={kernelName:Nt,backendName:"cpu",kernelFunc:Tw},Rw={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Ub(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;p(Ta(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ya(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))c=Xb({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=L(r.shape),s=Jy(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},Aw={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;Ub(r,"maxPool3d");const c=xa(r.shape,a,i,1,o,l,u),h=Qy(n.data.get(r.dataId).values,r.shape,r.dtype,L(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},Fw={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;Ub([r,a],"maxPool3DGrad");const c=xa(a.shape,i,o,1,l,u),h=function(e,t){const n=Sr(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const y=b*s-d;let x=y;for(;x<0;)x+=i;const k=Math.min(t.inDepth,u+y);for(let s=0;s<t.outHeight;++s){const u=s*r-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const p=r*a-f;let v=p;for(;v<0;)v+=l;const I=Math.min(t.inWidth,h+p);let $=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<k;t+=i){const n=t-y;for(let s=d;s<w;s+=o){const r=s-u;for(let a=v;a<I;a+=l){const i=a-p,o=e.get(m,t,s,a,g);o>=$&&($=o,C=n*c*h+r*c+i)}}}n.set(C,m,b,s,r,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,k=c.effectiveFilterWidth,w=y-1-c.padInfo.front,v=k-1-c.padInfo.left,I=x-1-c.padInfo.top,$=Sr(a.shape,"float32"),C=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-w,i=s-I,o=r-v;let l=0;for(let n=0;n<y;n+=m){const s=(a+n)/d;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=g){const a=(i+r)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<k;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*x*k-1-h.get(e,s,a,u,t)===n*x*k+r*k+i?1:0;0!==d&&(l+=C.get(e,s,a,u,t)*d)}}}$.set(l,e,n,s,r,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},Dw={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;Ub([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ya(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Sr(d.outShape,o.dtype,Zy(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,k=d.effectiveFilterWidth,w=k-1-d.padInfo.left,v=x-1-d.padInfo.top,I=Sr(o.shape,"float32"),$=n.data.get(r.dataId).values,C=Sr(r.shape,"float32",$);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-v,a=s-w;let i=0;for(let n=0;n<x;n+=b){const s=(r+n)/m;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<k;r+=y){const o=(a+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*k-1-f.get(e,s,o,t)===n*k+r?1:0;0!==l&&(i+=C.get(e,s,o,t)*l)}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},_w={kernelName:At,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;Ub(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=ya(s.shape,r,a,[1,1],i),[h,d]=function(e,t,n,s,r){const a=Jy(e,0,n,L(t),r,"max"),i=Zy(e,t,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function Ow(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;Ub(r,"sum"),o="bool"===r.dtype?py({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Xb({inputs:{x:r},backend:n});const l=o.shape.length,u=$(a,o.shape),c=Ri(u,l);let h=u,d=o;null!=c&&(d=_y({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Fi(h.length,l)),Ei("sum",h,d.shape.length);const[p,f]=Si(d.shape,h);let m=cy(n,p,Cs(d.dtype,"int32"));const g=b(f),y=n.data.get(m.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=x[t+e];y[e]=n}if(i){const e=m;m=wy({inputs:{x:m},backend:n,attrs:{shape:Ti(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const Lw={kernelName:wn,backendName:"cpu",kernelFunc:Ow},Mw={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=$(a,r.shape),l=b(Si(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=py({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=yk({inputs:{a:h,b:c},backend:n});u.push(d);const p=Ow({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},zw={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Ub(r,"min");const o=$(a,r.shape);let l=o;const u=Ri(l,r.shape.length);let c=r;null!=u&&(c=_y({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Fi(l.length,r.shape.length)),Ei("min",l,c.shape.length);const[h,d]=Si(c.shape,l),p=b(d),f=B(b(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const s=m[t+e];s<n&&(n=s)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=wy({inputs:{x:g},backend:n,attrs:{shape:Ti(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Pw=Qb(((e,t)=>Math.min(e,t))),Bw=my(_t,Pw),Ww={kernelName:_t,backendName:"cpu",kernelFunc:Bw},Uw={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;Ub(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=L(r.shape),f=b(o),m=o.length,g=L(o),y=N(r.dtype,f);for(let e=0;e<f;e++){let t=G(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=V(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},Vw=Qb(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Gw=my(Lt,Vw),Hw={kernelName:Lt,backendName:"cpu",kernelFunc:Gw};function jw(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=$([o],r.shape),u=Cw({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Ti(u.shape,l),h=wy({inputs:{x:u},backend:n,attrs:{shape:c}}),d=vk({inputs:{a:r,b:h},backend:n}),p=ik({inputs:{x:d},backend:n}),f=Ow({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=wy({inputs:{x:f},backend:n,attrs:{shape:c}}),g=yk({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const Kw={kernelName:$n,backendName:"cpu",kernelFunc:jw},qw={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;Ub(r,"multinomial");const l=o?r:jw({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=B(b(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=Vi.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();p[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){p[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function Xw(e,t,n){const s=Qn(-1,n);return pk([],t,s,e,n)}const Yw={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;Ub(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=Xw(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},Jw=Vo,Zw={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;Ub(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Jw(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Qw=Go,ev={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;Ub(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=Qw(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},tv=Ho,nv={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;Ub(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=tv(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},sv=Qb(((e,t)=>e!==t?1:0)),rv=my(Bt,sv,null,"bool"),av={kernelName:Bt,backendName:"cpu",kernelFunc:rv},iv={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;Ub(r,"oneHot");const l=b(r.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(r.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<a&&(u[e*a+c[e]]=i);return n.makeTensorInfo([...r.shape,a],"int32",u)}};function ov(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=hy({inputs:{input:s},backend:n}),t=ov({inputs:{x:e},backend:n}),r=kx({inputs:{input:s},backend:n}),a=ov({inputs:{x:r},backend:n}),i=ly({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return Tk({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const lv={kernelName:Pn,backendName:"cpu",kernelFunc:ov},uv={kernelName:Gt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=hy({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=kx({inputs:{input:r},backend:s}),i=ov({inputs:{x:a},backend:s}),o=ly({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return Tk({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function cv(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return lk({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(a,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=vx({inputs:t.map((e=>{const t=lk({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const hv={kernelName:jt,backendName:"cpu",kernelFunc:cv},dv={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;Ub(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=b(r.shape),h=r.shape.length,d=L(r.shape),p=b(o),f=o.length,m=L(o),g=N(r.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[V(G(e,h,d).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},pv=Qb(((e,t)=>Math.pow(e,t))),fv=my(qt,pv),mv={kernelName:qt,backendName:"cpu",kernelFunc:fv};function gv(e,t,n,s){const[r,a]=Si(e,s),i=Cs(t,"int32"),o=B(b(r),i),l=b(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}const bv={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;Ub(r,"prod");const o=r.shape.length,l=$(a,r.shape),u=Ri(l,o);let c=l,h=r;const d=[];null!=u&&(h=_y({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=Fi(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=gv(h.shape,h.dtype,p,c);let b=m;return i&&(b=Ti(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,f)}};function yv(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return B(0,s);const r=B(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const xv={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=yv(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},kv=Hb(Qt,(e=>1/e)),wv={kernelName:Qt,backendName:"cpu",kernelFunc:kv},vv={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;Ub(r,"resizeBilinear");const l=L(r.shape),[u,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(b([h,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c];let k=0;const w=y[0]/x[0],v=y[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],b=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*s,i=a+(n+(m[b+e]-n)*s-a)*r;g[k++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},Iv={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;Ub([a,r],"resizeBilinearGrad");const o=L(r.shape),[l,u,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=m[0]/g[0],y=m[1]/g[1],x=n.data.get(a.dataId).values;let k=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=t+s*o[1],i=t+r*o[1],l=n-s,d=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,p=a+n*o[2],m=a+s*o[2],g=i+n*o[2],b=i+s*o[2],w=d*u,v=d*r,I=l*u,$=l*r;for(let e=0;e<h;e++){const t=x[k++];f[p+e]+=t*w,f[m+e]+=t*v,f[g+e]+=t*I,f[b+e]+=t*$}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},$v={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;Ub(r,"resizeNearestNeighbor");const l=L(r.shape),[u,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=b[0]/y[0],k=b[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let s=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=i?k*(e+.5):k*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=m[s+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},Cv={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;Ub([a,r],"resizeNearestNeighborGrad");const o=L(r.shape),l=L(a.shape),[u,c,h,d]=r.shape,[,p,f]=a.shape,m=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],k=b[1]/y[1],w=1/x,v=1/k,I=2*Math.ceil(w)+2,$=2*Math.ceil(v)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*w),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*v),b=Math.floor(u-$/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+r;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<$;e++){const t=e+b;if(t<0||t>=f)continue;const r=d+t*l[2],a=t*k;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},Nv={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;Ub(r,"reverse");const i=r.shape.length,o=$(a,r.shape);if(0===i)return Xb({inputs:{x:r},backend:n});const l=new ds(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Sv={kernelName:Wn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=N(s.dtype,b(s.shape)),[u,c,h,d]=s.shape,[p,f]=Tl(i,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let s=0;s<h;s++){const r=s*d;for(let i=0;i<d;i++){const o=[u,e,s,i],b=o[2],x=o[1];let k=(b-p)*g-(x-f)*m,w=(b-p)*m+(x-f)*g;k=Math.round(k+p),w=Math.round(w+f);let v=a;"number"!=typeof a&&(v=3===i?255:a[i]),k>=0&&k<h&&w>=0&&w<c&&(v=y[t+w*(h*d)+k*d+i]),l[t+n+r+i]=v}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Tv=Hb(un,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Ev={kernelName:un,backendName:"cpu",kernelFunc:Tv},Rv=dx((e=>1/Math.sqrt(e))),Av=jb(cn,Rv),Fv={kernelName:cn,backendName:"cpu",kernelFunc:Av};function Dv(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return Sr(n,t.dtype);const p=Sr(c,t.dtype);p.values.fill(l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[l*r+n]+=d[e*r+n]:p.values[l*r+n]=0===t.rank?d[0]:d[e*r+n]}return p}const _v={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Ml(0,r,i),d=Dv(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},Ov={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;Ub([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=Cs(r.dtype,a.dtype),h=B(b(r.shape),c);let d=0;const p=0===i||i>1||1===r.shape.length?1:b(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(r.shape,c,h)}},Lv=zl,Mv=Pl,zv=Hb(pn,(e=>e>=0?Mv*e:Lv*(Math.exp(e)-1))),Pv={kernelName:pn,backendName:"cpu",kernelFunc:zv},Bv=Hb(yn,(e=>1/(1+Math.exp(-e)))),Wv={kernelName:yn,backendName:"cpu",kernelFunc:Bv},Uv=Hb(bn,(e=>e<0?-1:e>0?1:0)),Vv={kernelName:bn,backendName:"cpu",kernelFunc:Uv},Gv=Hb(mn,(e=>Math.sin(e))),Hv={kernelName:mn,backendName:"cpu",kernelFunc:Gv},jv=Hb(gn,(e=>Math.sinh(e))),Kv={kernelName:gn,backendName:"cpu",kernelFunc:jv},qv=Math.log(1.1920928955078125e-7)+2,Xv=Hb(xn,(e=>{const t=e>-qv,n=e<qv,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),Yv={kernelName:xn,backendName:"cpu",kernelFunc:Xv},Jv={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;Ub([r],"spaceToBatchND");const o=b(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=dv.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=El(u.shape,a,o,!1),h=Rl(c.length,a.length,!1),d=Al(u.shape,a,o,!1),p=wy({inputs:{x:u},backend:n,attrs:{shape:c}}),f=_y({inputs:{x:p},backend:n,attrs:{perm:h}}),m=wy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}},Zv={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Ml(0,r,o),p=Dv(n.bufferSync(r),n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},Qv={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=$(i,r.shape)[0],l=nu(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=ix({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},eI=Hb(kn,(e=>Math.sqrt(e))),tI={kernelName:kn,backendName:"cpu",kernelFunc:eI},nI={kernelName:Nn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;Ub(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},sI=Qb(((e,t)=>{const n=e-t;return n*n})),rI=my(Cn,sI),aI={kernelName:Cn,backendName:"cpu",kernelFunc:rI},iI=Hb(Bn,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),oI={kernelName:Bn,backendName:"cpu",kernelFunc:iI};function lI(e,t,n,s){const r=Sr(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}const uI={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Ub(r,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:b,outShape:y}=Qr(r.shape,a,i,o,l,u,c,h,d),x=wy({inputs:{x:r},backend:n,attrs:{shape:b}});let k;if(p){const e=ix({inputs:{x},backend:n,attrs:{begin:f,size:g}});k=wy({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))k=n.makeTensorInfo(y,r.dtype,[]);else{const e=lI(y,n.bufferSync(x),m,f);k=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=wy({inputs:{x:k},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(k),w}},cI=Hb(Rn,(e=>Math.tan(e))),hI={kernelName:Rn,backendName:"cpu",kernelFunc:cI},dI=Hb(An,(e=>Math.tanh(e)));function pI(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=Sr(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}function fI(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=N(n,i*s),u=N("int32",i*s);for(let t=0;t<i;t++){const n=t*o,r=e.subarray(n,n+o),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*s,c=l.subarray(i,i+s),h=u.subarray(i,i+s);for(let e=0;e<s;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=s,[Sr(c,n,l),Sr(c,"int32",u)]}function mI(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return h(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return h(0,n,t-1)}(e,t);case"nearest":return function(e,t){return h(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function gI(e,t,n,s,r,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*s+o*r+l*a+u]:c}function bI(e,t,n,s,r,a,i,o,l,u,c){return gI(e,t,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function yI(e,t,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*gI(e,t,n,s,r,a,i,h,d,u,c)+(l-d)*gI(e,t,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*gI(e,t,n,s,r,a,i,p,d,u,c)+(l-d)*gI(e,t,n,s,r,a,i,p,f,u,c))}function xI(e,t,n,s){const r=$(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),l=new ds(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new ds(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const kI=[Cy,Sy,Ey,Ay,ky,Fy,Ly,My,zy,Py,Wy,Vy,Hy,qy,Yy,ex,tx,nx,sx,$y,rx,lx,hx,fy,mx,bx,uy,yx,Ix,Nx,Sx,Cx,Ex,Rx,Tx,Fx,_x,Ox,Lx,Mx,zx,Bx,Wx,Ux,Vx,Gx,jx,Hx,xk,qb,Kx,Yx,rk,ok,uk,dk,Sk,Ek,Rk,Dk,Lk,Mk,zk,Pk,Wk,Gk,Kk,Yb,qk,wx,Yk,Zk,ew,Zb,sw,iw,lw,hw,pw,gw,yw,ww,vw,Iw,Ew,Rw,Aw,Fw,Dw,_w,Nw,Mw,zw,Ww,Uw,Hw,qw,gk,Yw,Zw,ev,nv,av,iv,uv,hv,dv,mv,ny,bv,xv,dy,wv,ry,iy,vy,vv,Iv,$v,Cv,Nv,Sv,Ev,Fv,_v,Ov,Pv,Wv,Vv,Hv,Kv,ox,Kw,Yv,Jv,Zv,Qv,tI,nI,aI,oI,uI,Ik,Lw,hI,{kernelName:An,backendName:"cpu",kernelFunc:dI},{kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;Ub(r,"tile");const i=pI(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;Ub(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=fI(o,r.shape,r.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},Oy,{kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],y=L(r.shape),x=y[0],k=y[1],w=y[2],v=N(r.dtype,b(g));v.fill(l);const I=s.data.get(r.dataId).values,$=s.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?$:$.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<p;++r){let a;const u=t[6]*s+t[7]*n+1;if(0===u)continue;const c=(t[0]*s+t[1]*n+t[2])/u,p=(t[3]*s+t[4]*n+t[5])/u,f=mI(c,d,o),m=mI(p,h,o);switch(i){case"nearest":a=bI(I,h,d,x,k,w,e,m,f,r,l);break;case"bilinear":a=yI(I,h,d,x,k,w,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*x+n*k+s*w+r]=a}return s.makeTensorInfo(g,r.dtype,v)}return{dataId:s.write(v,g,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;Ub(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=xI(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=ix({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[e]=wy({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;Ub(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=lk({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Qn(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=Xx({inputs:{a:s,b:c},backend:n}),i=py({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=mk({inputs:{a:i,b:r},backend:n}),h=Ow({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=cv({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},lv];for(const e of kI)Yn(e);const wI={},vI={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function II(e){if(!(e in wI)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete wI[e]}),!1),1===e?t.getContext("webgl",vI)||t.getContext("experimental-webgl",vI):t.getContext("webgl2",vI)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;wI[e]=t}const t=wI[e];return t.isContextLost()?(delete wI[e],II(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),wI[e])}var $I,CI,NI;function SI(e,t){return[t,e]}function TI(e){const t=b(e);return k(Math.ceil(t/4))}function EI(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function RI(e,t){const n=e;let s,r,a,i,o,l,u,c,h,d;return 2===K().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function AI(e,t){const n=t();return K().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function FI(e){return!!(K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function DI(e,t){return WI(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}($I||($I={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(CI||(CI={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(NI||(NI={}));const _I=/ERROR: [0-9]+:([0-9]+):/g;function OI(e,t){if(AI(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function LI(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(AI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),AI(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),AI(e,(()=>e.enableVertexAttribArray(o))),!0)}function MI(e,t,n,s){AI(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),AI(e,(()=>e.activeTexture(e.TEXTURE0+n))),AI(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),AI(e,(()=>e.uniform1i(n,s)))}function zI(e,t,n){AI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),AI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function PI(e,t){AI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),AI(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function BI(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function WI(e,t,n){const s=AI(e,(()=>t()));if(null==s)throw new Error(n);return s}function UI(e,t=2){return b(e.slice(0,e.length-t))}function VI(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function GI(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[UI(e),...VI(e)]),t}function HI(e){return e%2==0}function jI(e,t){if(y(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(HI(n)&&HI(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&HI(e[0])&&HI(t[0])}let KI,qI;function XI(e,t){return null!=e.getExtension(t)}function YI(e){try{if(null!=II(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function JI(e){const t=RI(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function ZI(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&p("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const QI=K();function e$(){let e,t,n,s,r,a,i,o,l,u;return 2===K().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function t$(e,t,n="index"){const s=L(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function n$(e){const t=L(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}QI.registerFlag("HAS_WEBGL",(()=>QI.getNumber("WEBGL_VERSION")>0)),QI.registerFlag("WEBGL_VERSION",(()=>YI(2)?2:YI(1)?1:0)),QI.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),QI.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===QI.get("WEBGL_VERSION"))),QI.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),QI.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),QI.registerFlag("WEBGL_PACK",(()=>QI.getBool("HAS_WEBGL"))),QI.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>QI.getBool("WEBGL_PACK"))),QI.registerFlag("WEBGL_PACK_CLIP",(()=>QI.getBool("WEBGL_PACK"))),QI.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),QI.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>QI.getBool("WEBGL_PACK"))),QI.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>QI.getBool("WEBGL_PACK"))),QI.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>QI.getBool("WEBGL_PACK"))),QI.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>QI.getBool("WEBGL_PACK"))),QI.registerFlag("WEBGL_PACK_REDUCE",(()=>QI.getBool("WEBGL_PACK"))),QI.registerFlag("WEBGL_LAZILY_UNPACK",(()=>QI.getBool("WEBGL_PACK"))),QI.registerFlag("WEBGL_CONV_IM2COL",(()=>QI.getBool("WEBGL_PACK"))),QI.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==KI){const t=II(e);KI=t.getParameter(t.MAX_TEXTURE_SIZE)}return KI}(QI.getNumber("WEBGL_VERSION")))),QI.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==qI){const t=II(e);qI=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,qI)}(QI.getNumber("WEBGL_VERSION")))),QI.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=QI.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=II(e);return t=XI(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:XI(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),QI.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>QI.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ms())),QI.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=II(e);if(1===e){if(!XI(t,"OES_texture_float"))return!1}else if(!XI(t,"EXT_color_buffer_float"))return!1;return JI(t)}(QI.getNumber("WEBGL_VERSION")))),QI.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!QI.getBool("WEBGL_FORCE_F16_TEXTURES")&&QI.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),QI.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=II(e);if(1!==e){if(XI(t,"EXT_color_buffer_float"))return JI(t);const e="EXT_color_buffer_half_float";if(XI(t,e)){const n=t.getExtension(e);return function(e,t){const n=RI(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!XI(t,"OES_texture_float")&&!!XI(t,"WEBGL_color_buffer_float")&&JI(t)}(QI.getNumber("WEBGL_VERSION")))),QI.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=QI.getNumber("WEBGL_VERSION"))&&null!=II(e).fenceSync;var e})),QI.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>QI.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),QI.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),QI.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Ms()&&QI.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));const s$="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class r${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=$I.DENSE;const t=TI(e),n=e$();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${t$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class a${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=$I.DENSE;const t=TI(e),n=e$();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${t$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class i${constructor(e){this.variableNames=["A"],this.outTexUsage=CI.DOWNLOAD;const t=e$();this.outputShape=e,this.userCode=`\n      ${s$}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class o${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=CI.DOWNLOAD;const t=e$();this.outputShape=e,this.userCode=`\n      ${s$}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class l${constructor(e,t,n=!1){this.variableNames=["A"];const s=e$(),[r,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${n$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class u${constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=e$(),[r,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n              values = ${s.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${n$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${s.output} = ${o};\n      }\n    `}}function c$(e,t,n,s,r,a){!function(e,t){const n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return WI(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return AI(e,(()=>e.bindTexture(o,i))),AI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),AI(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),AI(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),AI(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),AI(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))),AI(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function h$(e){return e.internalFormatFloat}function d$(e){return e.internalFormatHalfFloat}function p$(e){return e.downloadTextureFormat}function f$(e){return e.internalFormatPackedFloat}function m$(e){return e.internalFormatPackedHalfFloat}class g${constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=K().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){wI[e]=t}(t,e)):this.gl=II(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===K().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=DI(this.gl,e),XI(this.gl,t))this.textureHalfFloatExtension=DI(this.gl,t);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),XI(this.gl,s))this.colorBufferHalfFloatExtension=DI(this.gl,s);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",XI(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!XI(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=WI(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return AI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),AI(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=WI(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return AI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),AI(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return WI(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=RI(this.gl,this.textureHalfFloatExtension)}get debug(){return K().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;AI(e,(()=>e.finish())),AI(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),AI(e,(()=>e.deleteFramebuffer(this.framebuffer))),AI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),AI(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),AI(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=SI(t,n);return c$(e,r,a,h$(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=SI(t,n);return c$(e,r,a,d$(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=SI(t,n);return c$(e,r,a,p$(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){AI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?AI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):AI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),AI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;AI(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),AI(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),AI(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=EI(t,n);return c$(e,r,a,m$(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=EI(t,n);return c$(e,r,a,f$(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(PI(this.gl,this.framebuffer),this.outputTexture=null),AI(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=SI(t,n),i=new Uint8Array(t*n*4);return AI(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=EI(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();AI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return AI(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),AI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),AI(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(K().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return AI(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=WI(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(AI(e,(()=>e.shaderSource(n,t))),AI(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=_I.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>w((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${w(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e),s=function(e){const t=e$();return function(e,t){const n=WI(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(AI(e,(()=>e.shaderSource(n,t))),AI(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t),r=function(e){return WI(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return AI(t,(()=>t.attachShader(r,s))),AI(t,(()=>t.attachShader(r,n))),function(e,t){if(AI(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&OI(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return AI(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),LI(e,t,"clipSpacePos",n,3,20,0)&&LI(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&AI(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&OI(this.gl,this.program),AI(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return WI(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),AI(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),MI(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=EI(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&OI(this.gl,this.program),BI(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),AI(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),AI(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=DI(this.gl,2===K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v((()=>this.disposed||this.isQueryAvailable(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||v((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),zI(this.gl,e,this.framebuffer),this.debug&&BI(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(zI(this.gl,this.outputTexture,this.framebuffer),this.debug&&BI(this.gl)):PI(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;zI(s,e,this.framebuffer),this.debug&&BI(s),this.outputTexture=e,AI(s,(()=>s.viewport(0,0,t,n))),AI(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),AI(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:b$}=a;function y$(e,t,n,s){const r=[];e.forEach((e=>{const t=b(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`))}));const a=r.join("\n"),i=e.map((e=>function(e,t,n=!1){let s="";s+=n?k$(e):x$(e);const r=e.shapeInfo.logicalShape,a=t.logicalShape;return r.length<=a.length&&(s+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=b$(e.shapeInfo.logicalShape,t.logicalShape),l=S$(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===b(e.shapeInfo.logicalShape),m=1===b(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&y(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=S$(l),c=b$(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(e,t)),s}(e,t,s))).join("\n"),o=t.texShape,l=e$(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${w$}\n    ${v$}\n    ${I$}\n  `}(l);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),r=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),r=s*Math.ceil(e[e.length-2]/2);let a=r,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return y(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=t$(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=t$(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=t$(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=t$(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),s&&(d+=$$),[d,u,h,a,c,i,n].join("\n")}function x$(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[s,r]=e.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${C$(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${N$(e)}\n      }\n    `;const s=e.shapeInfo.texShape,r=s[0],a=s[1];if(1===a&&1===r)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=C$(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===r?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape;if(null!=r&&y(t,r)){const e=r[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=C(t),o=a;if(o.length<t.length){const t=["row","col"];return`\n      ${x$(T$(e,o))}\n      float ${s}(int row, int col) {\n        return ${s}(${E$(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${N$(e)}\n      }\n    `;const l=r[0],u=r[1],c=C$(n);return 1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=C(t),l=i;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${x$(T$(e,l))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${E$(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${a}, 1)));\n        ${N$(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;if(h===r&&null==d)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==d)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${a} + depth + ${C$(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[3],a=t[2]*r,i=t[1]*a,{newShape:o,keptDims:l}=C(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${x$(T$(e,o))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${E$(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${r}, 1)));\n        ${N$(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];if(d===i&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${C$(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=C(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${x$(T$(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${E$(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${N$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${C$(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=C(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${x$(T$(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${E$(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${N$(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${C$(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function k$(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${e$().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],a=e$();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=r[0],i=r[1],o=e$();if(null!=r&&y(t,r))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===t[0]){const n=[1,2],r=["b","row","col"];return`\n        ${k$(T$(e,t.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${E$(r,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${e$().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${r}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${e$().texture2D}(${s}, uv);\n    }\n  `}(e)}}const w$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",v$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",I$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function C$(e){return`offset${e}`}function N$(e){const t=e.name,n=b(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function S$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function T$(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function E$(e,t){return t.map((t=>e[t])).join(", ")}function R$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!y(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!y(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:A$,bincountImpl:F$,bincountReduceImpl:D$,ceilImpl:_$,concatImpl:O$,expImpl:L$,expm1Impl:M$,floorImpl:z$,gatherV2Impl:P$,greaterImpl:B$,lessImpl:W$,linSpaceImpl:U$,logImpl:V$,maxImpl:G$,maximumImpl:H$,minimumImpl:j$,multiplyImpl:K$,negImpl:q$,prodImpl:X$,rangeImpl:Y$,rsqrtImpl:J$,simpleAbsImpl:Z$,sliceImpl:Q$,stridedSliceImpl:eC,subImpl:tC,tileImpl:nC,topKImpl:sC,transposeImpl:rC,uniqueImpl:aC}=i;function iC(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function oC(e,t){return 1===t?[e]:iC(e,t)}class lC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=oC("rc",t),s=S$(t),r=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let s="";for(let r=e-2;r<e;r++)s+=`${n[r]} >= ${t[r]}`,r<e-1&&(s+="||");return s}(t,e,n),a=function(e,t,n,s){if(1===e)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,s=function(e,t){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class uC{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s;this.userCode=`\n      ${s=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t$(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${n$(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class cC{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=dC(t,n),r=pC(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=hC(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===NI.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===NI.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===NI.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===NI.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===NI.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=dC(n,s),a=pC(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=hC(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=K().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function hC(e,t,n,s,r){const a=function(e,t){switch(e){case NI.PACKED_2X2_FLOAT32:return f$(t);case NI.PACKED_2X2_FLOAT16:return m$(t);case NI.UNPACKED_FLOAT32:return h$(t);case NI.UNPACKED_FLOAT16:return d$(t);case NI.PACKED_4X1_UNSIGNED_BYTE:return p$(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=EI(e[0],e[1]);i=t*n}else{const[t,n]=SI(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a)}function dC(e,t){if(e===CI.UPLOAD)return NI.PACKED_2X2_FLOAT32;if(e===CI.RENDER||null==e)return function(e){return K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?NI.PACKED_2X2_FLOAT32:NI.UNPACKED_FLOAT32:e?NI.PACKED_2X2_FLOAT16:NI.UNPACKED_FLOAT16}(t);if(e===CI.DOWNLOAD||e===CI.PIXELS)return NI.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function pC(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class fC{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const mC="return abs(x);",gC="return x;";class bC{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class yC{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=oC("rc",t),s=S$(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const xC=lu,kC={};class wC extends l{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!K().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=II(K().getNumber("WEBGL_VERSION"));this.binaryCache=((t=K().getNumber("WEBGL_VERSION"))in kC||(kC[t]={}),kC[t]),this.gpgpu=new g$(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new cC(this.gpgpu),this.numMBBeforeWarning=null==K().global.screen?1024:K().global.screen.height*K().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o(this,sa())}nextDataId(){return wC.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((K().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||K().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:CI.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,r){if(K().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:CI.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new bC(i,gC):new fC(i,gC);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=ts()),c="complex64"===s?ql(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=ts()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new bC(s,gC):new fC(s,gC);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===K().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&K().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...TI(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=ql(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=b(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&sa().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>ss(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Sr(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!FI(n)){if(K().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=b(t);if(K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...TI(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=K().getBool("WEBGL_PACK")&&!0===s,i=a?GI(t):t,o=a?new o$(i):new i$(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=g(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=g(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ts(),endMs:null}}endTimer(e){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ts(),e)}async getQueryTime(e){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return K().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=sa().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return K().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&b(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){jl("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return xC(e.shape,t)}packedUnaryOp(e,t,n){const s=new bC(e.shape,t),r=this.compileAndRun(s,[e],n);return sa().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Z$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(K().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,mC,e.dtype);const t=new fC(e.shape,mC),n=this.compileAndRun(t,[e]);return sa().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&A(n[0])){const r=n.map((e=>ns(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:s}=this.makeTensorInfo(e,t,n);return sa().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){const t=new yC(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new lC(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[UI(e.shape),...VI(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[UI(t),...VI(t)],a=new uC(r,n),i=this.runWebGLProgram(a,[s],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=GI(s);let i;return i=n?new a$(a):new r$(a),{dtype:r,shape:s,dataId:this.runWebGLProgram(i,[{shape:a,dtype:r,dataId:e}],r,null,!0).dataId}}runWebGLProgram(e,t,n,s,r=!1){const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===$I.DENSE){const t=TI(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===b(a.shape))return i.values=N(a.dtype,0),a;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&b(t.shape)<=K().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!jI(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),o.push(t),n=this.texData.get(t.dataId),e.shape=s}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let s="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;s+=`${e.shape}_${n}_${t}`}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r,a}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,s){const r=t.userCode,a=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=y$(a,o,r,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===K().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const s=t.variableNames[n],r=!1;d[s]=e.getUniformLocation(u,s,r),d[`offset${s}`]=e.getUniformLocation(u,`offset${s}`,r)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,l,u))),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),function(e,t,n,s,r){R$(t.inShapeInfos,n),R$([t.outShapeInfo],[s]);const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===K().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`];if(null!=a)if(n.isUniform)if(b(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,s)})),null!=r&&r(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,u,s),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));const f=K().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=ts();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!K().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(K().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=aa((()=>{if(!K().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=K().getBool("DEBUG");K().set("DEBUG",!1);const t=this.abs(ca(1e-8)).dataSync()[0];if(K().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=ts());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?d(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=C(e);e=t.newShape}let s=b(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=UI(e);let n=2,r=2;return e.length&&([n,r]=VI(e)),s=t*(n/2)*(r/2),k(s).map((e=>2*e))}return k(s)}(n,o),t.texShape=c),null!=r){const e=GI(n);let a,i=c[1],h=c[0];const d=r instanceof Uint8Array;o?([i,h]=EI(c[0],c[1]),a=new u$(e,[h,i],d)):a=new l$(e,[h,i],d);const p=this.makeTensorInfo([h,i],s);this.texData.get(p.dataId).usage=d?CI.PIXELS:CI.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,h,r);const f=!0,m=this.runWebGLProgram(a,[p],s,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),t.values=null,l&&(this.uploadWaitMs+=ts()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*R(t)}}wC.nextDataId=0,zs()&&la("webgl",(()=>new wC),2);class vC{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ei(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class IC{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ei(t,n);const r=this.outputShape.length;let a="";if(s)if(0===r||1===b(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${S$(r)} coords = getOutputCoords();\n        `,1===r)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=oC("coords",r);a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function $C(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const CC={kernelName:lt,backendName:"webgl",kernelFunc:$C};function NC(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=$C({inputs:{x:s},backend:n}),l=$C({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const SC={kernelName:ve,backendName:"webgl",kernelFunc:NC},TC="return (a < 0.) ? b * a : a;",EC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",RC={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",Qn(a,"float32")),o=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new IC(EC,r.shape,i.shape):new vC(TC,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],r.dtype);return n.disposeIntermediateTensorInfo(i),l}},AC="return (a < 0.) ? b * a : a;",FC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",DC={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new IC(FC,s.shape,r.shape):new vC(AC,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}};function _C({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new bC(i.shape,t):new fC(i.shape,e),o.runWebGLProgram(u,[i],l)}}function OC({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new vC(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],Cs(n.dtype,s.dtype))})),a=NC({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||Cs(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=r){const e=c.texData.get(l.dataId),t=c.texData.get(u.dataId),[n,s]=r(l.shape,u.shape,e.values,t.values,h),a=c.makeTensorInfo(s,h);return c.texData.get(a.dataId).values=n,a}let d;return d=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new IC(t,l.shape,u.shape,n):new vC(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function LC(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?FC:AC;if("leakyrelu"===e)return t?EC:TC;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class MC{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class zC{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ei(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const PC="return a * b;";function BC(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=Cs(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new zC("return areal * breal - aimag * bimag;",s.shape,r.shape),i=new zC("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=NC({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=K$(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new IC(PC,s.shape,r.shape):new vC(PC,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const WC={kernelName:zt,backendName:"webgl",kernelFunc:BC};function UC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=b(r.shape),l=I(a,o),u=b(l);p(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||jI(r.shape,l)||null!==c.texture&&jI(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[UI(e.shape),...VI(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[UI(t),...VI(t)],i=new uC(a,s),o=n.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(r,l,i)}const VC={kernelName:tn,backendName:"webgl",kernelFunc:UC};class GC{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${x(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class HC{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function jC(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=Sl(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new GC({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new GC({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new HC({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class KC{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=S$(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class qC{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=S$(this.rank),r=iC("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function XC(e,t,n){const s=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qC(e.shape,t):new KC(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function YC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=$(r,e.shape);let o=i;const l=Ri(o,a),u=null!=l;let c=e;u&&(c=XC(e,l,s),o=Fi(o.length,a)),Ei("sum",o,a);const[h,d]=Si(c.shape,o);let p=h;n&&(p=Ti(h,i));const f=b(d),m=UC({inputs:{x:c},attrs:{shape:[b(e.shape)/f,f]},backend:s}),g=jC(m,Ns(e.dtype),"sum",s),y=UC({inputs:{x:g},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),y}(r,a,i,n)}const JC={kernelName:wn,backendName:"webgl",kernelFunc:YC};function ZC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=rC(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=t}else u=XC(r,a,i);return u}const QC={kernelName:On,backendName:"webgl",kernelFunc:ZC};function eN({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],f=n?e.shape[u-1]:e.shape[u-2],m=s?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=b(g),k=b(y);p(u>=2&&c>=2&&(x===k||1===x||1===k),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(x>k?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);p(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=n?[x,h,f]:[x,f,h],I=s?[k,m,d]:[k,d,m],$=UC({inputs:{x:e},backend:r,attrs:{shape:v}}),C=UC({inputs:{x:t},backend:r,attrs:{shape:I}}),N=[$,C],S=Math.max(x,k),T=n?$.shape[1]:$.shape[2],E=null!=a,R=null!=i,A="leakyrelu"===l,F=null!=l?LC(l,!0):null;let D;if((1===f||1===m)&&T>1e3&&!1===(E||R||A||null!=F)){let e=$,t=C;n&&(e=ZC({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=ZC({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===m;let i=e;1!==m&&(i=UC({inputs:{x:e},backend:r,attrs:{shape:[S,T,1]}}),N.push(i));const o=1===m?2:1;let l=t;a&&(l=UC({inputs:{x:t},backend:r,attrs:{shape:[S,1,T]}}),N.push(l));const u=BC({inputs:{a:i,b:l},backend:r});D=YC({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const l=Cs(e.dtype,t.dtype),u=new MC(v,I,[S,f,m],n,s,E,F,R,A),c=[$,C];if(null!=a&&c.push(a),R&&c.push(i),A){const e=r.makeTensorInfo([],"float32",Qn(o,"float32"));c.push(e),N.push(e)}D=r.runWebGLProgram(u,c,l)}const _=UC({inputs:{x:D},backend:r,attrs:{shape:w}});N.push(D);for(const e of N)r.disposeIntermediateTensorInfo(e);return _}const tN={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return eN({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},nN="return abs(x);",sN={kernelName:Z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=Z$(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bC(s.shape,nN):new fC(s.shape,nN),n.runWebGLProgram(r,[s],s.dtype)}},rN=_C({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),aN={kernelName:Q,backendName:"webgl",kernelFunc:rN},iN=_C({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),oN={kernelName:ee,backendName:"webgl",kernelFunc:iN},lN="return a + b;",uN=OC({opSnippet:lN,packedOpSnippet:lN,supportsComplex:!0,cpuKernelImpl:A$}),cN={kernelName:te,backendName:"webgl",kernelFunc:uN};class hN{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class dN{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const pN={kernelName:ne,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return $C({inputs:{x:r[0]},backend:s});if(r.length>K().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>Cs(e,t))),i=r.map((e=>e.shape)),o=K().getBool("WEBGL_PACK")?new dN(r[0].shape,i):new hN(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},fN={kernelName:se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=$(a,r.shape);let u=l;const c=Ri(u,o);let h=r;null!=c&&(h=ZC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Fi(u.length,o)),Ei("all",u,o);const[d,p]=Si(h.shape,u),f=UC({inputs:{x:h},backend:n,attrs:{shape:[-1,b(p)]}}),m=jC(f,f.dtype,"all",n);let g;return g=UC(i?{inputs:{x:m},backend:n,attrs:{shape:Ti(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},mN={kernelName:re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=$(a,r.shape);let u=l;const c=Ri(u,o);let h=r;null!=c&&(h=ZC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Fi(u.length,o)),Ei("any",u,o);const[d,p]=Si(h.shape,u),f=UC({inputs:{x:h},backend:n,attrs:{shape:[-1,b(p)]}}),m=jC(f,f.dtype,"any",n);let g;return g=UC(i?{inputs:{x:m},backend:n,attrs:{shape:Ti(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class gN{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class bN{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,p(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=S$(o),u=oC("coords",o);let c,h;if(1===a){h=o+1;const e=S$(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),f="."+d[h-1],m=d.map((e=>"int "+e)),g=oC("sourceLocR",h-1).concat("inIdx.r"),b=oC("sourceLocG",h-1).concat("inIdx.g"),y=oC("sourceLocB",h-1).concat("inIdx.b"),x=oC("sourceLocA",h-1).concat("inIdx.a"),k="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,v=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function yN(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=Sl(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new gN(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=yN(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function xN(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=Sl(r[r.length-1]),i=new bN(r,a,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const s=xN(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function kN(e,t,n,s){const r=[n];if(Ei("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!K().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,i]=Si(t.shape,r),o=b(i),l=UC({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);const u=yN(e,l,s);n.push(u);const c=UC({inputs:{x:u},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return xN(e,t,s)}const wN={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=$(a,r.shape);const o=Ri(i,r.shape.length);let l=r;const u=[];null!=o&&(l=ZC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Fi(i.length,l.shape.length)),Ei("argMax",[i[0]],l.shape.length);const c=kN(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},vN={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=$(a,r.shape);const o=Ri(i,r.shape.length);let l=r;const u=[];null!=o&&(l=ZC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Fi(i.length,l.shape.length)),Ei("argMin",[i[0]],l.shape.length);const c=kN(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},IN=_C({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),$N={kernelName:oe,backendName:"webgl",kernelFunc:IN},CN=_C({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),NN={kernelName:le,backendName:"webgl",kernelFunc:CN},SN=_C({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),TN={kernelName:ue,backendName:"webgl",kernelFunc:SN},EN=OC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),RN={kernelName:he,backendName:"webgl",kernelFunc:EN},AN=_C({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),FN={kernelName:ce,backendName:"webgl",kernelFunc:AN};class DN{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(a/4),k=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class _N{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(k="avgValue / count");const w=4*Math.floor(a/4),v=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${k});\n        }\n      }\n    `}}const ON={kernelName:de,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ZI(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;p(Ta(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ya(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return $C({inputs:{x:r},backend:n});const c=new DN(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},LN={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=xa(r.shape,a,i,[1,1,1],o,l,u),h=new _N(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class MN{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zN{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const PN={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=xa(i.shape,o,l,[1,1,1],u,c),d=new zN(h);return n.runWebGLProgram(d,[r],i.dtype)}},BN={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;ZI([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=ya(i.shape,o,l,1,u),h=new MN(c);return n.runWebGLProgram(h,[r],i.dtype)}},WN={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return eN({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class UN{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ei(e,t),ei(e,n);let i="0.0";null!=s&&(ei(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(ei(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class VN{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ei(e,t),ei(e,n);let i="vec4(0.0)";null!=s&&(ei(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(ei(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const GN={kernelName:st,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;p(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=K().getBool("WEBGL_PACK_NORMALIZATION")?new VN(s.shape,r.shape,a.shape,c,h,l):new UN(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class HN{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=S$(this.rank),n=`uniform int start[${this.rank}];`,s=function(e){if(1===e)return"sourceLoc";if(e<=6)return jN.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${jN[t]} = start[${t}] + coords.${jN[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const jN=["x","y","z","w","u","v"];class KN{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=S$(this.rank),n=oC("coords",this.rank),s=oC("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function qN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=Zr(r,a,i);if(zr(r,o,l),0===b(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=Q$(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=Yr(r.shape,o,l);if(u||!c){const e=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KN(l):new HN(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Jr(t,L(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const XN={kernelName:fn,backendName:"webgl",kernelFunc:qN},YN={kernelName:be,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;p(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=El(r.shape,a,o),u=Rl(l.length,a.length),c=Al(r.shape,a,o),h=Fl(i,a.length),d=Dl(c,i,a.length),f=[],m=UC({inputs:{x:r},backend:n,attrs:{shape:l}}),g=ZC({inputs:{x:m},backend:n,attrs:{perm:u}}),b=UC({inputs:{x:g},backend:n,attrs:{shape:c}}),y=qN({inputs:{x:b},backend:n,attrs:{begin:h,size:d}});return f.push(m),f.push(g),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},JN={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=F$(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},ZN=OC({opSnippet:"return float(a != b);",dtype:"bool"}),QN={kernelName:Bt,backendName:"webgl",kernelFunc:ZN};function eS(e){const{inputs:t,backend:n}=e,{input:s}=t;return $C({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const tS={kernelName:Zt,backendName:"webgl",kernelFunc:eS},nS={kernelName:xe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return $C({inputs:{x:a},backend:s});const t=zi(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=NC({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=eS({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!T(a.dtype,i)){const e=$C({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new fC(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",N("bool",1)),t=ZN({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},sS="return ceil(x);",rS=_C({opSnippet:sS,packedOpSnippet:sS,cpuKernelImpl:_$}),aS={kernelName:ke,backendName:"webgl",kernelFunc:rS};class iS{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class oS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const lS={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=K().getBool("WEBGL_PACK_CLIP")?new oS(r.shape):new iS(r.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[r],r.dtype,l)}};class uS{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function cS(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const hS={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new uS(s.shape),i=[cS(s,r.complexTensorInfos.real),cS(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class dS{constructor(e){this.outputShape=[],this.outputShape=Cl(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class pS{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cl(e,t);const n=this.outputShape,s=n.length,r=S$(s),a=oC("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${fS(i,l,t)}),\n            vec2(${fS(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${fS(i,l,p)}),\n          vec2(${fS(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function fS(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function mS(e){const{inputs:t,backend:n}=e,{input:s}=t;return $C({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const gS={kernelName:ct,backendName:"webgl",kernelFunc:mS};function bS(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>eS({inputs:{input:e},backend:n}))),r=e.map((e=>mS({inputs:{input:e},backend:n}))),a=bS(s,t,n),i=bS(r,t,n),o=NC({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===s){const{tensors2D:r,outShape:a}=yS(e,t,n),i=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===r[0].shape[0],l=O$(i,a,s,o),u=Cl(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>K().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(e.length/2),r=bS(e.slice(0,s),t,n),a=bS(e.slice(s),t,n),i=bS([r,a],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if(K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new pS(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:r,outShape:a}=yS(e,t,n),i=new dS(r.map((e=>e.shape))),o=n.runWebGLProgram(i,r,s);r.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=UC({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(o),l}function yS(e,t,n){const s=Cl(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>UC({inputs:{x:e},attrs:{shape:[-1,b(e.shape.slice(t))]},backend:n}))),outShape:s}}function xS(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=$(r,t[0].shape)[0],i=Cl(t.map((e=>e.shape)),a);if(0===b(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>b(e.shape)>0));return 1===o.length?$C({inputs:{x:o[0]},backend:n}):($l(o.map((e=>e.shape)),a),bS(o,a,n))}const kS={kernelName:$e,backendName:"webgl",kernelFunc:xS};class wS{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",k="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,k="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${k}\n        setOutput(result);\n      }\n    `}}class vS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IS{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:s,inChannels:r,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=r*s,m=e$(),g="channelsLast"===h,b=g?0:1,y=g?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\n          blockIndex = rc.y + ${s};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${r}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${r}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+s}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+s}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function $S({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[],b=(1===h||1===d)&&c>1e3,y=l[2]%2!=0&&!!u.isPacked;if(!b&&K().getBool("WEBGL_LAZILY_UNPACK")&&K().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,p(jI(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const b=UC({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(b);const y=eN({a:h,b,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),x=s.texData.get(y.dataId);p(x.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,x.shape=n.outShape,m=$C({inputs:{x:y},backend:s}),m.shape=n.outShape,g.push(y)}else{const u=UC({inputs:{x:e},backend:s,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=UC({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=eN({a:u,b:c,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});m=UC({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const e of g)s.disposeIntermediateTensorInfo(e);return m}function CS({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,y=[m,g],x=[],k=UC({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),w=UC({inputs:{x:t},backend:s,attrs:{shape:[1,m,b(t.shape)/m]}});x.push(k),x.push(w);const v=new IS(y,k.shape,n),I=s.runWebGLProgram(v,[k],"float32"),$=UC({inputs:{x:I},backend:s,attrs:{shape:[1,y[0],y[1]]}});x.push(I),x.push($);const C=null!=r,N=null!=a,S="leakyrelu"===o,T=o?LC(o,!0):null,E=new MC($.shape,w.shape,[1,g,n.outChannels],!0,!1,C,T,N,S),R=[$,w];if(r&&R.push(r),N&&R.push(a),S){const e=s.makeTensorInfo([],"float32",Qn(i,"float32"));R.push(e),x.push(e)}const A=s.runWebGLProgram(E,R,"float32"),F=UC({inputs:{x:A},backend:s,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});x.push(A);for(const e of x)s.disposeIntermediateTensorInfo(e);return F}const NS={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=Ea(l),d=ka(r.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(K().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])p=CS({x:r,filter:a,convInfo:d,backend:n});else{const e=new wS(d);p=n.runWebGLProgram(e,[r,a],"float32")}else p=$S({x:r,filter:a,convInfo:d,backend:n});const f=UC({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class SS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class TS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ES{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const AS={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=Ea(l),d=ka(r.shape,c,i,1,o,u,!1,h),p=new SS(d);return n.runWebGLProgram(p,[r,a],"float32")}},FS={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=Ea(u),d=ka(i,a.shape,o,1,l,c,!1,h),p=new TS(d);return n.runWebGLProgram(p,[r,a],"float32")}},DS={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=wa(r.shape,a.shape,i,l,o),c=new vS(u);return n.runWebGLProgram(c,[r,a],"float32")}},_S={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=wa(r.shape,l,i,1,o),c=new ES(u);return n.runWebGLProgram(c,[r,a],"float32")}},OS={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=wa(l,a.shape,o,1,i),c=new RS(u);return n.runWebGLProgram(c,[r,a],"float32")}},LS=_C({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),MS={kernelName:Ae,backendName:"webgl",kernelFunc:LS},zS=_C({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),PS={kernelName:Fe,backendName:"webgl",kernelFunc:zS};class BS{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,k]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${k};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const WS={kernelName:_e,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new BS(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};class US{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const s=e.length,r=t?"0.0":`getX(${VS(s,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${S$(s)} coords = getOutputCoords();\n        int end = ${GS(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${GS(s,"coords")} = idx;\n          val += getX(${VS(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function VS(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function GS(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const HS={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,l=r.shape.length,u=Ri([a],l);let c=r;null!=u&&(c=ZC({inputs:{x:r},backend:n,attrs:{perm:u}}));const h=Fi(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=$C({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new US(c.shape,!1,o),s=t.getCustomSetupFunc(e),r=p;p=n.runWebGLProgram(t,[p],p.dtype,s),n.disposeIntermediateTensorInfo(r)}if(i){const e=new US(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=ZC({inputs:{x:p},backend:n,attrs:{perm:Ai(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},jS={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=F$(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=D$(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class KS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const qS={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;p(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=r.shape[0],l="NHWC"===i?r.shape[1]:r.shape[2],u="NHWC"===i?r.shape[2]:r.shape[3],c="NHWC"===i?r.shape[3]:r.shape[1],h=l*a,d=u*a,f=c/(a*a),m=new KS("NHWC"===i?[o,h,d,f]:[o,f,h,d],a,i);return n.runWebGLProgram(m,[r],r.dtype)}};class XS{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",b="";n&&(g=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class YS{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let b="int xR; int xC; int xCOffset;";for(let e=0;e<f;e++)for(let t=0;t<m;t++)b+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<f;e++)for(let t=0;t<g;t++){const n=2*t;if(b+=`\n          xR = xRCorner + ${e*h};\n          xC = xCCorner + ${n*p};\n        `,1===c){if(n<m&&(b+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<m)){const t=l%2==0?d(p):p;p%2==0&&l%2==1||p%2!=0&&l%2!=1?(b+=`\n                  xCOffset = xC + ${l%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(b+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),b+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):b+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<m&&(b+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,l%2==1?(b+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<m&&(b+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<m&&(b+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),b+="}");n<m&&(b+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<m&&(b+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<f;e++)for(let t=0;t<m;t++)b+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let y="",x="";n&&(y=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${b}\n\n        vec4 result = dotProd;\n        ${k}\n        ${x}\n        setOutput(result);\n      }\n    `}}const JS={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),p(Ta(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=ka(r.shape,a.shape,i,c,o,u,!0);let d;return d=K().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new YS(h):new XS(h),n.runWebGLProgram(d,[r,a],"float32")}};class ZS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const eT={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=ka(r.shape,c,i,o,l,u,!0),d=new ZS(h);return n.runWebGLProgram(d,[r,a],"float32")}},tT={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=ka(c,a.shape,i,o,l,u,!0),d=new QS(h);return n.runWebGLProgram(d,[r,a],"float32")}};class nT{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const sT={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=b(s.shape),i=UC({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new nT(a),l=n.runWebGLProgram(o,[i],i.dtype),u=UC({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class rT{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const aT={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=ba(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new rT(u);c=n.runWebGLProgram(h,[r,a],"float32");const d=UC({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},iT=_C({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),oT={kernelName:He,backendName:"webgl",kernelFunc:iT},lT={kernelName:je,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new IC("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new vC("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},uT=OC({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),cT={kernelName:qe,backendName:"webgl",kernelFunc:uT},hT=_C({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Bl};\n  float a1 = ${Wl};\n  float a2 = ${Ul};\n  float a3 = ${Vl};\n  float a4 = ${Gl};\n  float a5 = ${Hl};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),dT={kernelName:Ke,backendName:"webgl",kernelFunc:hT},pT="return exp(x);",fT=_C({opSnippet:pT,packedOpSnippet:pT,cpuKernelImpl:L$}),mT={kernelName:Xe,backendName:"webgl",kernelFunc:fT};function gT(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(p(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),UC({inputs:{x:a},backend:s,attrs:{shape:o}})}const bT={kernelName:Ye,backendName:"webgl",kernelFunc:gT},yT="return exp(x) - 1.0;",xT=_C({opSnippet:yT,packedOpSnippet:yT,cpuKernelImpl:M$}),kT={kernelName:Je,backendName:"webgl",kernelFunc:xT};class wT{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function vT(e,t,n){const s=n.texData.get(e.dataId),r=b(e.shape),a=e.shape[e.shape.length-1],i=UC({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new wT("real",o,t),u=new wT("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=NC({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=UC({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const IT={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return vT(s,!1,n)}};class $T{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function CT(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||D(r),"string"===a){const e=S(a,b(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new $T(s,r),n=e.getCustomSetupFunc(r);return t.runWebGLProgram(e,[],a,n)}}const NT={kernelName:Qe,backendName:"webgl",kernelFunc:CT};class ST{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const TT={kernelName:et,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new ST(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},ET="return floor(x);",RT=_C({opSnippet:ET,packedOpSnippet:ET,cpuKernelImpl:z$}),AT={kernelName:tt,backendName:"webgl",kernelFunc:RT},FT=OC({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),DT={kernelName:nt,backendName:"webgl",kernelFunc:FT};class _T{constructor(e){this.variableNames=["A"];const t=e$(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class OT{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=e$(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const LT={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];(o||i)&&(null==MT&&(MT=document.createElement("canvas").getContext("2d")),MT.canvas.width=l,MT.canvas.height=u,MT.drawImage(r,0,0,l,u),r=MT.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=CI.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=K().getBool("WEBGL_PACK")?new OT(h):new _T(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let MT;const zT={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Ea(c),g=ka(r.shape,a.shape,l,h,u,d,!1,m);let b;const y=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(K().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])b=CS({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,s="leakyrelu"===p,l=p?LC(p,!1):null,u=new wS(g,e,l,t,s),c=[r,a];if(i&&c.push(i),o&&c.push(o),s){const e=n.makeTensorInfo([],"float32",Qn(f,"float32"));c.push(e),y.push(e)}b=n.runWebGLProgram(u,c,"float32")}else b=$S({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=UC({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},PT={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=s,m=[];let g=c;null==g&&(g=[1,1]),p(Ta(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const b=ka(r.shape,a.shape,l,g,u,h,!0),y=K().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,x=d?LC(d,y):null,k=[r,a],w=null!=i,v=null!=o,I="leakyrelu"===d;if(w&&k.push(i),v&&k.push(o),I){const e=n.makeTensorInfo([],"float32",Qn(f,"float32"));k.push(e),m.push(e)}let $;$=y?new YS(b,w,x,v,I):new XS(b,w,x,v,I);const C=n.runWebGLProgram($,k,"float32");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class BT{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const s=S$(t.length),r=S$(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const WT={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],[o,l,u,c]=_l(s,r),h=UC({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),d=UC({inputs:{x:s},backend:n,attrs:{shape:[b(s.shape)/u,u]}}),p=new BT(i,c,[l,u]),f=n.runWebGLProgram(p,[d,h],d.dtype),m=UC({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class UT{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=S$(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}const VT={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,l=au(r,a,$(i,r.shape)[0],o),u=b(a.shape),c=[],h=UC({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=UC({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),s=P$(t,e,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,s.dtype,s.values)}const f=new UT(h.shape,p),m=n.runWebGLProgram(f,[h,d],h.dtype);c.push(m);const g=UC({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},GT=OC({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:B$,dtype:"bool"}),HT={kernelName:it,backendName:"webgl",kernelFunc:GT},jT=OC({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),KT={kernelName:ot,backendName:"webgl",kernelFunc:jT},qT={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return vT(s,!0,n)}},XT=_C({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),YT={kernelName:ht,backendName:"webgl",kernelFunc:XT},JT=_C({opSnippet:"return float(isinf(x));",dtype:"bool"}),ZT={kernelName:dt,backendName:"webgl",kernelFunc:JT},QT=_C({opSnippet:"return float(isnan(x));",dtype:"bool"}),eE={kernelName:pt,backendName:"webgl",kernelFunc:QT},tE=OC({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:W$,dtype:"bool"}),nE={kernelName:mt,backendName:"webgl",kernelFunc:tE},sE=OC({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),rE={kernelName:gt,backendName:"webgl",kernelFunc:sE},aE={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=U$(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},iE=_C({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:V$}),oE={kernelName:yt,backendName:"webgl",kernelFunc:iE},lE=_C({opSnippet:"return log(1.0 + x);"}),uE={kernelName:xt,backendName:"webgl",kernelFunc:lE},cE=OC({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),hE={kernelName:kt,backendName:"webgl",kernelFunc:cE},dE=_C({opSnippet:"return float(!(x >= 1.0));"}),pE={kernelName:wt,backendName:"webgl",kernelFunc:dE},fE=OC({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),mE={kernelName:vt,backendName:"webgl",kernelFunc:fE};class gE{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class bE{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const yE={kernelName:It,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=K().getBool("WEBGL_PACK_NORMALIZATION")?new bE(r.shape,a,i,o,l):new gE(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class xE{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const kE={kernelName:$t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new xE(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function wE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=$(a,r.shape);let u=l;const c=Ri(u,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=rC(e,r.shape,r.dtype,c,t);p=n.makeTensorInfo(t,r.dtype),n.texData.get(p.dataId).values=s}else p=XC(r,c,n);u=Fi(u.length,o)}Ei("max",u,o);const[f,m]=Si(p.shape,u);let g,y=f;if(i&&(y=Ti(f,l)),d){const e=n.texData.get(p.dataId).values,t=G$(e,b(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,s){const r=b(t),a=UC({inputs:{x:e},attrs:{shape:[b(e.shape)/r,r]},backend:s}),i=jC(a,e.dtype,"max",s),o=UC({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const vE={kernelName:Ct,backendName:"webgl",kernelFunc:wE},IE=OC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:H$}),$E={kernelName:Nt,backendName:"webgl",kernelFunc:IE},CE={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;ZI(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;p(Ta(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ya(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return $C({inputs:{x:r},backend:n});const c=new DN(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},NE={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=xa(r.shape,a,i,[1,1,1],o,u,l),h=new _N(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class SE{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class TE{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const EE={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=xa(i.shape,o,l,[1,1,1],u,c),d=new _N(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new TE(h),m=n.runWebGLProgram(f,[r,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},RE={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;ZI([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=ya(o.shape,l,u,1,c,h),p=new DN(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new SE(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},AE={kernelName:At,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;p(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];p(Ta(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=ya(s.shape,r,a,u,i),[h,d]=function(e,t,n,s){let r=new DN(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new DN(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,l);return[h,d]}},FE={kernelName:Ft,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,l=$(a,s.shape);let u=l;const c=Ri(u,o),h=null!=c,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=rC(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype),i.texData.get(f.dataId).values=n}else f=XC(s,c,i);p.push(f),u=Fi(u.length,o)}Ei("sum",u,o);const[m,g]=Si(f.shape,u);let y=m;r&&(y=Ti(m,l));const x=function(e,t,n,s){const r=b(t),a=UC({inputs:{x:e},attrs:{shape:[b(e.shape)/r,r]},backend:s}),i=jC(a,"float32","mean",s),o=UC({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return x}},DE={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=$(a,r.shape);let u=l;const c=Ri(u,o);let h=r;null!=c&&(h=ZC({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Fi(u.length,r.shape.length)),Ei("min",u,o);const[d,p]=Si(h.shape,u),f=UC({inputs:{x:h},backend:n,attrs:{shape:[-1,b(p)]}}),m=jC(f,f.dtype,"min",n);let g;return g=UC(i?{inputs:{x:m},backend:n,attrs:{shape:Ti(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},_E=OC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:j$}),OE={kernelName:_t,backendName:"webgl",kernelFunc:_E};class LE{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=S$(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class ME{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=S$(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=oC("rc",s),l=oC("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const zE={kernelName:Ot,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ME(s.shape,r,a):new LE(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},PE=OC({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),BE={kernelName:Lt,backendName:"webgl",kernelFunc:PE};class WE{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const UE=OC({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),VE={kernelName:Ge,backendName:"webgl",kernelFunc:UE},GE="return a - b;",HE=OC({opSnippet:GE,packedOpSnippet:GE,supportsComplex:!0,cpuKernelImpl:tC}),jE={kernelName:Sn,backendName:"webgl",kernelFunc:HE};function KE(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=$([a],r.shape),o=wE({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Ti(o.shape,i),u=UC({inputs:{x:o},backend:n,attrs:{shape:l}}),c=HE({inputs:{a:r,b:u},backend:n}),h=fT({inputs:{x:c},backend:n}),d=YC({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=UC({inputs:{x:d},backend:n,attrs:{shape:l}}),f=UE({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const qE={kernelName:$n,backendName:"webgl",kernelFunc:KE},XE={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:KE({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new WE(u,c,a),d=h.getCustomSetupFunc(i),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},YE="return -x;",JE={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=q$(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bC(s.shape,YE):new fC(s.shape,YE),n.runWebGLProgram(r,[s],s.dtype)}},ZE=Vo,QE={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){jl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=ZE(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},eR=Go,tR={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){jl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=eR(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},nR=Ho,sR={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){jl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=nR(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class rR{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const aR={kernelName:Ht,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,l=b(r.shape),u=new rR(l,a,i,o),c=UC({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const d=UC({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(h),d}};function iR(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=eS({inputs:{input:s},backend:n}),t=iR({inputs:{x:e},backend:n}),r=mS({inputs:{input:s},backend:n}),a=iR({inputs:{x:r},backend:n}),i=NC({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return CT({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const oR={kernelName:Pn,backendName:"webgl",kernelFunc:iR},lR={kernelName:Gt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=eS({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=mS({inputs:{input:r},backend:s}),i=iR({inputs:{x:a},backend:s}),o=NC({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return CT({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},uR={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return gT({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(a,e.shape,"All tensors passed to stack must have matching shapes"),p(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=xS({inputs:t.map((e=>{const t=gT({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class cR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=S$(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n      uniform float value;\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class hR{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=S$(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=oC("rc",s),l=oC("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===s?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n      uniform float value;\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const dR=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s,o=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hR(r.shape,a,i):new cR(r.shape,a,i),l=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[r],r.dtype,l)},pR={kernelName:Kt,backendName:"webgl",kernelFunc:dR},fR=OC({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),mR={kernelName:qt,backendName:"webgl",kernelFunc:fR},gR={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=$(a,r.shape);let c=u;const h=Ri(c,o);let d,p=r;if(null!=h&&(p=ZC({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Fi(c.length,o),l.push(p)),Ei("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:r}=X$(p.shape,p.dtype,e,c);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=Si(p.shape,c),s=b(t),a=UC({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),i=jC(a,Ns(r.dtype),"prod",n);d=UC({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=Ti(d.shape,u);d=UC({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},bR=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=Y$(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},yR={kernelName:Jt,backendName:"webgl",kernelFunc:bR},xR=_C({opSnippet:"return 1.0 / x;"}),kR={kernelName:Qt,backendName:"webgl",kernelFunc:xR},wR=_C({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),vR={kernelName:en,backendName:"webgl",kernelFunc:wR},IR=_C({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),$R={kernelName:on,backendName:"webgl",kernelFunc:IR};class CR{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class NR{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const SR={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new NR(r.shape,l,u,a,i):new CR(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class TR{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const ER={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new TR(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class RR{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const AR={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=new RR(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class FR{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const DR={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new FR(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class _R{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=S$(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class OR{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=oC("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=S$(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const LR={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=$(a,r.shape);if(0===i)return $C({inputs:{x:r},backend:n});const l=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new OR(r.shape,o):new _R(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class MR{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,s){return(r,a)=>{null==this.paramsLoc&&(this.paramsLoc=r.getUniformLocationNoThrow(a,"params")),r.gl.uniform4f(this.paramsLoc,e,t,n,s)}}}const zR={kernelName:Wn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=new MR(s.shape,a),[u,c]=Tl(i,s.shape[1],s.shape[2]),h=l.getCustomSetupFunc(u,c,Math.sin(r),Math.cos(r));return o.runWebGLProgram(l,[s],s.dtype,h)}},PR=_C({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),BR={kernelName:un,backendName:"webgl",kernelFunc:PR},WR=_C({opSnippet:"return inversesqrt(x);",cpuKernelImpl:J$}),UR={kernelName:cn,backendName:"webgl",kernelFunc:WR};class VR{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=S$(r.length),l=S$(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const GR={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Ml(0,r,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const p=UC({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=UC({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new VR(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),y=UC({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}};class HR{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=S$(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const jR={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new HR(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],Cs(r.dtype,a.dtype))}},KR=_C({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${zl};\n  float scale = ${Pl};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),qR={kernelName:pn,backendName:"webgl",kernelFunc:KR},XR=_C({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),YR={kernelName:yn,backendName:"webgl",kernelFunc:XR},JR=_C({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),ZR={kernelName:bn,backendName:"webgl",kernelFunc:JR},QR=_C({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),eA={kernelName:mn,backendName:"webgl",kernelFunc:QR},tA=_C({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),nA={kernelName:gn,backendName:"webgl",kernelFunc:tA},sA=_C({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),rA={kernelName:xn,backendName:"webgl",kernelFunc:sA},aA={kernelName:vn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;p(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=[],c=dR({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=El(c.shape,a,o,!1),d=Rl(h.length,a.length,!1),f=Al(c.shape,a,o,!1),m=UC({inputs:{x:c},backend:n,attrs:{shape:h}}),g=ZC({inputs:{x:m},backend:n,attrs:{perm:d}}),b=UC({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(c),u.push(m),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},iA={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=Ml(0,r,o),d=new VR(u,l,r.shape.length,a.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[a,r,i],a.dtype),f=UC({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},oA={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=$(i,r.shape)[0],l=nu(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=qN({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},lA=_C({opSnippet:"return sqrt(x);"}),uA={kernelName:kn,backendName:"webgl",kernelFunc:lA},cA={kernelName:Nn,backendName:"webgl",kernelFunc:_C({opSnippet:"return x * x;"})},hA="return (a - b) * (a - b);",dA=OC({opSnippet:hA,packedOpSnippet:hA}),pA={kernelName:Cn,backendName:"webgl",kernelFunc:dA},fA={kernelName:Bn,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new fC(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class mA{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=S$(n.length),a=S$(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const gA={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:b,outShape:y}=Qr(r.shape,a,i,o,l,u,c,h,d),x=UC({inputs:{x:r},backend:n,attrs:{shape:b}});let k;if(p){const e=qN({inputs:{x},backend:n,attrs:{begin:f,size:g}});k=UC({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))k=n.makeTensorInfo(y,r.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=Sr(x.shape,x.dtype,e),s=eC(y,t,m,f);k=n.makeTensorInfo(y,x.dtype,s.values)}else{const e=new mA(f,m,y);k=n.runWebGLProgram(e,[x],x.dtype)}const w=UC({inputs:{x:k},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(k),w}},bA=_C({opSnippet:"return tan(x);"}),yA={kernelName:Rn,backendName:"webgl",kernelFunc:bA},xA=_C({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),kA={kernelName:An,backendName:"webgl",kernelFunc:xA};class wA{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=S$(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function vA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype){const e=n.readSync(r.dataId).map((e=>ss(e))),t=Sr(r.shape,r.dtype,e),s=nC(t,a);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const i=new wA(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const IA={kernelName:Fn,backendName:"webgl",kernelFunc:vA},$A={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=n.readSync(r.dataId),[l,u]=sC(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class CA{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const NA={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,m]=null!=u?u:[h,d],g=new CA(h,d,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[r,a],"float32")}},SA={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;ZI(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=aC(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},TA={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=qN({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),s=UC({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class EA{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const RA=[yE,kE,tN,sN,aN,oN,cN,pN,fN,mN,wN,vN,$N,NN,RN,TN,FN,LN,ON,PN,BN,WN,GN,YN,JN,nS,aS,lS,hS,SC,kS,AS,FS,NS,_S,OS,DS,MS,PS,WS,HS,jS,qS,eT,tT,JS,sT,aT,oT,lT,cT,dT,mT,bT,kT,IT,NT,TT,AT,DT,LT,zT,PT,WT,VT,HT,KT,CC,qT,gS,YT,ZT,eE,RC,nE,rE,aE,uE,oE,hE,pE,mE,vE,NE,CE,EE,RE,AE,$E,FE,DE,OE,zE,BE,XE,WC,JE,QE,tR,sR,QN,aR,lR,uR,pR,mR,DC,gR,yR,tS,VE,kR,$R,vR,VC,SR,ER,AR,DR,LR,zR,BR,UR,GR,jR,qR,YR,ZR,eA,nA,XN,qE,rA,aA,iA,oA,uA,cA,pA,fA,gA,jE,JC,yA,kA,IA,$A,NA,QC,SA,TA,{kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=Ri([u],o);let h=r;null!=c&&(h=ZC({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Fi(1,o)[0]);const d=ru(h.shape,u,i),p=b([h.shape[u]]),f=UC({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=Ns(r.dtype),g=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=su(o,a),c=new EA({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const d=bR({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=vA({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,t,p,r,a)},y=UC({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let x=y;if(null!=c){l.push(y);const e=Ai(c);x=ZC({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},oR];for(const e of RA)Yn(e)},8679:(e,t,n)=>{"use strict";var s=n(9864),r={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},o={};function l(e){return s.isMemo(e)?i:o[e.$$typeof]||r}o[s.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},o[s.Memo]=i;var u=Object.defineProperty,c=Object.getOwnPropertyNames,h=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,f=Object.prototype;e.exports=function e(t,n,s){if("string"!=typeof n){if(f){var r=p(n);r&&r!==f&&e(t,r,s)}var i=c(n);h&&(i=i.concat(h(n)));for(var o=l(t),m=l(n),g=0;g<i.length;++g){var b=i[g];if(!(a[b]||s&&s[b]||m&&m[b]||o&&o[b])){var y=d(n,b);try{u(t,b,y)}catch(e){}}}}return t}},9921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,s=n?Symbol.for("react.element"):60103,r=n?Symbol.for("react.portal"):60106,a=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,o=n?Symbol.for("react.profiler"):60114,l=n?Symbol.for("react.provider"):60109,u=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,h=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,f=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,g=n?Symbol.for("react.lazy"):60116,b=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,x=n?Symbol.for("react.responder"):60118,k=n?Symbol.for("react.scope"):60119;function w(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case s:switch(e=e.type){case c:case h:case a:case o:case i:case p:return e;default:switch(e=e&&e.$$typeof){case u:case d:case g:case m:case l:return e;default:return t}}case r:return t}}}function v(e){return w(e)===h}t.AsyncMode=c,t.ConcurrentMode=h,t.ContextConsumer=u,t.ContextProvider=l,t.Element=s,t.ForwardRef=d,t.Fragment=a,t.Lazy=g,t.Memo=m,t.Portal=r,t.Profiler=o,t.StrictMode=i,t.Suspense=p,t.isAsyncMode=function(e){return v(e)||w(e)===c},t.isConcurrentMode=v,t.isContextConsumer=function(e){return w(e)===u},t.isContextProvider=function(e){return w(e)===l},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===s},t.isForwardRef=function(e){return w(e)===d},t.isFragment=function(e){return w(e)===a},t.isLazy=function(e){return w(e)===g},t.isMemo=function(e){return w(e)===m},t.isPortal=function(e){return w(e)===r},t.isProfiler=function(e){return w(e)===o},t.isStrictMode=function(e){return w(e)===i},t.isSuspense=function(e){return w(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===h||e===o||e===i||e===p||e===f||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===m||e.$$typeof===l||e.$$typeof===u||e.$$typeof===d||e.$$typeof===y||e.$$typeof===x||e.$$typeof===k||e.$$typeof===b)},t.typeOf=w},9864:(e,t,n)=>{"use strict";e.exports=n(9921)},5666:e=>{var t=function(e){"use strict";var t,n=Object.prototype,s=n.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function u(e,t,n,s){var r=t&&t.prototype instanceof g?t:g,a=Object.create(r.prototype),i=new T(s||[]);return a._invoke=function(e,t,n){var s=h;return function(r,a){if(s===p)throw new Error("Generator is already running");if(s===f){if("throw"===r)throw a;return R()}for(n.method=r,n.arg=a;;){var i=n.delegate;if(i){var o=C(i,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(s===h)throw s=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);s=p;var l=c(e,t,n);if("normal"===l.type){if(s=n.done?f:d,l.arg===m)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(s=f,n.method="throw",n.arg=l.arg)}}}(e,n,i),a}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var h="suspendedStart",d="suspendedYield",p="executing",f="completed",m={};function g(){}function b(){}function y(){}var x={};x[a]=function(){return this};var k=Object.getPrototypeOf,w=k&&k(k(E([])));w&&w!==n&&s.call(w,a)&&(x=w);var v=y.prototype=g.prototype=Object.create(x);function I(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function $(e,t){function n(r,a,i,o){var l=c(e[r],e,a);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"==typeof h&&s.call(h,"__await")?t.resolve(h.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(h).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var r;this._invoke=function(e,s){function a(){return new t((function(t,r){n(e,s,t,r)}))}return r=r?r.then(a,a):a()}}function C(e,n){var s=e.iterator[n.method];if(s===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,C(e,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var r=c(s,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,m;var a=r.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function N(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function S(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(N,this),this.reset(!0)}function E(e){if(e){var n=e[a];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function n(){for(;++r<e.length;)if(s.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return b.prototype=v.constructor=y,y.constructor=b,b.displayName=l(y,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,l(e,o,"GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},I($.prototype),$.prototype[i]=function(){return this},e.AsyncIterator=$,e.async=function(t,n,s,r,a){void 0===a&&(a=Promise);var i=new $(u(t,n,s,r),a);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},I(v),l(v,o,"Generator"),v[a]=function(){return this},v.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var s=t.pop();if(s in e)return n.value=s,n.done=!1,n}return n.done=!0,n}},e.values=E,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(S),!e)for(var n in this)"t"===n.charAt(0)&&s.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(s,r){return o.type="throw",o.arg=e,n.next=s,r&&(n.method="next",n.arg=t),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var l=s.call(i,"catchLoc"),u=s.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&s.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),S(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var s=n.completion;if("throw"===s.type){var r=s.arg;S(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,s){return this.delegate={iterator:E(e),resultName:n,nextLoc:s},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}},6377:(e,t,n)=>{var s=n(4832),r=n(8652),a=n(801),i=n(2030),o=n(3618),l=n(9049),u=n(1971);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},4832:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var s;!function(r,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var s=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(r)]}}():e,3),s),p=new f(s),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=d&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=d&r+1],n=n*l+i[d&(i[r]=i[a=d&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function b(e,t){for(var n,s=e+"",r=0;r<s.length;)t[d&r]=d&(n^=19*t[d&r])+s.charCodeAt(r++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),r),e.exports){e.exports=p;try{i=n(3906)}catch(e){}}else void 0===(s=function(){return p}.call(t,n,t,e))||(e.exports=s)}([],Math)},6774:e=>{e.exports=function(e,t,n,s){var r=n?n.call(s,e,t):void 0;if(void 0!==r)return!!r;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var a=Object.keys(e),i=Object.keys(t);if(a.length!==i.length)return!1;for(var o=Object.prototype.hasOwnProperty.bind(t),l=0;l<a.length;l++){var u=a[l];if(!o(u))return!1;var c=e[u],h=t[u];if(!1===(r=n?n.call(s,c,h,u):void 0)||void 0===r&&c!==h)return!1}return!0}},9163:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>Re});var s=n(9864),r=n(7294),a=n(6774),i=n.n(a);const o=function(e){function t(e,s,l,u,d){for(var p,f,m,g,k,v=0,I=0,$=0,C=0,N=0,F=0,_=m=p=0,L=0,M=0,z=0,P=0,B=l.length,W=B-1,U="",V="",G="",H="";L<B;){if(f=l.charCodeAt(L),L===W&&0!==I+C+$+v&&(0!==I&&(f=47===I?10:47),C=$=v=0,B++,W++),0===I+C+$+v){if(L===W&&(0<M&&(U=U.replace(h,"")),0<U.trim().length)){switch(f){case 32:case 9:case 59:case 13:case 10:break;default:U+=l.charAt(L)}f=59}switch(f){case 123:for(p=(U=U.trim()).charCodeAt(0),m=1,P=++L;L<B;){switch(f=l.charCodeAt(L)){case 123:m++;break;case 125:m--;break;case 47:switch(f=l.charCodeAt(L+1)){case 42:case 47:e:{for(_=L+1;_<W;++_)switch(l.charCodeAt(_)){case 47:if(42===f&&42===l.charCodeAt(_-1)&&L+2!==_){L=_+1;break e}break;case 10:if(47===f){L=_+1;break e}}L=_}}break;case 91:f++;case 40:f++;case 34:case 39:for(;L++<W&&l.charCodeAt(L)!==f;);}if(0===m)break;L++}switch(m=l.substring(P,L),0===p&&(p=(U=U.replace(c,"").trim()).charCodeAt(0)),p){case 64:switch(0<M&&(U=U.replace(h,"")),f=U.charCodeAt(1)){case 100:case 109:case 115:case 45:M=s;break;default:M=A}if(P=(m=t(s,M,m,f,d+1)).length,0<D&&(k=o(3,m,M=n(A,U,z),s,T,S,P,f,d,u),U=M.join(""),void 0!==k&&0===(P=(m=k.trim()).length)&&(f=0,m="")),0<P)switch(f){case 115:U=U.replace(w,i);case 100:case 109:case 45:m=U+"{"+m+"}";break;case 107:m=(U=U.replace(b,"$1 $2"))+"{"+m+"}",m=1===R||2===R&&a("@"+m,3)?"@-webkit-"+m+"@"+m:"@"+m;break;default:m=U+m,112===u&&(V+=m,m="")}else m="";break;default:m=t(s,n(s,U,z),m,u,d+1)}G+=m,m=z=M=_=p=0,U="",f=l.charCodeAt(++L);break;case 125:case 59:if(1<(P=(U=(0<M?U.replace(h,""):U).trim()).length))switch(0===_&&(p=U.charCodeAt(0),45===p||96<p&&123>p)&&(P=(U=U.replace(" ",":")).length),0<D&&void 0!==(k=o(1,U,s,e,T,S,V.length,u,d,u))&&0===(P=(U=k.trim()).length)&&(U="\0\0"),p=U.charCodeAt(0),f=U.charCodeAt(1),p){case 0:break;case 64:if(105===f||99===f){H+=U+l.charAt(L);break}default:58!==U.charCodeAt(P-1)&&(V+=r(U,p,f,U.charCodeAt(2)))}z=M=_=p=0,U="",f=l.charCodeAt(++L)}}switch(f){case 13:case 10:47===I?I=0:0===1+p&&107!==u&&0<U.length&&(M=1,U+="\0"),0<D*O&&o(0,U,s,e,T,S,V.length,u,d,u),S=1,T++;break;case 59:case 125:if(0===I+C+$+v){S++;break}default:switch(S++,g=l.charAt(L),f){case 9:case 32:if(0===C+v+I)switch(N){case 44:case 58:case 9:case 32:g="";break;default:32!==f&&(g=" ")}break;case 0:g="\\0";break;case 12:g="\\f";break;case 11:g="\\v";break;case 38:0===C+I+v&&(M=z=1,g="\f"+g);break;case 108:if(0===C+I+v+E&&0<_)switch(L-_){case 2:112===N&&58===l.charCodeAt(L-3)&&(E=N);case 8:111===F&&(E=F)}break;case 58:0===C+I+v&&(_=L);break;case 44:0===I+$+C+v&&(M=1,g+="\r");break;case 34:case 39:0===I&&(C=C===f?0:0===C?f:C);break;case 91:0===C+I+$&&v++;break;case 93:0===C+I+$&&v--;break;case 41:0===C+I+v&&$--;break;case 40:if(0===C+I+v){if(0===p)switch(2*N+3*F){case 533:break;default:p=1}$++}break;case 64:0===I+$+C+v+_+m&&(m=1);break;case 42:case 47:if(!(0<C+v+$))switch(I){case 0:switch(2*f+3*l.charCodeAt(L+1)){case 235:I=47;break;case 220:P=L,I=42}break;case 42:47===f&&42===N&&P+2!==L&&(33===l.charCodeAt(P+2)&&(V+=l.substring(P,L+1)),g="",I=0)}}0===I&&(U+=g)}F=N,N=f,L++}if(0<(P=V.length)){if(M=s,0<D&&void 0!==(k=o(2,V,M,e,T,S,P,u,d,u))&&0===(V=k).length)return H+V+G;if(V=M.join(",")+"{"+V+"}",0!=R*E){switch(2!==R||a(V,2)||(E=0),E){case 111:V=V.replace(x,":-moz-$1")+V;break;case 112:V=V.replace(y,"::-webkit-input-$1")+V.replace(y,"::-moz-$1")+V.replace(y,":-ms-input-$1")+V}E=0}}return H+V+G}function n(e,t,n){var r=t.trim().split(m);t=r;var a=r.length,i=e.length;switch(i){case 0:case 1:var o=0;for(e=0===i?"":e[0]+" ";o<a;++o)t[o]=s(e,t[o],n).trim();break;default:var l=o=0;for(t=[];o<a;++o)for(var u=0;u<i;++u)t[l++]=s(e[u]+" ",r[o],n).trim()}return t}function s(e,t,n){var s=t.charCodeAt(0);switch(33>s&&(s=(t=t.trim()).charCodeAt(0)),s){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function r(e,t,n,s){var i=e+";",o=2*t+3*n+4*s;if(944===o){e=i.indexOf(":",9)+1;var l=i.substring(e,i.length-1).trim();return l=i.substring(0,e).trim()+l+";",1===R||2===R&&a(l,1)?"-webkit-"+l+l:l}if(0===R||2===R&&!a(i,1))return i;switch(o){case 1015:return 97===i.charCodeAt(10)?"-webkit-"+i+i:i;case 951:return 116===i.charCodeAt(3)?"-webkit-"+i+i:i;case 963:return 110===i.charCodeAt(5)?"-webkit-"+i+i:i;case 1009:if(100!==i.charCodeAt(4))break;case 969:case 942:return"-webkit-"+i+i;case 978:return"-webkit-"+i+"-moz-"+i+i;case 1019:case 983:return"-webkit-"+i+"-moz-"+i+"-ms-"+i+i;case 883:if(45===i.charCodeAt(8))return"-webkit-"+i+i;if(0<i.indexOf("image-set(",11))return i.replace(N,"$1-webkit-$2")+i;break;case 932:if(45===i.charCodeAt(4))switch(i.charCodeAt(5)){case 103:return"-webkit-box-"+i.replace("-grow","")+"-webkit-"+i+"-ms-"+i.replace("grow","positive")+i;case 115:return"-webkit-"+i+"-ms-"+i.replace("shrink","negative")+i;case 98:return"-webkit-"+i+"-ms-"+i.replace("basis","preferred-size")+i}return"-webkit-"+i+"-ms-"+i+i;case 964:return"-webkit-"+i+"-ms-flex-"+i+i;case 1023:if(99!==i.charCodeAt(8))break;return"-webkit-box-pack"+(l=i.substring(i.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+i+"-ms-flex-pack"+l+i;case 1005:return p.test(i)?i.replace(d,":-webkit-")+i.replace(d,":-moz-")+i:i;case 1e3:switch(t=(l=i.substring(13).trim()).indexOf("-")+1,l.charCodeAt(0)+l.charCodeAt(t)){case 226:l=i.replace(k,"tb");break;case 232:l=i.replace(k,"tb-rl");break;case 220:l=i.replace(k,"lr");break;default:return i}return"-webkit-"+i+"-ms-"+l+i;case 1017:if(-1===i.indexOf("sticky",9))break;case 975:switch(t=(i=e).length-10,o=(l=(33===i.charCodeAt(t)?i.substring(0,t):i).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|l.charCodeAt(7))){case 203:if(111>l.charCodeAt(8))break;case 115:i=i.replace(l,"-webkit-"+l)+";"+i;break;case 207:case 102:i=i.replace(l,"-webkit-"+(102<o?"inline-":"")+"box")+";"+i.replace(l,"-webkit-"+l)+";"+i.replace(l,"-ms-"+l+"box")+";"+i}return i+";";case 938:if(45===i.charCodeAt(5))switch(i.charCodeAt(6)){case 105:return l=i.replace("-items",""),"-webkit-"+i+"-webkit-box-"+l+"-ms-flex-"+l+i;case 115:return"-webkit-"+i+"-ms-flex-item-"+i.replace(I,"")+i;default:return"-webkit-"+i+"-ms-flex-line-pack"+i.replace("align-content","").replace(I,"")+i}break;case 973:case 989:if(45!==i.charCodeAt(3)||122===i.charCodeAt(4))break;case 931:case 953:if(!0===C.test(e))return 115===(l=e.substring(e.indexOf(":")+1)).charCodeAt(0)?r(e.replace("stretch","fill-available"),t,n,s).replace(":fill-available",":stretch"):i.replace(l,"-webkit-"+l)+i.replace(l,"-moz-"+l.replace("fill-",""))+i;break;case 962:if(i="-webkit-"+i+(102===i.charCodeAt(5)?"-ms-"+i:"")+i,211===n+s&&105===i.charCodeAt(13)&&0<i.indexOf("transform",10))return i.substring(0,i.indexOf(";",27)+1).replace(f,"$1-webkit-$2")+i}return i}function a(e,t){var n=e.indexOf(1===t?":":"{"),s=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),_(2!==t?s:s.replace($,"$1"),n,t)}function i(e,t){var n=r(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(v," or ($1)").substring(4):"("+t+")"}function o(e,t,n,s,r,a,i,o,l,c){for(var h,d=0,p=t;d<D;++d)switch(h=F[d].call(u,e,p,n,s,r,a,i,o,l,c)){case void 0:case!1:case!0:case null:break;default:p=h}if(p!==t)return p}function l(e){return void 0!==(e=e.prefix)&&(_=null,e?"function"!=typeof e?R=1:(R=2,_=e):R=0),l}function u(e,n){var s=e;if(33>s.charCodeAt(0)&&(s=s.trim()),s=[s],0<D){var r=o(-1,n,s,s,T,S,0,0,0,0);void 0!==r&&"string"==typeof r&&(n=r)}var a=t(A,s,n,0,0);return 0<D&&void 0!==(r=o(-2,a,s,s,T,S,a.length,0,0,0))&&(a=r),E=0,S=T=1,a}var c=/^\0+/g,h=/[\0\r\f]/g,d=/: */g,p=/zoo|gra/,f=/([,: ])(transform)/g,m=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,b=/@(k\w+)\s*(\S*)\s*/,y=/::(place)/g,x=/:(read-only)/g,k=/[svh]\w+-[tblr]{2}/,w=/\(\s*(.*)\s*\)/g,v=/([\s\S]*?);/g,I=/-self|flex-/g,$=/[^]*?(:[rp][el]a[\w-]+)[^]*/,C=/stretch|:\s*\w+\-(?:conte|avail)/,N=/([^-])(image-set\()/,S=1,T=1,E=0,R=1,A=[],F=[],D=0,_=null,O=0;return u.use=function e(t){switch(t){case void 0:case null:D=F.length=0;break;default:if("function"==typeof t)F[D++]=t;else if("object"==typeof t)for(var n=0,s=t.length;n<s;++n)e(t[n]);else O=0|!!t}return e},u.set=l,void 0!==e&&l(e),u},l={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var u=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const c=(h={},function(e){return void 0===h[e]&&(h[e]=(t=e,u.test(t)||111===t.charCodeAt(0)&&110===t.charCodeAt(1)&&t.charCodeAt(2)<91)),h[e];var t});var h,d=n(8679),p=n.n(d);function f(){return(f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e}).apply(this,arguments)}var m=function(e,t){for(var n=[e[0]],s=0,r=t.length;s<r;s+=1)n.push(t[s],e[s+1]);return n},g=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,s.typeOf)(e)},b=Object.freeze([]),y=Object.freeze({});function x(e){return"function"==typeof e}function k(e){return e.displayName||e.name||"Component"}function w(e){return e&&"string"==typeof e.styledComponentId}var v="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",I="undefined"!=typeof window&&"HTMLElement"in window,$=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY);function C(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),s=1;s<t;s++)n[s-1]=arguments[s];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):""))}var N=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,s=n.length,r=s;e>=r;)(r<<=1)<0&&C(16,""+e);this.groupSizes=new Uint32Array(r),this.groupSizes.set(n),this.length=r;for(var a=s;a<r;a++)this.groupSizes[a]=0}for(var i=this.indexOfGroup(e+1),o=0,l=t.length;o<l;o++)this.tag.insertRule(i,t[o])&&(this.groupSizes[e]++,i++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),s=n+t;this.groupSizes[e]=0;for(var r=n;r<s;r++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],s=this.indexOfGroup(e),r=s+n,a=s;a<r;a++)t+=this.tag.getRule(a)+"/*!sc*/\n";return t},e}(),S=new Map,T=new Map,E=1,R=function(e){if(S.has(e))return S.get(e);for(;T.has(E);)E++;var t=E++;return S.set(e,t),T.set(t,e),t},A=function(e){return T.get(e)},F=function(e,t){S.set(e,t),T.set(t,e)},D="style["+v+'][data-styled-version="5.2.1"]',_=new RegExp("^"+v+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),O=function(e,t,n){for(var s,r=n.split(","),a=0,i=r.length;a<i;a++)(s=r[a])&&e.registerName(t,s)},L=function(e,t){for(var n=t.innerHTML.split("/*!sc*/\n"),s=[],r=0,a=n.length;r<a;r++){var i=n[r].trim();if(i){var o=i.match(_);if(o){var l=0|parseInt(o[1],10),u=o[2];0!==l&&(F(u,l),O(e,u,o[3]),e.getTag().insertRules(l,s)),s.length=0}else s.push(i)}}},M=function(){return n.nc},z=function(e){var t=document.head,n=e||t,s=document.createElement("style"),r=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var s=t[n];if(s&&1===s.nodeType&&s.hasAttribute(v))return s}}(n),a=void 0!==r?r.nextSibling:null;s.setAttribute(v,"active"),s.setAttribute("data-styled-version","5.2.1");var i=M();return i&&s.setAttribute("nonce",i),n.insertBefore(s,a),s},P=function(){function e(e){var t=this.element=z(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,s=t.length;n<s;n++){var r=t[n];if(r.ownerNode===e)return r}C(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),B=function(){function e(e){var t=this.element=z(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),s=this.nodes[e];return this.element.insertBefore(n,s||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),W=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),U=I,V={isServer:!I,useCSSOMInjection:!$},G=function(){function e(e,t,n){void 0===e&&(e=y),void 0===t&&(t={}),this.options=f({},V,{},e),this.gs=t,this.names=new Map(n),!this.options.isServer&&I&&U&&(U=!1,function(e){for(var t=document.querySelectorAll(D),n=0,s=t.length;n<s;n++){var r=t[n];r&&"active"!==r.getAttribute(v)&&(L(e,r),r.parentNode&&r.parentNode.removeChild(r))}}(this))}e.registerId=function(e){return R(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(f({},this.options,{},t),this.gs,n&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,s=t.useCSSOMInjection,r=t.target,e=n?new W(r):s?new P(r):new B(r),new N(e)));var e,t,n,s,r},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(R(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(R(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(R(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,s="",r=0;r<n;r++){var a=A(r);if(void 0!==a){var i=e.names.get(a),o=t.getGroup(r);if(void 0!==i&&0!==o.length){var l=v+".g"+r+'[id="'+a+'"]',u="";void 0!==i&&i.forEach((function(e){e.length>0&&(u+=e+",")})),s+=""+o+l+'{content:"'+u+'"}/*!sc*/\n'}}}return s}(this)},e}(),H=/(a)(d)/gi,j=function(e){return String.fromCharCode(e+(e>25?39:97))};function K(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=j(t%52)+n;return(j(t%52)+n).replace(H,"$1-$2")}var q=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},X=function(e){return q(5381,e)};function Y(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(x(n)&&!w(n))return!1}return!0}var J=X("5.2.1"),Z=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===n||n.isStatic)&&Y(e),this.componentId=t,this.baseHash=q(J,t),this.baseStyle=n,G.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var s=this.componentId,r=[];if(this.baseStyle&&r.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(s,this.staticRulesId))r.push(this.staticRulesId);else{var a=me(this.rules,e,t,n).join(""),i=K(q(this.baseHash,a.length)>>>0);if(!t.hasNameForId(s,i)){var o=n(a,"."+i,void 0,s);t.insertRules(s,i,o)}r.push(i),this.staticRulesId=i}else{for(var l=this.rules.length,u=q(this.baseHash,n.hash),c="",h=0;h<l;h++){var d=this.rules[h];if("string"==typeof d)c+=d;else if(d){var p=me(d,e,t,n),f=Array.isArray(p)?p.join(""):p;u=q(u,f+h),c+=f}}if(c){var m=K(u>>>0);if(!t.hasNameForId(s,m)){var g=n(c,"."+m,void 0,s);t.insertRules(s,m,g)}r.push(m)}}return r.join(" ")},e}(),Q=/^\s*\/\/.*$/gm,ee=[":","[",".","#"];function te(e){var t,n,s,r,a=void 0===e?y:e,i=a.options,l=void 0===i?y:i,u=a.plugins,c=void 0===u?b:u,h=new o(l),d=[],p=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,s,r,a,i,o,l,u,c,h){switch(n){case 1:if(0===c&&64===s.charCodeAt(0))return e(s+";"),"";break;case 2:if(0===u)return s+"/*|*/";break;case 3:switch(u){case 102:case 112:return e(r[0]+s),"";default:return s+(0===h?"/*|*/":"")}case-2:s.split("/*|*/}").forEach(t)}}}((function(e){d.push(e)})),f=function(e,s,a){return 0===s&&ee.includes(a[n.length])||a.match(r)?e:"."+t};function m(e,a,i,o){void 0===o&&(o="&");var l=e.replace(Q,""),u=a&&i?i+" "+a+" { "+l+" }":l;return t=o,n=a,s=new RegExp("\\"+n+"\\b","g"),r=new RegExp("(\\"+n+"\\b){2,}"),h(i||!a?"":a,u)}return h.use([].concat(c,[function(e,t,r){2===e&&r.length&&r[0].lastIndexOf(n)>0&&(r[0]=r[0].replace(s,f))},p,function(e){if(-2===e){var t=d;return d=[],t}}])),m.hash=c.length?c.reduce((function(e,t){return t.name||C(15),q(e,t.name)}),5381).toString():"",m}var ne=r.createContext(),se=(ne.Consumer,r.createContext()),re=(se.Consumer,new G),ae=te();function ie(){return(0,r.useContext)(ne)||re}function oe(e){var t=(0,r.useState)(e.stylisPlugins),n=t[0],s=t[1],a=ie(),o=(0,r.useMemo)((function(){var t=a;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),l=(0,r.useMemo)((function(){return te({options:{prefix:!e.disableVendorPrefixes},plugins:n})}),[e.disableVendorPrefixes,n]);return(0,r.useEffect)((function(){i()(n,e.stylisPlugins)||s(e.stylisPlugins)}),[e.stylisPlugins]),r.createElement(ne.Provider,{value:o},r.createElement(se.Provider,{value:l},e.children))}var le=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=ae);var s=n.name+t.hash;e.hasNameForId(n.id,s)||e.insertRules(n.id,s,t(n.rules,s,"@keyframes"))},this.toString=function(){return C(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=ae),this.name+e.hash},e}(),ue=/([A-Z])/,ce=/([A-Z])/g,he=/^ms-/,de=function(e){return"-"+e.toLowerCase()};function pe(e){return ue.test(e)?e.replace(ce,de).replace(he,"-ms-"):e}var fe=function(e){return null==e||!1===e||""===e};function me(e,t,n,s){if(Array.isArray(e)){for(var r,a=[],i=0,o=e.length;i<o;i+=1)""!==(r=me(e[i],t,n,s))&&(Array.isArray(r)?a.push.apply(a,r):a.push(r));return a}return fe(e)?"":w(e)?"."+e.styledComponentId:x(e)?"function"!=typeof(u=e)||u.prototype&&u.prototype.isReactComponent||!t?e:me(e(t),t,n,s):e instanceof le?n?(e.inject(n,s),e.getName(s)):e:g(e)?function e(t,n){var s,r,a=[];for(var i in t)t.hasOwnProperty(i)&&!fe(t[i])&&(g(t[i])?a.push.apply(a,e(t[i],i)):x(t[i])?a.push(pe(i)+":",t[i],";"):a.push(pe(i)+": "+(s=i,(null==(r=t[i])||"boolean"==typeof r||""===r?"":"number"!=typeof r||0===r||s in l?String(r).trim():r+"px")+";")));return n?[n+" {"].concat(a,["}"]):a}(e):e.toString();var u}function ge(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),s=1;s<t;s++)n[s-1]=arguments[s];return x(e)||g(e)?me(m(b,[e].concat(n))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:me(m(e,n))}new Set;var be=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,ye=/(^-|-$)/g;function xe(e){return e.replace(be,"-").replace(ye,"")}function ke(e){return"string"==typeof e&&!0}var we=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},ve=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function Ie(e,t,n){var s=e[n];we(t)&&we(s)?$e(s,t):e[n]=t}function $e(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),s=1;s<t;s++)n[s-1]=arguments[s];for(var r=0,a=n;r<a.length;r++){var i=a[r];if(we(i))for(var o in i)ve(o)&&Ie(e,i[o],o)}return e}var Ce=r.createContext();Ce.Consumer;var Ne={};function Se(e,t,n){var s=w(e),a=!ke(e),i=t.attrs,o=void 0===i?b:i,l=t.componentId,u=void 0===l?function(e,t){var n="string"!=typeof e?"sc":xe(e);Ne[n]=(Ne[n]||0)+1;var s=n+"-"+function(e){return K(X(e)>>>0)}("5.2.1"+n+Ne[n]);return t?t+"-"+s:s}(t.displayName,t.parentComponentId):l,h=t.displayName,d=void 0===h?function(e){return ke(e)?"styled."+e:"Styled("+k(e)+")"}(e):h,m=t.displayName&&t.componentId?xe(t.displayName)+"-"+t.componentId:t.componentId||u,g=s&&e.attrs?Array.prototype.concat(e.attrs,o).filter(Boolean):o,v=t.shouldForwardProp;s&&e.shouldForwardProp&&(v=t.shouldForwardProp?function(n,s){return e.shouldForwardProp(n,s)&&t.shouldForwardProp(n,s)}:e.shouldForwardProp);var I,$=new Z(n,m,s?e.componentStyle:void 0),C=$.isStatic&&0===o.length,N=function(e,t){return function(e,t,n,s){var a=e.attrs,i=e.componentStyle,o=e.defaultProps,l=e.foldedComponentIds,u=e.shouldForwardProp,h=e.styledComponentId,d=e.target,p=function(e,t,n){void 0===e&&(e=y);var s=f({},t,{theme:e}),r={};return n.forEach((function(e){var t,n,a,i=e;for(t in x(i)&&(i=i(s)),i)s[t]=r[t]="className"===t?(n=r[t],a=i[t],n&&a?n+" "+a:n||a):i[t]})),[s,r]}(function(e,t,n){return void 0===n&&(n=y),e.theme!==n.theme&&e.theme||t||n.theme}(t,(0,r.useContext)(Ce),o)||y,t,a),m=p[0],g=p[1],b=function(e,t,n,s){var a=ie(),i=(0,r.useContext)(se)||ae;return t?e.generateAndInjectStyles(y,a,i):e.generateAndInjectStyles(n,a,i)}(i,s,m),k=n,w=g.$as||t.$as||g.as||t.as||d,v=ke(w),I=g!==t?f({},t,{},g):t,$={};for(var C in I)"$"!==C[0]&&"as"!==C&&("forwardedAs"===C?$.as=I[C]:(u?u(C,c):!v||c(C))&&($[C]=I[C]));return t.style&&g.style!==t.style&&($.style=f({},t.style,{},g.style)),$.className=Array.prototype.concat(l,h,b!==h?b:null,t.className,g.className).filter(Boolean).join(" "),$.ref=k,(0,r.createElement)(w,$)}(I,e,t,C)};return N.displayName=d,(I=r.forwardRef(N)).attrs=g,I.componentStyle=$,I.displayName=d,I.shouldForwardProp=v,I.foldedComponentIds=s?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):b,I.styledComponentId=m,I.target=s?e.target:e,I.withComponent=function(e){var s=t.componentId,r=function(e,t){if(null==e)return{};var n,s,r={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(t,["componentId"]),a=s&&s+"-"+(ke(e)?e:xe(k(e)));return Se(e,f({},r,{attrs:g,componentId:a}),n)},Object.defineProperty(I,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=s?$e({},e.defaultProps,t):t}}),I.toString=function(){return"."+I.styledComponentId},a&&p()(I,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),I}var Te,Ee=function(e){return function e(t,n,r){if(void 0===r&&(r=y),!(0,s.isValidElementType)(n))return C(1,String(n));var a=function(){return t(n,r,ge.apply(void 0,arguments))};return a.withConfig=function(s){return e(t,n,f({},r,{},s))},a.attrs=function(s){return e(t,n,f({},r,{attrs:Array.prototype.concat(r.attrs,s).filter(Boolean)}))},a}(Se,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){Ee[e]=Ee(e)})),(Te=function(e,t){this.rules=e,this.componentId=t,this.isStatic=Y(e),G.registerId(this.componentId+1)}.prototype).createStyles=function(e,t,n,s){var r=s(me(this.rules,t,n,s).join(""),""),a=this.componentId+e;n.insertRules(a,a,r)},Te.removeStyles=function(e,t){t.clearRules(this.componentId+e)},Te.renderStyles=function(e,t,n,s){e>2&&G.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,s)},function(){var e=function(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString(),n=M();return"<style "+[n&&'nonce="'+n+'"',v+'="true"','data-styled-version="5.2.1"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?C(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return C(2);var n=((t={})[v]="",t["data-styled-version"]="5.2.1",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),s=M();return s&&(n.nonce=s),[r.createElement("style",f({},n,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new G({isServer:!0}),this.sealed=!1}.prototype;e.collectStyles=function(e){return this.sealed?C(2):r.createElement(oe,{sheet:this.instance},e)},e.interleaveWithNodeStream=function(e){return C(3)}}();const Re=Ee}}]);
//# sourceMappingURL=177.46034daf.map